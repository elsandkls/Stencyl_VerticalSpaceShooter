// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_de_polygonal_ds_Collection
#include <de/polygonal/ds/Collection.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_Hashable
#include <de/polygonal/ds/Hashable.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_IntIntHashTable
#include <de/polygonal/ds/IntIntHashTable.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_IntIntHashTableKeyIterator
#include <de/polygonal/ds/IntIntHashTableKeyIterator.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_Itr
#include <de/polygonal/ds/Itr.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_Map
#include <de/polygonal/ds/Map.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_33539d0ddbc94641_1692_new,"de.polygonal.ds.IntIntHashTableKeyIterator","new",0xe402d8e8,"de.polygonal.ds.IntIntHashTableKeyIterator.new","de/polygonal/ds/IntIntHashTable.hx",1692,0x39674de6)
HX_LOCAL_STACK_FRAME(_hx_pos_33539d0ddbc94641_1701_free,"de.polygonal.ds.IntIntHashTableKeyIterator","free",0x993b0b24,"de.polygonal.ds.IntIntHashTableKeyIterator.free","de/polygonal/ds/IntIntHashTable.hx",1701,0x39674de6)
HX_LOCAL_STACK_FRAME(_hx_pos_33539d0ddbc94641_1707_reset,"de.polygonal.ds.IntIntHashTableKeyIterator","reset",0x5ab08457,"de.polygonal.ds.IntIntHashTableKeyIterator.reset","de/polygonal/ds/IntIntHashTable.hx",1707,0x39674de6)
HX_LOCAL_STACK_FRAME(_hx_pos_33539d0ddbc94641_1717_hasNext,"de.polygonal.ds.IntIntHashTableKeyIterator","hasNext",0x829891f5,"de.polygonal.ds.IntIntHashTableKeyIterator.hasNext","de/polygonal/ds/IntIntHashTable.hx",1717,0x39674de6)
HX_LOCAL_STACK_FRAME(_hx_pos_33539d0ddbc94641_1721_next,"de.polygonal.ds.IntIntHashTableKeyIterator","next",0x9e7af36b,"de.polygonal.ds.IntIntHashTableKeyIterator.next","de/polygonal/ds/IntIntHashTable.hx",1721,0x39674de6)
HX_LOCAL_STACK_FRAME(_hx_pos_33539d0ddbc94641_1729_remove,"de.polygonal.ds.IntIntHashTableKeyIterator","remove",0xfbd398bc,"de.polygonal.ds.IntIntHashTableKeyIterator.remove","de/polygonal/ds/IntIntHashTable.hx",1729,0x39674de6)
HX_LOCAL_STACK_FRAME(_hx_pos_33539d0ddbc94641_1734_scan,"de.polygonal.ds.IntIntHashTableKeyIterator","scan",0xa1c76bf5,"de.polygonal.ds.IntIntHashTableKeyIterator.scan","de/polygonal/ds/IntIntHashTable.hx",1734,0x39674de6)
namespace de{
namespace polygonal{
namespace ds{

void IntIntHashTableKeyIterator_obj::__construct( ::de::polygonal::ds::IntIntHashTable x){
            	HX_STACKFRAME(&_hx_pos_33539d0ddbc94641_1692_new)
HXLINE(1693)		this->mObject = x;
HXLINE(1694)		this->mData = x->mData;
HXLINE(1695)		this->mI = (int)0;
HXLINE(1696)		this->mS = x->capacity;
HXLINE(1697)		this->scan();
            	}

Dynamic IntIntHashTableKeyIterator_obj::__CreateEmpty() { return new IntIntHashTableKeyIterator_obj; }

void *IntIntHashTableKeyIterator_obj::_hx_vtable = 0;

Dynamic IntIntHashTableKeyIterator_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< IntIntHashTableKeyIterator_obj > _hx_result = new IntIntHashTableKeyIterator_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool IntIntHashTableKeyIterator_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1ce6d09c;
}

static ::de::polygonal::ds::Itr_obj _hx_de_polygonal_ds_IntIntHashTableKeyIterator__hx_de_polygonal_ds_Itr= {
	( bool (hx::Object::*)())&::de::polygonal::ds::IntIntHashTableKeyIterator_obj::hasNext,
	(  ::Dynamic (hx::Object::*)())&::de::polygonal::ds::IntIntHashTableKeyIterator_obj::next_8b3ae2fb,
	( void (hx::Object::*)())&::de::polygonal::ds::IntIntHashTableKeyIterator_obj::remove,
	( ::Dynamic (hx::Object::*)())&::de::polygonal::ds::IntIntHashTableKeyIterator_obj::reset,
};

 ::Dynamic IntIntHashTableKeyIterator_obj::next_8b3ae2fb() {
			return next();
}
void *IntIntHashTableKeyIterator_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x312668d4: return &_hx_de_polygonal_ds_IntIntHashTableKeyIterator__hx_de_polygonal_ds_Itr;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void IntIntHashTableKeyIterator_obj::free(){
            	HX_STACKFRAME(&_hx_pos_33539d0ddbc94641_1701_free)
HXLINE(1702)		this->mObject = null();
HXLINE(1703)		this->mData = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntIntHashTableKeyIterator_obj,free,(void))

::Dynamic IntIntHashTableKeyIterator_obj::reset(){
            	HX_STACKFRAME(&_hx_pos_33539d0ddbc94641_1707_reset)
HXLINE(1708)		this->mData = this->mObject->mData;
HXLINE(1709)		this->mI = (int)0;
HXLINE(1710)		this->mS = this->mObject->capacity;
HXLINE(1711)		this->scan();
HXLINE(1712)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntIntHashTableKeyIterator_obj,reset,return )

bool IntIntHashTableKeyIterator_obj::hasNext(){
            	HX_STACKFRAME(&_hx_pos_33539d0ddbc94641_1717_hasNext)
HXDLIN(1717)		return (this->mI < this->mS);
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntIntHashTableKeyIterator_obj,hasNext,return )

int IntIntHashTableKeyIterator_obj::next(){
            	HX_STACKFRAME(&_hx_pos_33539d0ddbc94641_1721_next)
HXLINE(1722)		int key = this->mData->__get((this->mI++ * (int)3));
HXLINE(1723)		this->scan();
HXLINE(1724)		return key;
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntIntHashTableKeyIterator_obj,next,return )

void IntIntHashTableKeyIterator_obj::remove(){
            	HX_STACKFRAME(&_hx_pos_33539d0ddbc94641_1729_remove)
HXDLIN(1729)		HX_STACK_DO_THROW(HX_("unsupported operation",fc,a0,58,a5));
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntIntHashTableKeyIterator_obj,remove,(void))

void IntIntHashTableKeyIterator_obj::scan(){
            	HX_STACKFRAME(&_hx_pos_33539d0ddbc94641_1734_scan)
HXDLIN(1734)		while(true){
HXDLIN(1734)			bool _hx_tmp;
HXDLIN(1734)			if ((this->mI < this->mS)) {
HXDLIN(1734)				_hx_tmp = (this->mData->__get(((this->mI * (int)3) + (int)1)) == (int)-2147483647);
            			}
            			else {
HXDLIN(1734)				_hx_tmp = false;
            			}
HXDLIN(1734)			if (!(_hx_tmp)) {
HXDLIN(1734)				goto _hx_goto_6;
            			}
HXDLIN(1734)			this->mI++;
            		}
            		_hx_goto_6:;
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntIntHashTableKeyIterator_obj,scan,(void))


hx::ObjectPtr< IntIntHashTableKeyIterator_obj > IntIntHashTableKeyIterator_obj::__new( ::de::polygonal::ds::IntIntHashTable x) {
	hx::ObjectPtr< IntIntHashTableKeyIterator_obj > __this = new IntIntHashTableKeyIterator_obj();
	__this->__construct(x);
	return __this;
}

hx::ObjectPtr< IntIntHashTableKeyIterator_obj > IntIntHashTableKeyIterator_obj::__alloc(hx::Ctx *_hx_ctx, ::de::polygonal::ds::IntIntHashTable x) {
	IntIntHashTableKeyIterator_obj *__this = (IntIntHashTableKeyIterator_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(IntIntHashTableKeyIterator_obj), true, "de.polygonal.ds.IntIntHashTableKeyIterator"));
	*(void **)__this = IntIntHashTableKeyIterator_obj::_hx_vtable;
	__this->__construct(x);
	return __this;
}

IntIntHashTableKeyIterator_obj::IntIntHashTableKeyIterator_obj()
{
}

void IntIntHashTableKeyIterator_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(IntIntHashTableKeyIterator);
	HX_MARK_MEMBER_NAME(mObject,"mObject");
	HX_MARK_MEMBER_NAME(mI,"mI");
	HX_MARK_MEMBER_NAME(mS,"mS");
	HX_MARK_MEMBER_NAME(mData,"mData");
	HX_MARK_END_CLASS();
}

void IntIntHashTableKeyIterator_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(mObject,"mObject");
	HX_VISIT_MEMBER_NAME(mI,"mI");
	HX_VISIT_MEMBER_NAME(mS,"mS");
	HX_VISIT_MEMBER_NAME(mData,"mData");
}

hx::Val IntIntHashTableKeyIterator_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"mI") ) { return hx::Val( mI ); }
		if (HX_FIELD_EQ(inName,"mS") ) { return hx::Val( mS ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"free") ) { return hx::Val( free_dyn() ); }
		if (HX_FIELD_EQ(inName,"next") ) { return hx::Val( next_dyn() ); }
		if (HX_FIELD_EQ(inName,"scan") ) { return hx::Val( scan_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"mData") ) { return hx::Val( mData ); }
		if (HX_FIELD_EQ(inName,"reset") ) { return hx::Val( reset_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"mObject") ) { return hx::Val( mObject ); }
		if (HX_FIELD_EQ(inName,"hasNext") ) { return hx::Val( hasNext_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val IntIntHashTableKeyIterator_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"mI") ) { mI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"mS") ) { mS=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"mData") ) { mData=inValue.Cast< ::Array< int > >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"mObject") ) { mObject=inValue.Cast<  ::de::polygonal::ds::IntIntHashTable >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void IntIntHashTableKeyIterator_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("mObject","\x0c","\x83","\x77","\xfe"));
	outFields->push(HX_HCSTRING("mI","\x3c","\x5f","\x00","\x00"));
	outFields->push(HX_HCSTRING("mS","\x46","\x5f","\x00","\x00"));
	outFields->push(HX_HCSTRING("mData","\x37","\xbd","\xe9","\xef"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo IntIntHashTableKeyIterator_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::de::polygonal::ds::IntIntHashTable*/ ,(int)offsetof(IntIntHashTableKeyIterator_obj,mObject),HX_HCSTRING("mObject","\x0c","\x83","\x77","\xfe")},
	{hx::fsInt,(int)offsetof(IntIntHashTableKeyIterator_obj,mI),HX_HCSTRING("mI","\x3c","\x5f","\x00","\x00")},
	{hx::fsInt,(int)offsetof(IntIntHashTableKeyIterator_obj,mS),HX_HCSTRING("mS","\x46","\x5f","\x00","\x00")},
	{hx::fsObject /*Array< int >*/ ,(int)offsetof(IntIntHashTableKeyIterator_obj,mData),HX_HCSTRING("mData","\x37","\xbd","\xe9","\xef")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *IntIntHashTableKeyIterator_obj_sStaticStorageInfo = 0;
#endif

static ::String IntIntHashTableKeyIterator_obj_sMemberFields[] = {
	HX_HCSTRING("mObject","\x0c","\x83","\x77","\xfe"),
	HX_HCSTRING("mI","\x3c","\x5f","\x00","\x00"),
	HX_HCSTRING("mS","\x46","\x5f","\x00","\x00"),
	HX_HCSTRING("mData","\x37","\xbd","\xe9","\xef"),
	HX_HCSTRING("free","\xac","\x9c","\xc2","\x43"),
	HX_HCSTRING("reset","\xcf","\x49","\xc8","\xe6"),
	HX_HCSTRING("hasNext","\x6d","\xa5","\x46","\x18"),
	HX_HCSTRING("next","\xf3","\x84","\x02","\x49"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("scan","\x7d","\xfd","\x4e","\x4c"),
	::String(null()) };

static void IntIntHashTableKeyIterator_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(IntIntHashTableKeyIterator_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void IntIntHashTableKeyIterator_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(IntIntHashTableKeyIterator_obj::__mClass,"__mClass");
};

#endif

hx::Class IntIntHashTableKeyIterator_obj::__mClass;

void IntIntHashTableKeyIterator_obj::__register()
{
	hx::Object *dummy = new IntIntHashTableKeyIterator_obj;
	IntIntHashTableKeyIterator_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("de.polygonal.ds.IntIntHashTableKeyIterator","\xf6","\x84","\x22","\x03");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = IntIntHashTableKeyIterator_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(IntIntHashTableKeyIterator_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< IntIntHashTableKeyIterator_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = IntIntHashTableKeyIterator_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IntIntHashTableKeyIterator_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IntIntHashTableKeyIterator_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace de
} // end namespace polygonal
} // end namespace ds
