// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_de_polygonal__Printf_FormatFlags
#include <de/polygonal/_Printf/FormatFlags.h>
#endif
namespace de{
namespace polygonal{
namespace _Printf{

::de::polygonal::_Printf::FormatFlags FormatFlags_obj::LengthH;

::de::polygonal::_Printf::FormatFlags FormatFlags_obj::LengthL;

::de::polygonal::_Printf::FormatFlags FormatFlags_obj::Lengthl;

::de::polygonal::_Printf::FormatFlags FormatFlags_obj::Minus;

::de::polygonal::_Printf::FormatFlags FormatFlags_obj::Plus;

::de::polygonal::_Printf::FormatFlags FormatFlags_obj::Sharp;

::de::polygonal::_Printf::FormatFlags FormatFlags_obj::Space;

::de::polygonal::_Printf::FormatFlags FormatFlags_obj::UpperCase;

::de::polygonal::_Printf::FormatFlags FormatFlags_obj::Zero;

bool FormatFlags_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LengthH",82,dc,eb,54)) { outValue = FormatFlags_obj::LengthH; return true; }
	if (inName==HX_("LengthL",86,dc,eb,54)) { outValue = FormatFlags_obj::LengthL; return true; }
	if (inName==HX_("Lengthl",a6,dc,eb,54)) { outValue = FormatFlags_obj::Lengthl; return true; }
	if (inName==HX_("Minus",50,f0,95,9b)) { outValue = FormatFlags_obj::Minus; return true; }
	if (inName==HX_("Plus",7a,6b,33,35)) { outValue = FormatFlags_obj::Plus; return true; }
	if (inName==HX_("Sharp",ca,54,4a,0f)) { outValue = FormatFlags_obj::Sharp; return true; }
	if (inName==HX_("Space",a6,fc,93,14)) { outValue = FormatFlags_obj::Space; return true; }
	if (inName==HX_("UpperCase",12,9d,ea,73)) { outValue = FormatFlags_obj::UpperCase; return true; }
	if (inName==HX_("Zero",48,3b,ca,3b)) { outValue = FormatFlags_obj::Zero; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(FormatFlags_obj)

int FormatFlags_obj::__FindIndex(::String inName)
{
	if (inName==HX_("LengthH",82,dc,eb,54)) return 5;
	if (inName==HX_("LengthL",86,dc,eb,54)) return 6;
	if (inName==HX_("Lengthl",a6,dc,eb,54)) return 7;
	if (inName==HX_("Minus",50,f0,95,9b)) return 0;
	if (inName==HX_("Plus",7a,6b,33,35)) return 1;
	if (inName==HX_("Sharp",ca,54,4a,0f)) return 3;
	if (inName==HX_("Space",a6,fc,93,14)) return 2;
	if (inName==HX_("UpperCase",12,9d,ea,73)) return 8;
	if (inName==HX_("Zero",48,3b,ca,3b)) return 4;
	return super::__FindIndex(inName);
}

int FormatFlags_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("LengthH",82,dc,eb,54)) return 0;
	if (inName==HX_("LengthL",86,dc,eb,54)) return 0;
	if (inName==HX_("Lengthl",a6,dc,eb,54)) return 0;
	if (inName==HX_("Minus",50,f0,95,9b)) return 0;
	if (inName==HX_("Plus",7a,6b,33,35)) return 0;
	if (inName==HX_("Sharp",ca,54,4a,0f)) return 0;
	if (inName==HX_("Space",a6,fc,93,14)) return 0;
	if (inName==HX_("UpperCase",12,9d,ea,73)) return 0;
	if (inName==HX_("Zero",48,3b,ca,3b)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val FormatFlags_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("LengthH",82,dc,eb,54)) return LengthH;
	if (inName==HX_("LengthL",86,dc,eb,54)) return LengthL;
	if (inName==HX_("Lengthl",a6,dc,eb,54)) return Lengthl;
	if (inName==HX_("Minus",50,f0,95,9b)) return Minus;
	if (inName==HX_("Plus",7a,6b,33,35)) return Plus;
	if (inName==HX_("Sharp",ca,54,4a,0f)) return Sharp;
	if (inName==HX_("Space",a6,fc,93,14)) return Space;
	if (inName==HX_("UpperCase",12,9d,ea,73)) return UpperCase;
	if (inName==HX_("Zero",48,3b,ca,3b)) return Zero;
	return super::__Field(inName,inCallProp);
}

static ::String FormatFlags_obj_sStaticFields[] = {
	HX_("Minus",50,f0,95,9b),
	HX_("Plus",7a,6b,33,35),
	HX_("Space",a6,fc,93,14),
	HX_("Sharp",ca,54,4a,0f),
	HX_("Zero",48,3b,ca,3b),
	HX_("LengthH",82,dc,eb,54),
	HX_("LengthL",86,dc,eb,54),
	HX_("Lengthl",a6,dc,eb,54),
	HX_("UpperCase",12,9d,ea,73),
	::String(null())
};

static void FormatFlags_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FormatFlags_obj::LengthH,"LengthH");
	HX_MARK_MEMBER_NAME(FormatFlags_obj::LengthL,"LengthL");
	HX_MARK_MEMBER_NAME(FormatFlags_obj::Lengthl,"Lengthl");
	HX_MARK_MEMBER_NAME(FormatFlags_obj::Minus,"Minus");
	HX_MARK_MEMBER_NAME(FormatFlags_obj::Plus,"Plus");
	HX_MARK_MEMBER_NAME(FormatFlags_obj::Sharp,"Sharp");
	HX_MARK_MEMBER_NAME(FormatFlags_obj::Space,"Space");
	HX_MARK_MEMBER_NAME(FormatFlags_obj::UpperCase,"UpperCase");
	HX_MARK_MEMBER_NAME(FormatFlags_obj::Zero,"Zero");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FormatFlags_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FormatFlags_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(FormatFlags_obj::LengthH,"LengthH");
	HX_VISIT_MEMBER_NAME(FormatFlags_obj::LengthL,"LengthL");
	HX_VISIT_MEMBER_NAME(FormatFlags_obj::Lengthl,"Lengthl");
	HX_VISIT_MEMBER_NAME(FormatFlags_obj::Minus,"Minus");
	HX_VISIT_MEMBER_NAME(FormatFlags_obj::Plus,"Plus");
	HX_VISIT_MEMBER_NAME(FormatFlags_obj::Sharp,"Sharp");
	HX_VISIT_MEMBER_NAME(FormatFlags_obj::Space,"Space");
	HX_VISIT_MEMBER_NAME(FormatFlags_obj::UpperCase,"UpperCase");
	HX_VISIT_MEMBER_NAME(FormatFlags_obj::Zero,"Zero");
};
#endif

hx::Class FormatFlags_obj::__mClass;

Dynamic __Create_FormatFlags_obj() { return new FormatFlags_obj; }

void FormatFlags_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("de.polygonal._Printf.FormatFlags","\xa4","\x1f","\x33","\xaa"), hx::TCanCast< FormatFlags_obj >,FormatFlags_obj_sStaticFields,0,
	&__Create_FormatFlags_obj, &__Create,
	&super::__SGetClass(), &CreateFormatFlags_obj, FormatFlags_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , FormatFlags_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &FormatFlags_obj::__GetStatic;
}

void FormatFlags_obj::__boot()
{
LengthH = hx::CreateEnum< FormatFlags_obj >(HX_HCSTRING("LengthH","\x82","\xdc","\xeb","\x54"),5,0);
LengthL = hx::CreateEnum< FormatFlags_obj >(HX_HCSTRING("LengthL","\x86","\xdc","\xeb","\x54"),6,0);
Lengthl = hx::CreateEnum< FormatFlags_obj >(HX_HCSTRING("Lengthl","\xa6","\xdc","\xeb","\x54"),7,0);
Minus = hx::CreateEnum< FormatFlags_obj >(HX_HCSTRING("Minus","\x50","\xf0","\x95","\x9b"),0,0);
Plus = hx::CreateEnum< FormatFlags_obj >(HX_HCSTRING("Plus","\x7a","\x6b","\x33","\x35"),1,0);
Sharp = hx::CreateEnum< FormatFlags_obj >(HX_HCSTRING("Sharp","\xca","\x54","\x4a","\x0f"),3,0);
Space = hx::CreateEnum< FormatFlags_obj >(HX_HCSTRING("Space","\xa6","\xfc","\x93","\x14"),2,0);
UpperCase = hx::CreateEnum< FormatFlags_obj >(HX_HCSTRING("UpperCase","\x12","\x9d","\xea","\x73"),8,0);
Zero = hx::CreateEnum< FormatFlags_obj >(HX_HCSTRING("Zero","\x48","\x3b","\xca","\x3b"),4,0);
}


} // end namespace de
} // end namespace polygonal
} // end namespace _Printf
