// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_de_polygonal_ds_Collection
#include <de/polygonal/ds/Collection.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_Hashable
#include <de/polygonal/ds/Hashable.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_IntHashSet
#include <de/polygonal/ds/IntHashSet.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_IntHashSetIterator
#include <de/polygonal/ds/IntHashSetIterator.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_Itr
#include <de/polygonal/ds/Itr.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_Set
#include <de/polygonal/ds/Set.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_904850c9bcaa7c7d_877_new,"de.polygonal.ds.IntHashSetIterator","new",0x375224ae,"de.polygonal.ds.IntHashSetIterator.new","de/polygonal/ds/IntHashSet.hx",877,0x10fc5471)
HX_LOCAL_STACK_FRAME(_hx_pos_904850c9bcaa7c7d_886_free,"de.polygonal.ds.IntHashSetIterator","free",0x2b4e0c9e,"de.polygonal.ds.IntHashSetIterator.free","de/polygonal/ds/IntHashSet.hx",886,0x10fc5471)
HX_LOCAL_STACK_FRAME(_hx_pos_904850c9bcaa7c7d_892_reset,"de.polygonal.ds.IntHashSetIterator","reset",0x993ecd9d,"de.polygonal.ds.IntHashSetIterator.reset","de/polygonal/ds/IntHashSet.hx",892,0x10fc5471)
HX_LOCAL_STACK_FRAME(_hx_pos_904850c9bcaa7c7d_902_hasNext,"de.polygonal.ds.IntHashSetIterator","hasNext",0x384038bb,"de.polygonal.ds.IntHashSetIterator.hasNext","de/polygonal/ds/IntHashSet.hx",902,0x10fc5471)
HX_LOCAL_STACK_FRAME(_hx_pos_904850c9bcaa7c7d_906_next,"de.polygonal.ds.IntHashSetIterator","next",0x308df4e5,"de.polygonal.ds.IntHashSetIterator.next","de/polygonal/ds/IntHashSet.hx",906,0x10fc5471)
HX_LOCAL_STACK_FRAME(_hx_pos_904850c9bcaa7c7d_914_remove,"de.polygonal.ds.IntHashSetIterator","remove",0x79c56cb6,"de.polygonal.ds.IntHashSetIterator.remove","de/polygonal/ds/IntHashSet.hx",914,0x10fc5471)
HX_LOCAL_STACK_FRAME(_hx_pos_904850c9bcaa7c7d_919_scan,"de.polygonal.ds.IntHashSetIterator","scan",0x33da6d6f,"de.polygonal.ds.IntHashSetIterator.scan","de/polygonal/ds/IntHashSet.hx",919,0x10fc5471)
namespace de{
namespace polygonal{
namespace ds{

void IntHashSetIterator_obj::__construct( ::de::polygonal::ds::IntHashSet x){
            	HX_STACKFRAME(&_hx_pos_904850c9bcaa7c7d_877_new)
HXLINE( 878)		this->mObject = x;
HXLINE( 879)		this->mData = x->mData;
HXLINE( 880)		this->mI = (int)0;
HXLINE( 881)		this->mS = x->capacity;
HXLINE( 882)		this->scan();
            	}

Dynamic IntHashSetIterator_obj::__CreateEmpty() { return new IntHashSetIterator_obj; }

void *IntHashSetIterator_obj::_hx_vtable = 0;

Dynamic IntHashSetIterator_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< IntHashSetIterator_obj > _hx_result = new IntHashSetIterator_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool IntHashSetIterator_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x68b62646;
}

static ::de::polygonal::ds::Itr_obj _hx_de_polygonal_ds_IntHashSetIterator__hx_de_polygonal_ds_Itr= {
	( bool (hx::Object::*)())&::de::polygonal::ds::IntHashSetIterator_obj::hasNext,
	(  ::Dynamic (hx::Object::*)())&::de::polygonal::ds::IntHashSetIterator_obj::next_8b3ae2fb,
	( void (hx::Object::*)())&::de::polygonal::ds::IntHashSetIterator_obj::remove,
	( ::Dynamic (hx::Object::*)())&::de::polygonal::ds::IntHashSetIterator_obj::reset,
};

 ::Dynamic IntHashSetIterator_obj::next_8b3ae2fb() {
			return next();
}
void *IntHashSetIterator_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x312668d4: return &_hx_de_polygonal_ds_IntHashSetIterator__hx_de_polygonal_ds_Itr;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void IntHashSetIterator_obj::free(){
            	HX_STACKFRAME(&_hx_pos_904850c9bcaa7c7d_886_free)
HXLINE( 887)		this->mObject = null();
HXLINE( 888)		this->mData = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntHashSetIterator_obj,free,(void))

::Dynamic IntHashSetIterator_obj::reset(){
            	HX_STACKFRAME(&_hx_pos_904850c9bcaa7c7d_892_reset)
HXLINE( 893)		this->mData = this->mObject->mData;
HXLINE( 894)		this->mI = (int)0;
HXLINE( 895)		this->mS = this->mObject->capacity;
HXLINE( 896)		this->scan();
HXLINE( 897)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntHashSetIterator_obj,reset,return )

bool IntHashSetIterator_obj::hasNext(){
            	HX_STACKFRAME(&_hx_pos_904850c9bcaa7c7d_902_hasNext)
HXDLIN( 902)		return (this->mI < this->mS);
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntHashSetIterator_obj,hasNext,return )

int IntHashSetIterator_obj::next(){
            	HX_STACKFRAME(&_hx_pos_904850c9bcaa7c7d_906_next)
HXLINE( 907)		int x = this->mData->__get(((int)this->mI++ << (int)(int)1));
HXLINE( 908)		this->scan();
HXLINE( 909)		return x;
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntHashSetIterator_obj,next,return )

void IntHashSetIterator_obj::remove(){
            	HX_STACKFRAME(&_hx_pos_904850c9bcaa7c7d_914_remove)
HXDLIN( 914)		HX_STACK_DO_THROW(HX_("unsupported operation",fc,a0,58,a5));
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntHashSetIterator_obj,remove,(void))

void IntHashSetIterator_obj::scan(){
            	HX_STACKFRAME(&_hx_pos_904850c9bcaa7c7d_919_scan)
HXDLIN( 919)		while(true){
HXDLIN( 919)			bool _hx_tmp;
HXDLIN( 919)			if ((this->mI < this->mS)) {
HXDLIN( 919)				_hx_tmp = (this->mData->__get(((int)this->mI << (int)(int)1)) == (int)-2147483647);
            			}
            			else {
HXDLIN( 919)				_hx_tmp = false;
            			}
HXDLIN( 919)			if (!(_hx_tmp)) {
HXDLIN( 919)				goto _hx_goto_6;
            			}
HXDLIN( 919)			this->mI++;
            		}
            		_hx_goto_6:;
            	}


HX_DEFINE_DYNAMIC_FUNC0(IntHashSetIterator_obj,scan,(void))


hx::ObjectPtr< IntHashSetIterator_obj > IntHashSetIterator_obj::__new( ::de::polygonal::ds::IntHashSet x) {
	hx::ObjectPtr< IntHashSetIterator_obj > __this = new IntHashSetIterator_obj();
	__this->__construct(x);
	return __this;
}

hx::ObjectPtr< IntHashSetIterator_obj > IntHashSetIterator_obj::__alloc(hx::Ctx *_hx_ctx, ::de::polygonal::ds::IntHashSet x) {
	IntHashSetIterator_obj *__this = (IntHashSetIterator_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(IntHashSetIterator_obj), true, "de.polygonal.ds.IntHashSetIterator"));
	*(void **)__this = IntHashSetIterator_obj::_hx_vtable;
	__this->__construct(x);
	return __this;
}

IntHashSetIterator_obj::IntHashSetIterator_obj()
{
}

void IntHashSetIterator_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(IntHashSetIterator);
	HX_MARK_MEMBER_NAME(mObject,"mObject");
	HX_MARK_MEMBER_NAME(mI,"mI");
	HX_MARK_MEMBER_NAME(mS,"mS");
	HX_MARK_MEMBER_NAME(mData,"mData");
	HX_MARK_END_CLASS();
}

void IntHashSetIterator_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(mObject,"mObject");
	HX_VISIT_MEMBER_NAME(mI,"mI");
	HX_VISIT_MEMBER_NAME(mS,"mS");
	HX_VISIT_MEMBER_NAME(mData,"mData");
}

hx::Val IntHashSetIterator_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"mI") ) { return hx::Val( mI ); }
		if (HX_FIELD_EQ(inName,"mS") ) { return hx::Val( mS ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"free") ) { return hx::Val( free_dyn() ); }
		if (HX_FIELD_EQ(inName,"next") ) { return hx::Val( next_dyn() ); }
		if (HX_FIELD_EQ(inName,"scan") ) { return hx::Val( scan_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"mData") ) { return hx::Val( mData ); }
		if (HX_FIELD_EQ(inName,"reset") ) { return hx::Val( reset_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"mObject") ) { return hx::Val( mObject ); }
		if (HX_FIELD_EQ(inName,"hasNext") ) { return hx::Val( hasNext_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val IntHashSetIterator_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"mI") ) { mI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"mS") ) { mS=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"mData") ) { mData=inValue.Cast< ::Array< int > >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"mObject") ) { mObject=inValue.Cast<  ::de::polygonal::ds::IntHashSet >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void IntHashSetIterator_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("mObject","\x0c","\x83","\x77","\xfe"));
	outFields->push(HX_HCSTRING("mI","\x3c","\x5f","\x00","\x00"));
	outFields->push(HX_HCSTRING("mS","\x46","\x5f","\x00","\x00"));
	outFields->push(HX_HCSTRING("mData","\x37","\xbd","\xe9","\xef"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo IntHashSetIterator_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::de::polygonal::ds::IntHashSet*/ ,(int)offsetof(IntHashSetIterator_obj,mObject),HX_HCSTRING("mObject","\x0c","\x83","\x77","\xfe")},
	{hx::fsInt,(int)offsetof(IntHashSetIterator_obj,mI),HX_HCSTRING("mI","\x3c","\x5f","\x00","\x00")},
	{hx::fsInt,(int)offsetof(IntHashSetIterator_obj,mS),HX_HCSTRING("mS","\x46","\x5f","\x00","\x00")},
	{hx::fsObject /*Array< int >*/ ,(int)offsetof(IntHashSetIterator_obj,mData),HX_HCSTRING("mData","\x37","\xbd","\xe9","\xef")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *IntHashSetIterator_obj_sStaticStorageInfo = 0;
#endif

static ::String IntHashSetIterator_obj_sMemberFields[] = {
	HX_HCSTRING("mObject","\x0c","\x83","\x77","\xfe"),
	HX_HCSTRING("mI","\x3c","\x5f","\x00","\x00"),
	HX_HCSTRING("mS","\x46","\x5f","\x00","\x00"),
	HX_HCSTRING("mData","\x37","\xbd","\xe9","\xef"),
	HX_HCSTRING("free","\xac","\x9c","\xc2","\x43"),
	HX_HCSTRING("reset","\xcf","\x49","\xc8","\xe6"),
	HX_HCSTRING("hasNext","\x6d","\xa5","\x46","\x18"),
	HX_HCSTRING("next","\xf3","\x84","\x02","\x49"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("scan","\x7d","\xfd","\x4e","\x4c"),
	::String(null()) };

static void IntHashSetIterator_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(IntHashSetIterator_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void IntHashSetIterator_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(IntHashSetIterator_obj::__mClass,"__mClass");
};

#endif

hx::Class IntHashSetIterator_obj::__mClass;

void IntHashSetIterator_obj::__register()
{
	hx::Object *dummy = new IntHashSetIterator_obj;
	IntHashSetIterator_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("de.polygonal.ds.IntHashSetIterator","\xbc","\xf5","\x22","\xf4");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = IntHashSetIterator_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(IntHashSetIterator_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< IntHashSetIterator_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = IntHashSetIterator_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IntHashSetIterator_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IntHashSetIterator_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace de
} // end namespace polygonal
} // end namespace ds
