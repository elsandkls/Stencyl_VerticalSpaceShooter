// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_de_polygonal_ds_tools_Assert
#include <de/polygonal/ds/tools/Assert.h>
#endif

namespace de{
namespace polygonal{
namespace ds{
namespace tools{

void Assert_obj::__construct() { }

Dynamic Assert_obj::__CreateEmpty() { return new Assert_obj; }

void *Assert_obj::_hx_vtable = 0;

Dynamic Assert_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Assert_obj > _hx_result = new Assert_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Assert_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x202523ce;
}


Assert_obj::Assert_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Assert_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Assert_obj_sStaticStorageInfo = 0;
#endif

static void Assert_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Assert_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Assert_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Assert_obj::__mClass,"__mClass");
};

#endif

hx::Class Assert_obj::__mClass;

void Assert_obj::__register()
{
	hx::Object *dummy = new Assert_obj;
	Assert_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("de.polygonal.ds.tools.Assert","\x62","\x9b","\xb7","\x95");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Assert_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Assert_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Assert_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Assert_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Assert_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace de
} // end namespace polygonal
} // end namespace ds
} // end namespace tools
