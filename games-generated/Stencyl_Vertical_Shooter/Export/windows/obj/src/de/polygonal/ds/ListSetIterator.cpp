// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_de_polygonal_ds_Collection
#include <de/polygonal/ds/Collection.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_Hashable
#include <de/polygonal/ds/Hashable.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_Itr
#include <de/polygonal/ds/Itr.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_ListSet
#include <de/polygonal/ds/ListSet.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_ListSetIterator
#include <de/polygonal/ds/ListSetIterator.h>
#endif
#ifndef INCLUDED_de_polygonal_ds_Set
#include <de/polygonal/ds/Set.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_692edeb5c23786d5_399_new,"de.polygonal.ds.ListSetIterator","new",0xaa19ca5b,"de.polygonal.ds.ListSetIterator.new","de/polygonal/ds/ListSet.hx",399,0x3feed482)
HX_LOCAL_STACK_FRAME(_hx_pos_692edeb5c23786d5_405_free,"de.polygonal.ds.ListSetIterator","free",0x27375e51,"de.polygonal.ds.ListSetIterator.free","de/polygonal/ds/ListSet.hx",405,0x3feed482)
HX_LOCAL_STACK_FRAME(_hx_pos_692edeb5c23786d5_411_reset,"de.polygonal.ds.ListSetIterator","reset",0x097cf88a,"de.polygonal.ds.ListSetIterator.reset","de/polygonal/ds/ListSet.hx",411,0x3feed482)
HX_LOCAL_STACK_FRAME(_hx_pos_692edeb5c23786d5_420_hasNext,"de.polygonal.ds.ListSetIterator","hasNext",0xd490b8e8,"de.polygonal.ds.ListSetIterator.hasNext","de/polygonal/ds/ListSet.hx",420,0x3feed482)
HX_LOCAL_STACK_FRAME(_hx_pos_692edeb5c23786d5_425_next,"de.polygonal.ds.ListSetIterator","next",0x2c774698,"de.polygonal.ds.ListSetIterator.next","de/polygonal/ds/ListSet.hx",425,0x3feed482)
HX_LOCAL_STACK_FRAME(_hx_pos_692edeb5c23786d5_432_remove,"de.polygonal.ds.ListSetIterator","remove",0x3fecd129,"de.polygonal.ds.ListSetIterator.remove","de/polygonal/ds/ListSet.hx",432,0x3feed482)
namespace de{
namespace polygonal{
namespace ds{

void ListSetIterator_obj::__construct( ::de::polygonal::ds::ListSet x){
            	HX_STACKFRAME(&_hx_pos_692edeb5c23786d5_399_new)
HXLINE( 400)		this->mObject = x;
HXLINE( 401)		{
HXLINE( 401)			this->mData = this->mObject->mData;
HXDLIN( 401)			this->mS = this->mObject->mSize;
HXDLIN( 401)			this->mI = (int)0;
            		}
            	}

Dynamic ListSetIterator_obj::__CreateEmpty() { return new ListSetIterator_obj; }

void *ListSetIterator_obj::_hx_vtable = 0;

Dynamic ListSetIterator_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ListSetIterator_obj > _hx_result = new ListSetIterator_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ListSetIterator_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x62b6761f;
}

static ::de::polygonal::ds::Itr_obj _hx_de_polygonal_ds_ListSetIterator__hx_de_polygonal_ds_Itr= {
	( bool (hx::Object::*)())&::de::polygonal::ds::ListSetIterator_obj::hasNext,
	(  ::Dynamic (hx::Object::*)())&::de::polygonal::ds::ListSetIterator_obj::next,
	( void (hx::Object::*)())&::de::polygonal::ds::ListSetIterator_obj::remove,
	( ::Dynamic (hx::Object::*)())&::de::polygonal::ds::ListSetIterator_obj::reset,
};

void *ListSetIterator_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x312668d4: return &_hx_de_polygonal_ds_ListSetIterator__hx_de_polygonal_ds_Itr;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void ListSetIterator_obj::free(){
            	HX_STACKFRAME(&_hx_pos_692edeb5c23786d5_405_free)
HXLINE( 406)		this->mObject = null();
HXLINE( 407)		this->mData = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListSetIterator_obj,free,(void))

::Dynamic ListSetIterator_obj::reset(){
            	HX_STACKFRAME(&_hx_pos_692edeb5c23786d5_411_reset)
HXLINE( 412)		this->mData = this->mObject->mData;
HXLINE( 413)		this->mS = this->mObject->mSize;
HXLINE( 414)		this->mI = (int)0;
HXLINE( 415)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListSetIterator_obj,reset,return )

bool ListSetIterator_obj::hasNext(){
            	HX_STACKFRAME(&_hx_pos_692edeb5c23786d5_420_hasNext)
HXDLIN( 420)		return (this->mI < this->mS);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListSetIterator_obj,hasNext,return )

 ::Dynamic ListSetIterator_obj::next(){
            	HX_STACKFRAME(&_hx_pos_692edeb5c23786d5_425_next)
HXDLIN( 425)		return this->mData->__get(this->mI++);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListSetIterator_obj,next,return )

void ListSetIterator_obj::remove(){
            	HX_STACKFRAME(&_hx_pos_692edeb5c23786d5_432_remove)
HXDLIN( 432)		this->mData->set(this->mI,this->mData->__get(--this->mS));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ListSetIterator_obj,remove,(void))


hx::ObjectPtr< ListSetIterator_obj > ListSetIterator_obj::__new( ::de::polygonal::ds::ListSet x) {
	hx::ObjectPtr< ListSetIterator_obj > __this = new ListSetIterator_obj();
	__this->__construct(x);
	return __this;
}

hx::ObjectPtr< ListSetIterator_obj > ListSetIterator_obj::__alloc(hx::Ctx *_hx_ctx, ::de::polygonal::ds::ListSet x) {
	ListSetIterator_obj *__this = (ListSetIterator_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ListSetIterator_obj), true, "de.polygonal.ds.ListSetIterator"));
	*(void **)__this = ListSetIterator_obj::_hx_vtable;
	__this->__construct(x);
	return __this;
}

ListSetIterator_obj::ListSetIterator_obj()
{
}

void ListSetIterator_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ListSetIterator);
	HX_MARK_MEMBER_NAME(mObject,"mObject");
	HX_MARK_MEMBER_NAME(mData,"mData");
	HX_MARK_MEMBER_NAME(mI,"mI");
	HX_MARK_MEMBER_NAME(mS,"mS");
	HX_MARK_END_CLASS();
}

void ListSetIterator_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(mObject,"mObject");
	HX_VISIT_MEMBER_NAME(mData,"mData");
	HX_VISIT_MEMBER_NAME(mI,"mI");
	HX_VISIT_MEMBER_NAME(mS,"mS");
}

hx::Val ListSetIterator_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"mI") ) { return hx::Val( mI ); }
		if (HX_FIELD_EQ(inName,"mS") ) { return hx::Val( mS ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"free") ) { return hx::Val( free_dyn() ); }
		if (HX_FIELD_EQ(inName,"next") ) { return hx::Val( next_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"mData") ) { return hx::Val( mData ); }
		if (HX_FIELD_EQ(inName,"reset") ) { return hx::Val( reset_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"mObject") ) { return hx::Val( mObject ); }
		if (HX_FIELD_EQ(inName,"hasNext") ) { return hx::Val( hasNext_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ListSetIterator_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"mI") ) { mI=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"mS") ) { mS=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"mData") ) { mData=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"mObject") ) { mObject=inValue.Cast<  ::de::polygonal::ds::ListSet >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ListSetIterator_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("mObject","\x0c","\x83","\x77","\xfe"));
	outFields->push(HX_HCSTRING("mData","\x37","\xbd","\xe9","\xef"));
	outFields->push(HX_HCSTRING("mI","\x3c","\x5f","\x00","\x00"));
	outFields->push(HX_HCSTRING("mS","\x46","\x5f","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ListSetIterator_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::de::polygonal::ds::ListSet*/ ,(int)offsetof(ListSetIterator_obj,mObject),HX_HCSTRING("mObject","\x0c","\x83","\x77","\xfe")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(ListSetIterator_obj,mData),HX_HCSTRING("mData","\x37","\xbd","\xe9","\xef")},
	{hx::fsInt,(int)offsetof(ListSetIterator_obj,mI),HX_HCSTRING("mI","\x3c","\x5f","\x00","\x00")},
	{hx::fsInt,(int)offsetof(ListSetIterator_obj,mS),HX_HCSTRING("mS","\x46","\x5f","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ListSetIterator_obj_sStaticStorageInfo = 0;
#endif

static ::String ListSetIterator_obj_sMemberFields[] = {
	HX_HCSTRING("mObject","\x0c","\x83","\x77","\xfe"),
	HX_HCSTRING("mData","\x37","\xbd","\xe9","\xef"),
	HX_HCSTRING("mI","\x3c","\x5f","\x00","\x00"),
	HX_HCSTRING("mS","\x46","\x5f","\x00","\x00"),
	HX_HCSTRING("free","\xac","\x9c","\xc2","\x43"),
	HX_HCSTRING("reset","\xcf","\x49","\xc8","\xe6"),
	HX_HCSTRING("hasNext","\x6d","\xa5","\x46","\x18"),
	HX_HCSTRING("next","\xf3","\x84","\x02","\x49"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	::String(null()) };

static void ListSetIterator_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ListSetIterator_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ListSetIterator_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ListSetIterator_obj::__mClass,"__mClass");
};

#endif

hx::Class ListSetIterator_obj::__mClass;

void ListSetIterator_obj::__register()
{
	hx::Object *dummy = new ListSetIterator_obj;
	ListSetIterator_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("de.polygonal.ds.ListSetIterator","\xe9","\x00","\x81","\x8e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ListSetIterator_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ListSetIterator_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ListSetIterator_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ListSetIterator_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ListSetIterator_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ListSetIterator_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace de
} // end namespace polygonal
} // end namespace ds
