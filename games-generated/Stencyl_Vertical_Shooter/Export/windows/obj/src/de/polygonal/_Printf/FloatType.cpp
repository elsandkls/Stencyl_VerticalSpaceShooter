// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_de_polygonal__Printf_FloatType
#include <de/polygonal/_Printf/FloatType.h>
#endif
namespace de{
namespace polygonal{
namespace _Printf{

::de::polygonal::_Printf::FloatType FloatType_obj::FNatural;

::de::polygonal::_Printf::FloatType FloatType_obj::FNormal;

::de::polygonal::_Printf::FloatType FloatType_obj::FScientific;

bool FloatType_obj::__GetStatic(const ::String &inName, ::Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	if (inName==HX_("FNatural",43,7a,1b,30)) { outValue = FloatType_obj::FNatural; return true; }
	if (inName==HX_("FNormal",0d,5f,dc,c3)) { outValue = FloatType_obj::FNormal; return true; }
	if (inName==HX_("FScientific",8f,99,6c,11)) { outValue = FloatType_obj::FScientific; return true; }
	return super::__GetStatic(inName, outValue, inCallProp);
}

HX_DEFINE_CREATE_ENUM(FloatType_obj)

int FloatType_obj::__FindIndex(::String inName)
{
	if (inName==HX_("FNatural",43,7a,1b,30)) return 2;
	if (inName==HX_("FNormal",0d,5f,dc,c3)) return 0;
	if (inName==HX_("FScientific",8f,99,6c,11)) return 1;
	return super::__FindIndex(inName);
}

int FloatType_obj::__FindArgCount(::String inName)
{
	if (inName==HX_("FNatural",43,7a,1b,30)) return 0;
	if (inName==HX_("FNormal",0d,5f,dc,c3)) return 0;
	if (inName==HX_("FScientific",8f,99,6c,11)) return 0;
	return super::__FindArgCount(inName);
}

hx::Val FloatType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	if (inName==HX_("FNatural",43,7a,1b,30)) return FNatural;
	if (inName==HX_("FNormal",0d,5f,dc,c3)) return FNormal;
	if (inName==HX_("FScientific",8f,99,6c,11)) return FScientific;
	return super::__Field(inName,inCallProp);
}

static ::String FloatType_obj_sStaticFields[] = {
	HX_("FNormal",0d,5f,dc,c3),
	HX_("FScientific",8f,99,6c,11),
	HX_("FNatural",43,7a,1b,30),
	::String(null())
};

static void FloatType_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FloatType_obj::FNatural,"FNatural");
	HX_MARK_MEMBER_NAME(FloatType_obj::FNormal,"FNormal");
	HX_MARK_MEMBER_NAME(FloatType_obj::FScientific,"FScientific");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FloatType_obj_sVisitStatic(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FloatType_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(FloatType_obj::FNatural,"FNatural");
	HX_VISIT_MEMBER_NAME(FloatType_obj::FNormal,"FNormal");
	HX_VISIT_MEMBER_NAME(FloatType_obj::FScientific,"FScientific");
};
#endif

hx::Class FloatType_obj::__mClass;

Dynamic __Create_FloatType_obj() { return new FloatType_obj; }

void FloatType_obj::__register()
{

hx::Static(__mClass) = hx::_hx_RegisterClass(HX_HCSTRING("de.polygonal._Printf.FloatType","\x8a","\xd0","\xa8","\xd4"), hx::TCanCast< FloatType_obj >,FloatType_obj_sStaticFields,0,
	&__Create_FloatType_obj, &__Create,
	&super::__SGetClass(), &CreateFloatType_obj, FloatType_obj_sMarkStatics
#ifdef HXCPP_VISIT_ALLOCS
    , FloatType_obj_sVisitStatic
#endif
#ifdef HXCPP_SCRIPTABLE
    , 0
#endif
);
	__mClass->mGetStaticField = &FloatType_obj::__GetStatic;
}

void FloatType_obj::__boot()
{
FNatural = hx::CreateEnum< FloatType_obj >(HX_HCSTRING("FNatural","\x43","\x7a","\x1b","\x30"),2,0);
FNormal = hx::CreateEnum< FloatType_obj >(HX_HCSTRING("FNormal","\x0d","\x5f","\xdc","\xc3"),0,0);
FScientific = hx::CreateEnum< FloatType_obj >(HX_HCSTRING("FScientific","\x8f","\x99","\x6c","\x11"),1,0);
}


} // end namespace de
} // end namespace polygonal
} // end namespace _Printf
