// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIntList
#include <mbs/io/MbsIntList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_770c2e734efe73da_120_new,"mbs.io.MbsIntList","new",0x71996439,"mbs.io.MbsIntList.new","mbs/io/MbsListBase.hx",120,0xffa24d09)
HX_LOCAL_STACK_FRAME(_hx_pos_770c2e734efe73da_124_readInt,"mbs.io.MbsIntList","readInt",0xd3c8a792,"mbs.io.MbsIntList.readInt","mbs/io/MbsListBase.hx",124,0xffa24d09)
HX_LOCAL_STACK_FRAME(_hx_pos_770c2e734efe73da_131_writeInt,"mbs.io.MbsIntList","writeInt",0x320746d7,"mbs.io.MbsIntList.writeInt","mbs/io/MbsListBase.hx",131,0xffa24d09)
namespace mbs{
namespace io{

void MbsIntList_obj::__construct(::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_770c2e734efe73da_120_new)
HXDLIN( 120)		super::__construct(data,::mbs::core::MbsTypes_obj::INTEGER);
            	}

Dynamic MbsIntList_obj::__CreateEmpty() { return new MbsIntList_obj; }

void *MbsIntList_obj::_hx_vtable = 0;

Dynamic MbsIntList_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsIntList_obj > _hx_result = new MbsIntList_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsIntList_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x31f84f13) {
		if (inClassId<=(int)0x17b72d64) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x17b72d64;
		} else {
			return inClassId==(int)0x31f84f13;
		}
	} else {
		return inClassId==(int)0x51c3cd0d;
	}
}

int MbsIntList_obj::readInt(){
            	HX_STACKFRAME(&_hx_pos_770c2e734efe73da_124_readInt)
HXLINE( 125)		int i = ::mbs::io::MbsIO_obj::readInt(this->data,this->elementAddress);
HXLINE( 126)		 ::mbs::io::MbsIntList _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 126)		_hx_tmp->elementAddress = (_hx_tmp->elementAddress + this->elementSize);
HXLINE( 127)		return i;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsIntList_obj,readInt,return )

void MbsIntList_obj::writeInt(int value){
            	HX_STACKFRAME(&_hx_pos_770c2e734efe73da_131_writeInt)
HXLINE( 132)		::mbs::io::MbsIO_obj::writeInt(this->data,this->elementAddress,value);
HXLINE( 133)		 ::mbs::io::MbsIntList _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 133)		_hx_tmp->elementAddress = (_hx_tmp->elementAddress + this->elementSize);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsIntList_obj,writeInt,(void))


hx::ObjectPtr< MbsIntList_obj > MbsIntList_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsIntList_obj > __this = new MbsIntList_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsIntList_obj > MbsIntList_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsIntList_obj *__this = (MbsIntList_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsIntList_obj), true, "mbs.io.MbsIntList"));
	*(void **)__this = MbsIntList_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsIntList_obj::MbsIntList_obj()
{
}

hx::Val MbsIntList_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"readInt") ) { return hx::Val( readInt_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"writeInt") ) { return hx::Val( writeInt_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MbsIntList_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *MbsIntList_obj_sStaticStorageInfo = 0;
#endif

static ::String MbsIntList_obj_sMemberFields[] = {
	HX_HCSTRING("readInt","\x39","\xb3","\xc9","\x02"),
	HX_HCSTRING("writeInt","\x50","\x6d","\xf0","\x23"),
	::String(null()) };

static void MbsIntList_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsIntList_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsIntList_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsIntList_obj::__mClass,"__mClass");
};

#endif

hx::Class MbsIntList_obj::__mClass;

void MbsIntList_obj::__register()
{
	hx::Object *dummy = new MbsIntList_obj;
	MbsIntList_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("mbs.io.MbsIntList","\xc7","\xd3","\xba","\x4c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MbsIntList_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsIntList_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsIntList_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsIntList_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsIntList_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsIntList_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace mbs
} // end namespace io
