// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsBoolList
#include <mbs/io/MbsBoolList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsDynamicHelper
#include <mbs/io/MbsDynamicHelper.h>
#endif
#ifndef INCLUDED_mbs_io_MbsDynamicList
#include <mbs/io/MbsDynamicList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsFloatList
#include <mbs/io/MbsFloatList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIntList
#include <mbs/io/MbsIntList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif
#ifndef INCLUDED_mbs_io_MbsStringList
#include <mbs/io/MbsStringList.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_e5ca20745ad3bbd1_18_writeDynamic,"mbs.io.MbsDynamicHelper","writeDynamic",0x48318087,"mbs.io.MbsDynamicHelper.writeDynamic","mbs/io/MbsDynamicHelper.hx",18,0x9d0b9dd7)
HX_LOCAL_STACK_FRAME(_hx_pos_e5ca20745ad3bbd1_47_readDynamic,"mbs.io.MbsDynamicHelper","readDynamic",0x3fe0f882,"mbs.io.MbsDynamicHelper.readDynamic","mbs/io/MbsDynamicHelper.hx",47,0x9d0b9dd7)
HX_LOCAL_STACK_FRAME(_hx_pos_e5ca20745ad3bbd1_91_createObjectPool,"mbs.io.MbsDynamicHelper","createObjectPool",0x489e50fe,"mbs.io.MbsDynamicHelper.createObjectPool","mbs/io/MbsDynamicHelper.hx",91,0x9d0b9dd7)
HX_LOCAL_STACK_FRAME(_hx_pos_e5ca20745ad3bbd1_95_readDynamicUsingPool,"mbs.io.MbsDynamicHelper","readDynamicUsingPool",0xd6ecdb5e,"mbs.io.MbsDynamicHelper.readDynamicUsingPool","mbs/io/MbsDynamicHelper.hx",95,0x9d0b9dd7)
namespace mbs{
namespace io{

void MbsDynamicHelper_obj::__construct() { }

Dynamic MbsDynamicHelper_obj::__CreateEmpty() { return new MbsDynamicHelper_obj; }

void *MbsDynamicHelper_obj::_hx_vtable = 0;

Dynamic MbsDynamicHelper_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsDynamicHelper_obj > _hx_result = new MbsDynamicHelper_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MbsDynamicHelper_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x60acfc0f;
}

void MbsDynamicHelper_obj::writeDynamic(::Dynamic data,int address, ::Dynamic obj){
            	HX_STACKFRAME(&_hx_pos_e5ca20745ad3bbd1_18_writeDynamic)
HXDLIN(  18)		if (::Std_obj::is(obj,hx::ClassOf< bool >())) {
HXLINE(  20)			::mbs::io::MbsIO_obj::writeTypecode(data,address,::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  21)			::mbs::io::MbsIO_obj::writeBool(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()),( (bool)(obj) ));
            		}
            		else {
HXLINE(  23)			if (::Std_obj::is(obj,hx::ClassOf< ::Float >())) {
HXLINE(  25)				::mbs::io::MbsIO_obj::writeTypecode(data,address,::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  26)				::mbs::io::MbsIO_obj::writeFloat(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()),( (Float)(obj) ));
            			}
            			else {
HXLINE(  28)				if (::Std_obj::is(obj,hx::ClassOf< int >())) {
HXLINE(  30)					::mbs::io::MbsIO_obj::writeTypecode(data,address,::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  31)					::mbs::io::MbsIO_obj::writeInt(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()),( (int)(obj) ));
            				}
            				else {
HXLINE(  33)					if (::Std_obj::is(obj,hx::ClassOf< ::String >())) {
HXLINE(  35)						::mbs::io::MbsIO_obj::writeTypecode(data,address,::mbs::core::MbsTypes_obj::STRING);
HXLINE(  36)						::mbs::io::MbsIO_obj::writeString(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()),( (::String)(obj) ));
            					}
            					else {
HXLINE(  40)						 ::mbs::core::MbsObject mo = ( ( ::mbs::core::MbsObject)(obj) );
HXLINE(  41)						::mbs::io::MbsIO_obj::writeTypecode(data,address,mo->getMbsType());
HXLINE(  42)						int _hx_tmp = (address + ::mbs::core::MbsTypes_obj::INTEGER->getSize());
HXDLIN(  42)						::mbs::io::MbsIO_obj::writeInt(data,_hx_tmp,mo->getAddress());
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(MbsDynamicHelper_obj,writeDynamic,(void))

 ::Dynamic MbsDynamicHelper_obj::readDynamic(::Dynamic data,int address){
            	HX_GC_STACKFRAME(&_hx_pos_e5ca20745ad3bbd1_47_readDynamic)
HXLINE(  48)		 ::mbs::core::MbsType type = ::mbs::io::MbsIO_obj::readTypecode(data,address);
HXLINE(  49)		if (hx::IsEq( type,::mbs::core::MbsTypes_obj::BOOLEAN )) {
HXLINE(  50)			return ::mbs::io::MbsIO_obj::readBool(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
            		}
            		else {
HXLINE(  51)			if (hx::IsEq( type,::mbs::core::MbsTypes_obj::FLOAT )) {
HXLINE(  52)				return ::mbs::io::MbsIO_obj::readFloat(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
            			}
            			else {
HXLINE(  53)				if (hx::IsEq( type,::mbs::core::MbsTypes_obj::INTEGER )) {
HXLINE(  54)					return ::mbs::io::MbsIO_obj::readInt(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
            				}
            				else {
HXLINE(  55)					if (hx::IsEq( type,::mbs::core::MbsTypes_obj::STRING )) {
HXLINE(  56)						return ::mbs::io::MbsIO_obj::readString(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
            					}
            					else {
HXLINE(  57)						if (hx::IsEq( type,::mbs::core::MbsTypes_obj::LIST )) {
HXLINE(  59)							address = ::mbs::io::MbsIO_obj::readInt(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
HXLINE(  60)							if ((address != (int)0)) {
HXLINE(  62)								type = ::mbs::io::MbsIO_obj::readTypecode(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
HXLINE(  63)								 ::mbs::io::MbsListBase list = null();
HXLINE(  64)								if (hx::IsEq( type,::mbs::core::MbsTypes_obj::BOOLEAN )) {
HXLINE(  65)									list =  ::mbs::io::MbsBoolList_obj::__alloc( HX_CTX ,data);
            								}
            								else {
HXLINE(  66)									if (hx::IsEq( type,::mbs::core::MbsTypes_obj::FLOAT )) {
HXLINE(  67)										list =  ::mbs::io::MbsFloatList_obj::__alloc( HX_CTX ,data);
            									}
            									else {
HXLINE(  68)										if (hx::IsEq( type,::mbs::core::MbsTypes_obj::INTEGER )) {
HXLINE(  69)											list =  ::mbs::io::MbsIntList_obj::__alloc( HX_CTX ,data);
            										}
            										else {
HXLINE(  70)											if (hx::IsEq( type,::mbs::core::MbsTypes_obj::STRING )) {
HXLINE(  71)												list =  ::mbs::io::MbsStringList_obj::__alloc( HX_CTX ,data);
            											}
            											else {
HXLINE(  72)												if (hx::IsEq( type,::mbs::core::MbsTypes_obj::DYNAMIC )) {
HXLINE(  73)													list =  ::mbs::io::MbsDynamicList_obj::__alloc( HX_CTX ,data);
            												}
            												else {
HXLINE(  75)													list =  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,type,type->createInstance(data));
            												}
            											}
            										}
            									}
            								}
HXLINE(  76)								list->setAddress(address);
HXLINE(  77)								return list;
            							}
HXLINE(  79)							return null();
            						}
            						else {
HXLINE(  83)							 ::mbs::core::MbsObject obj = type->createInstance(data);
HXLINE(  84)							obj->setAddress(::mbs::io::MbsIO_obj::readInt(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize())));
HXLINE(  85)							return obj;
            						}
            					}
            				}
            			}
            		}
HXLINE(  49)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(MbsDynamicHelper_obj,readDynamic,return )

 ::haxe::ds::ObjectMap MbsDynamicHelper_obj::createObjectPool(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_e5ca20745ad3bbd1_91_createObjectPool)
HXDLIN(  91)		return  ::haxe::ds::ObjectMap_obj::__alloc( HX_CTX );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsDynamicHelper_obj,createObjectPool,return )

 ::Dynamic MbsDynamicHelper_obj::readDynamicUsingPool(::Dynamic data,int address, ::haxe::ds::ObjectMap pool){
            	HX_GC_STACKFRAME(&_hx_pos_e5ca20745ad3bbd1_95_readDynamicUsingPool)
HXLINE(  96)		 ::mbs::core::MbsType type = ::mbs::io::MbsIO_obj::readTypecode(data,address);
HXLINE(  97)		if (hx::IsEq( type,::mbs::core::MbsTypes_obj::BOOLEAN )) {
HXLINE(  98)			return ::mbs::io::MbsIO_obj::readBool(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
            		}
            		else {
HXLINE(  99)			if (hx::IsEq( type,::mbs::core::MbsTypes_obj::FLOAT )) {
HXLINE( 100)				return ::mbs::io::MbsIO_obj::readFloat(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
            			}
            			else {
HXLINE( 101)				if (hx::IsEq( type,::mbs::core::MbsTypes_obj::INTEGER )) {
HXLINE( 102)					return ::mbs::io::MbsIO_obj::readInt(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
            				}
            				else {
HXLINE( 103)					if (hx::IsEq( type,::mbs::core::MbsTypes_obj::STRING )) {
HXLINE( 104)						return ::mbs::io::MbsIO_obj::readString(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
            					}
            					else {
HXLINE( 105)						if (hx::IsEq( type,::mbs::core::MbsTypes_obj::LIST )) {
HXLINE( 107)							address = ::mbs::io::MbsIO_obj::readInt(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
HXLINE( 108)							if ((address != (int)0)) {
HXLINE( 110)								type = ::mbs::io::MbsIO_obj::readTypecode(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize()));
HXLINE( 111)								 ::mbs::io::MbsListBase list = null();
HXLINE( 112)								if (hx::IsEq( type,::mbs::core::MbsTypes_obj::BOOLEAN )) {
HXLINE( 113)									list =  ::mbs::io::MbsBoolList_obj::__alloc( HX_CTX ,data);
            								}
            								else {
HXLINE( 114)									if (hx::IsEq( type,::mbs::core::MbsTypes_obj::FLOAT )) {
HXLINE( 115)										list =  ::mbs::io::MbsFloatList_obj::__alloc( HX_CTX ,data);
            									}
            									else {
HXLINE( 116)										if (hx::IsEq( type,::mbs::core::MbsTypes_obj::INTEGER )) {
HXLINE( 117)											list =  ::mbs::io::MbsIntList_obj::__alloc( HX_CTX ,data);
            										}
            										else {
HXLINE( 118)											if (hx::IsEq( type,::mbs::core::MbsTypes_obj::STRING )) {
HXLINE( 119)												list =  ::mbs::io::MbsStringList_obj::__alloc( HX_CTX ,data);
            											}
            											else {
HXLINE( 120)												if (hx::IsEq( type,::mbs::core::MbsTypes_obj::DYNAMIC )) {
HXLINE( 121)													list =  ::mbs::io::MbsDynamicList_obj::__alloc( HX_CTX ,data);
            												}
            												else {
HXLINE( 123)													list =  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,type,type->createInstance(data));
            												}
            											}
            										}
            									}
            								}
HXLINE( 124)								list->setAddress(address);
HXLINE( 125)								return list;
            							}
HXLINE( 127)							return null();
            						}
            						else {
HXLINE( 131)							 ::mbs::core::MbsObject obj = pool->get(type).StaticCast<  ::mbs::core::MbsObject >();
HXLINE( 132)							if (hx::IsNull( obj )) {
HXLINE( 134)								obj = type->createInstance(data);
HXLINE( 135)								pool->set(type,obj);
            							}
HXLINE( 138)							obj->setAddress(::mbs::io::MbsIO_obj::readInt(data,(address + ::mbs::core::MbsTypes_obj::INTEGER->getSize())));
HXLINE( 139)							return obj;
            						}
            					}
            				}
            			}
            		}
HXLINE(  97)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(MbsDynamicHelper_obj,readDynamicUsingPool,return )


MbsDynamicHelper_obj::MbsDynamicHelper_obj()
{
}

bool MbsDynamicHelper_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"readDynamic") ) { outValue = readDynamic_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"writeDynamic") ) { outValue = writeDynamic_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"createObjectPool") ) { outValue = createObjectPool_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"readDynamicUsingPool") ) { outValue = readDynamicUsingPool_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MbsDynamicHelper_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *MbsDynamicHelper_obj_sStaticStorageInfo = 0;
#endif

static void MbsDynamicHelper_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsDynamicHelper_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsDynamicHelper_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsDynamicHelper_obj::__mClass,"__mClass");
};

#endif

hx::Class MbsDynamicHelper_obj::__mClass;

static ::String MbsDynamicHelper_obj_sStaticFields[] = {
	HX_HCSTRING("writeDynamic","\x60","\x44","\x44","\xfb"),
	HX_HCSTRING("readDynamic","\xc9","\x32","\x01","\x89"),
	HX_HCSTRING("createObjectPool","\x57","\x75","\xc2","\x01"),
	HX_HCSTRING("readDynamicUsingPool","\x37","\xa0","\x9c","\x9d"),
	::String(null())
};

void MbsDynamicHelper_obj::__register()
{
	hx::Object *dummy = new MbsDynamicHelper_obj;
	MbsDynamicHelper_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("mbs.io.MbsDynamicHelper","\xa7","\x34","\x6a","\xd5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsDynamicHelper_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MbsDynamicHelper_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsDynamicHelper_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< MbsDynamicHelper_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsDynamicHelper_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsDynamicHelper_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsDynamicHelper_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace mbs
} // end namespace io
