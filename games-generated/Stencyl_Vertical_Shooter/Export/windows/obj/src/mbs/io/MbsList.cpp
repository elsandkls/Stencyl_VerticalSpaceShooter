// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_17fe7d38aa137b89_11_new,"mbs.io.MbsList","new",0x2d12e836,"mbs.io.MbsList.new","mbs/io/MbsList.hx",11,0x941b4e9a)
HX_LOCAL_STACK_FRAME(_hx_pos_17fe7d38aa137b89_17_getNextObject,"mbs.io.MbsList","getNextObject",0x0df30b9e,"mbs.io.MbsList.getNextObject","mbs/io/MbsList.hx",17,0x941b4e9a)
namespace mbs{
namespace io{

void MbsList_obj::__construct(::Dynamic data, ::mbs::core::MbsType type, ::Dynamic _obj){
            	HX_STACKFRAME(&_hx_pos_17fe7d38aa137b89_11_new)
HXLINE(  12)		super::__construct(data,type);
HXLINE(  13)		this->obj = _obj;
            	}

Dynamic MbsList_obj::__CreateEmpty() { return new MbsList_obj; }

void *MbsList_obj::_hx_vtable = 0;

Dynamic MbsList_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsList_obj > _hx_result = new MbsList_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool MbsList_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x17b72d64) {
		if (inClassId<=(int)0x14df1278) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x14df1278;
		} else {
			return inClassId==(int)0x17b72d64;
		}
	} else {
		return inClassId==(int)0x51c3cd0d;
	}
}

 ::Dynamic MbsList_obj::getNextObject(){
            	HX_STACKFRAME(&_hx_pos_17fe7d38aa137b89_17_getNextObject)
HXLINE(  18)		( ( ::mbs::core::MbsObject)(this->obj) )->setAddress(this->elementAddress);
HXLINE(  19)		 ::mbs::io::MbsList _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  19)		_hx_tmp->elementAddress = (_hx_tmp->elementAddress + this->elementSize);
HXLINE(  20)		return this->obj;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsList_obj,getNextObject,return )


hx::ObjectPtr< MbsList_obj > MbsList_obj::__new(::Dynamic data, ::mbs::core::MbsType type, ::Dynamic _obj) {
	hx::ObjectPtr< MbsList_obj > __this = new MbsList_obj();
	__this->__construct(data,type,_obj);
	return __this;
}

hx::ObjectPtr< MbsList_obj > MbsList_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data, ::mbs::core::MbsType type, ::Dynamic _obj) {
	MbsList_obj *__this = (MbsList_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsList_obj), true, "mbs.io.MbsList"));
	*(void **)__this = MbsList_obj::_hx_vtable;
	__this->__construct(data,type,_obj);
	return __this;
}

MbsList_obj::MbsList_obj()
{
}

void MbsList_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MbsList);
	HX_MARK_MEMBER_NAME(obj,"obj");
	 ::mbs::io::MbsListBase_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MbsList_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(obj,"obj");
	 ::mbs::io::MbsListBase_obj::__Visit(HX_VISIT_ARG);
}

hx::Val MbsList_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"obj") ) { return hx::Val( obj ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getNextObject") ) { return hx::Val( getNextObject_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val MbsList_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"obj") ) { obj=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MbsList_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("obj","\xf7","\x8f","\x54","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo MbsList_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(MbsList_obj,obj),HX_HCSTRING("obj","\xf7","\x8f","\x54","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *MbsList_obj_sStaticStorageInfo = 0;
#endif

static ::String MbsList_obj_sMemberFields[] = {
	HX_HCSTRING("obj","\xf7","\x8f","\x54","\x00"),
	HX_HCSTRING("getNextObject","\x48","\x8c","\xe3","\x26"),
	::String(null()) };

static void MbsList_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsList_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsList_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsList_obj::__mClass,"__mClass");
};

#endif

hx::Class MbsList_obj::__mClass;

void MbsList_obj::__register()
{
	hx::Object *dummy = new MbsList_obj;
	MbsList_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("mbs.io.MbsList","\x44","\x55","\x49","\xff");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MbsList_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsList_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsList_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsList_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsList_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsList_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace mbs
} // end namespace io
