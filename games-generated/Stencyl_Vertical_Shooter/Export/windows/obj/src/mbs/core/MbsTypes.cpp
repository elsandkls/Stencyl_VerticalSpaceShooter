// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_34dd2f7a85ac35a8_5_boot,"mbs.core.MbsTypes","boot",0x57fd94e6,"mbs.core.MbsTypes.boot","mbs/core/MbsTypes.hx",5,0x88285664)
HX_LOCAL_STACK_FRAME(_hx_pos_34dd2f7a85ac35a8_6_boot,"mbs.core.MbsTypes","boot",0x57fd94e6,"mbs.core.MbsTypes.boot","mbs/core/MbsTypes.hx",6,0x88285664)
HX_LOCAL_STACK_FRAME(_hx_pos_34dd2f7a85ac35a8_7_boot,"mbs.core.MbsTypes","boot",0x57fd94e6,"mbs.core.MbsTypes.boot","mbs/core/MbsTypes.hx",7,0x88285664)
HX_LOCAL_STACK_FRAME(_hx_pos_34dd2f7a85ac35a8_8_boot,"mbs.core.MbsTypes","boot",0x57fd94e6,"mbs.core.MbsTypes.boot","mbs/core/MbsTypes.hx",8,0x88285664)
HX_LOCAL_STACK_FRAME(_hx_pos_34dd2f7a85ac35a8_9_boot,"mbs.core.MbsTypes","boot",0x57fd94e6,"mbs.core.MbsTypes.boot","mbs/core/MbsTypes.hx",9,0x88285664)
HX_LOCAL_STACK_FRAME(_hx_pos_34dd2f7a85ac35a8_10_boot,"mbs.core.MbsTypes","boot",0x57fd94e6,"mbs.core.MbsTypes.boot","mbs/core/MbsTypes.hx",10,0x88285664)
namespace mbs{
namespace core{

void MbsTypes_obj::__construct() { }

Dynamic MbsTypes_obj::__CreateEmpty() { return new MbsTypes_obj; }

void *MbsTypes_obj::_hx_vtable = 0;

Dynamic MbsTypes_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsTypes_obj > _hx_result = new MbsTypes_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MbsTypes_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7f50c738;
}

 ::mbs::core::MbsType MbsTypes_obj::BOOLEAN;

 ::mbs::core::MbsType MbsTypes_obj::INTEGER;

 ::mbs::core::MbsType MbsTypes_obj::FLOAT;

 ::mbs::core::MbsType MbsTypes_obj::STRING;

 ::mbs::core::MbsType MbsTypes_obj::LIST;

 ::mbs::core::MbsType MbsTypes_obj::DYNAMIC;


MbsTypes_obj::MbsTypes_obj()
{
}

bool MbsTypes_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"LIST") ) { outValue = ( LIST ); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"FLOAT") ) { outValue = ( FLOAT ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"STRING") ) { outValue = ( STRING ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"BOOLEAN") ) { outValue = ( BOOLEAN ); return true; }
		if (HX_FIELD_EQ(inName,"INTEGER") ) { outValue = ( INTEGER ); return true; }
		if (HX_FIELD_EQ(inName,"DYNAMIC") ) { outValue = ( DYNAMIC ); return true; }
	}
	return false;
}

bool MbsTypes_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"LIST") ) { LIST=ioValue.Cast<  ::mbs::core::MbsType >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"FLOAT") ) { FLOAT=ioValue.Cast<  ::mbs::core::MbsType >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"STRING") ) { STRING=ioValue.Cast<  ::mbs::core::MbsType >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"BOOLEAN") ) { BOOLEAN=ioValue.Cast<  ::mbs::core::MbsType >(); return true; }
		if (HX_FIELD_EQ(inName,"INTEGER") ) { INTEGER=ioValue.Cast<  ::mbs::core::MbsType >(); return true; }
		if (HX_FIELD_EQ(inName,"DYNAMIC") ) { DYNAMIC=ioValue.Cast<  ::mbs::core::MbsType >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MbsTypes_obj_sMemberStorageInfo = 0;
static hx::StaticInfo MbsTypes_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsType*/ ,(void *) &MbsTypes_obj::BOOLEAN,HX_HCSTRING("BOOLEAN","\x88","\xbe","\xd2","\xfd")},
	{hx::fsObject /*::mbs::core::MbsType*/ ,(void *) &MbsTypes_obj::INTEGER,HX_HCSTRING("INTEGER","\x9e","\x91","\xef","\x96")},
	{hx::fsObject /*::mbs::core::MbsType*/ ,(void *) &MbsTypes_obj::FLOAT,HX_HCSTRING("FLOAT","\x7c","\xfd","\x84","\x80")},
	{hx::fsObject /*::mbs::core::MbsType*/ ,(void *) &MbsTypes_obj::STRING,HX_HCSTRING("STRING","\xd1","\xd4","\xb2","\xc3")},
	{hx::fsObject /*::mbs::core::MbsType*/ ,(void *) &MbsTypes_obj::LIST,HX_HCSTRING("LIST","\x5e","\xe4","\x73","\x32")},
	{hx::fsObject /*::mbs::core::MbsType*/ ,(void *) &MbsTypes_obj::DYNAMIC,HX_HCSTRING("DYNAMIC","\x5f","\x73","\xe9","\xb5")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void MbsTypes_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsTypes_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsTypes_obj::BOOLEAN,"BOOLEAN");
	HX_MARK_MEMBER_NAME(MbsTypes_obj::INTEGER,"INTEGER");
	HX_MARK_MEMBER_NAME(MbsTypes_obj::FLOAT,"FLOAT");
	HX_MARK_MEMBER_NAME(MbsTypes_obj::STRING,"STRING");
	HX_MARK_MEMBER_NAME(MbsTypes_obj::LIST,"LIST");
	HX_MARK_MEMBER_NAME(MbsTypes_obj::DYNAMIC,"DYNAMIC");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsTypes_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsTypes_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsTypes_obj::BOOLEAN,"BOOLEAN");
	HX_VISIT_MEMBER_NAME(MbsTypes_obj::INTEGER,"INTEGER");
	HX_VISIT_MEMBER_NAME(MbsTypes_obj::FLOAT,"FLOAT");
	HX_VISIT_MEMBER_NAME(MbsTypes_obj::STRING,"STRING");
	HX_VISIT_MEMBER_NAME(MbsTypes_obj::LIST,"LIST");
	HX_VISIT_MEMBER_NAME(MbsTypes_obj::DYNAMIC,"DYNAMIC");
};

#endif

hx::Class MbsTypes_obj::__mClass;

static ::String MbsTypes_obj_sStaticFields[] = {
	HX_HCSTRING("BOOLEAN","\x88","\xbe","\xd2","\xfd"),
	HX_HCSTRING("INTEGER","\x9e","\x91","\xef","\x96"),
	HX_HCSTRING("FLOAT","\x7c","\xfd","\x84","\x80"),
	HX_HCSTRING("STRING","\xd1","\xd4","\xb2","\xc3"),
	HX_HCSTRING("LIST","\x5e","\xe4","\x73","\x32"),
	HX_HCSTRING("DYNAMIC","\x5f","\x73","\xe9","\xb5"),
	::String(null())
};

void MbsTypes_obj::__register()
{
	hx::Object *dummy = new MbsTypes_obj;
	MbsTypes_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("mbs.core.MbsTypes","\x3a","\x0c","\x14","\x56");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsTypes_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsTypes_obj::__SetStatic;
	__mClass->mMarkFunc = MbsTypes_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsTypes_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< MbsTypes_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsTypes_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsTypes_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsTypes_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void MbsTypes_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_34dd2f7a85ac35a8_5_boot)
HXDLIN(   5)		BOOLEAN =  ::mbs::core::MbsType_obj::__alloc( HX_CTX ,HX_("boolean",a8,ea,fe,7d),(int)1);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_34dd2f7a85ac35a8_6_boot)
HXDLIN(   6)		INTEGER =  ::mbs::core::MbsType_obj::__alloc( HX_CTX ,HX_("integer",be,bd,1b,17),(int)4);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_34dd2f7a85ac35a8_7_boot)
HXDLIN(   7)		FLOAT =  ::mbs::core::MbsType_obj::__alloc( HX_CTX ,HX_("float",9c,c5,96,02),(int)4);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_34dd2f7a85ac35a8_8_boot)
HXDLIN(   8)		STRING =  ::mbs::core::MbsType_obj::__alloc( HX_CTX ,HX_("string",d1,28,30,11),(int)4);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_34dd2f7a85ac35a8_9_boot)
HXDLIN(   9)		LIST =  ::mbs::core::MbsType_obj::__alloc( HX_CTX ,HX_("list",5e,1c,b3,47),(int)4);
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_34dd2f7a85ac35a8_10_boot)
HXDLIN(  10)		DYNAMIC =  ::mbs::core::MbsType_obj::__alloc( HX_CTX ,HX_("dynamic",7f,9f,15,36),(int)8);
            	}
}

} // end namespace mbs
} // end namespace core
