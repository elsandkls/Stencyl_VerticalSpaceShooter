// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsField
#include <mbs/core/MbsField.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_core_header_MbsHeader
#include <mbs/core/header/MbsHeader.h>
#endif
#ifndef INCLUDED_mbs_io_MbsDynamicHelper
#include <mbs/io/MbsDynamicHelper.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4e705079ee908071_47_new,"mbs.core.header.MbsHeader","new",0x904905db,"mbs.core.header.MbsHeader.new","mbs/core/header/MbsHeader.hx",47,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_42_getMbsType,"mbs.core.header.MbsHeader","getMbsType",0x177d8747,"mbs.core.header.MbsHeader.getMbsType","mbs/core/header/MbsHeader.hx",42,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_52_allocateNew,"mbs.core.header.MbsHeader","allocateNew",0x0afcf21e,"mbs.core.header.MbsHeader.allocateNew","mbs/core/header/MbsHeader.hx",52,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_57_getVersion,"mbs.core.header.MbsHeader","getVersion",0x41dbad07,"mbs.core.header.MbsHeader.getVersion","mbs/core/header/MbsHeader.hx",57,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_62_setVersion,"mbs.core.header.MbsHeader","setVersion",0x45594b7b,"mbs.core.header.MbsHeader.setVersion","mbs/core/header/MbsHeader.hx",62,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_67_getTypeTableHash,"mbs.core.header.MbsHeader","getTypeTableHash",0xf2695c11,"mbs.core.header.MbsHeader.getTypeTableHash","mbs/core/header/MbsHeader.hx",67,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_72_setTypeTableHash,"mbs.core.header.MbsHeader","setTypeTableHash",0x48ab4985,"mbs.core.header.MbsHeader.setTypeTableHash","mbs/core/header/MbsHeader.hx",72,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_77_getTypeTablePointer,"mbs.core.header.MbsHeader","getTypeTablePointer",0xb80d605a,"mbs.core.header.MbsHeader.getTypeTablePointer","mbs/core/header/MbsHeader.hx",77,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_82_setTypeTablePointer,"mbs.core.header.MbsHeader","setTypeTablePointer",0xf4aa5366,"mbs.core.header.MbsHeader.setTypeTablePointer","mbs/core/header/MbsHeader.hx",82,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_87_getStringTablePointer,"mbs.core.header.MbsHeader","getStringTablePointer",0x02870b31,"mbs.core.header.MbsHeader.getStringTablePointer","mbs/core/header/MbsHeader.hx",87,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_92_setStringTablePointer,"mbs.core.header.MbsHeader","setStringTablePointer",0x568fd93d,"mbs.core.header.MbsHeader.setStringTablePointer","mbs/core/header/MbsHeader.hx",92,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_97_getRoot,"mbs.core.header.MbsHeader","getRoot",0x5baeacd3,"mbs.core.header.MbsHeader.getRoot","mbs/core/header/MbsHeader.hx",97,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_102_setRoot,"mbs.core.header.MbsHeader","setRoot",0x4eb03ddf,"mbs.core.header.MbsHeader.setRoot","mbs/core/header/MbsHeader.hx",102,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_25_initializeType,"mbs.core.header.MbsHeader","initializeType",0x436ece8f,"mbs.core.header.MbsHeader.initializeType","mbs/core/header/MbsHeader.hx",25,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_22_initializeType,"mbs.core.header.MbsHeader","initializeType",0x436ece8f,"mbs.core.header.MbsHeader.initializeType","mbs/core/header/MbsHeader.hx",22,0x7a200b16)
HX_LOCAL_STACK_FRAME(_hx_pos_4e705079ee908071_37_new_MbsHeader_list,"mbs.core.header.MbsHeader","new_MbsHeader_list",0xed9075f6,"mbs.core.header.MbsHeader.new_MbsHeader_list","mbs/core/header/MbsHeader.hx",37,0x7a200b16)
namespace mbs{
namespace core{
namespace header{

void MbsHeader_obj::__construct(::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_47_new)
HXDLIN(  47)		super::__construct(data);
            	}

Dynamic MbsHeader_obj::__CreateEmpty() { return new MbsHeader_obj; }

void *MbsHeader_obj::_hx_vtable = 0;

Dynamic MbsHeader_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsHeader_obj > _hx_result = new MbsHeader_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsHeader_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x17b72d64) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x17b72d64;
	} else {
		return inClassId==(int)0x612195a1;
	}
}

 ::mbs::core::MbsType MbsHeader_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_42_getMbsType)
HXDLIN(  42)		return ::mbs::core::header::MbsHeader_obj::MBS_HEADER;
            	}


void MbsHeader_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_52_allocateNew)
HXDLIN(  52)		::Dynamic _hx_tmp = this->data;
HXDLIN(  52)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::mbs::core::header::MbsHeader_obj::MBS_HEADER->getSize()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHeader_obj,allocateNew,(void))

int MbsHeader_obj::getVersion(){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_57_getVersion)
HXDLIN(  57)		::Dynamic _hx_tmp = this->data;
HXDLIN(  57)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::mbs::core::header::MbsHeader_obj::version->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHeader_obj,getVersion,return )

void MbsHeader_obj::setVersion(int _val){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_62_setVersion)
HXDLIN(  62)		::Dynamic _hx_tmp = this->data;
HXDLIN(  62)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::mbs::core::header::MbsHeader_obj::version->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsHeader_obj,setVersion,(void))

int MbsHeader_obj::getTypeTableHash(){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_67_getTypeTableHash)
HXDLIN(  67)		::Dynamic _hx_tmp = this->data;
HXDLIN(  67)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::mbs::core::header::MbsHeader_obj::typeTableHash->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHeader_obj,getTypeTableHash,return )

void MbsHeader_obj::setTypeTableHash(int _val){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_72_setTypeTableHash)
HXDLIN(  72)		::Dynamic _hx_tmp = this->data;
HXDLIN(  72)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::mbs::core::header::MbsHeader_obj::typeTableHash->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsHeader_obj,setTypeTableHash,(void))

int MbsHeader_obj::getTypeTablePointer(){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_77_getTypeTablePointer)
HXDLIN(  77)		::Dynamic _hx_tmp = this->data;
HXDLIN(  77)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::mbs::core::header::MbsHeader_obj::typeTablePointer->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHeader_obj,getTypeTablePointer,return )

void MbsHeader_obj::setTypeTablePointer(int _val){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_82_setTypeTablePointer)
HXDLIN(  82)		::Dynamic _hx_tmp = this->data;
HXDLIN(  82)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::mbs::core::header::MbsHeader_obj::typeTablePointer->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsHeader_obj,setTypeTablePointer,(void))

int MbsHeader_obj::getStringTablePointer(){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_87_getStringTablePointer)
HXDLIN(  87)		::Dynamic _hx_tmp = this->data;
HXDLIN(  87)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::mbs::core::header::MbsHeader_obj::stringTablePointer->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHeader_obj,getStringTablePointer,return )

void MbsHeader_obj::setStringTablePointer(int _val){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_92_setStringTablePointer)
HXDLIN(  92)		::Dynamic _hx_tmp = this->data;
HXDLIN(  92)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::mbs::core::header::MbsHeader_obj::stringTablePointer->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsHeader_obj,setStringTablePointer,(void))

 ::Dynamic MbsHeader_obj::getRoot(){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_97_getRoot)
HXDLIN(  97)		::Dynamic _hx_tmp = this->data;
HXDLIN(  97)		return ::mbs::io::MbsDynamicHelper_obj::readDynamic(_hx_tmp,(this->address + ::mbs::core::header::MbsHeader_obj::root->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHeader_obj,getRoot,return )

void MbsHeader_obj::setRoot( ::Dynamic _val){
            	HX_STACKFRAME(&_hx_pos_4e705079ee908071_102_setRoot)
HXDLIN( 102)		::Dynamic _hx_tmp = this->data;
HXDLIN( 102)		::mbs::io::MbsDynamicHelper_obj::writeDynamic(_hx_tmp,(this->address + ::mbs::core::header::MbsHeader_obj::root->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsHeader_obj,setRoot,(void))

 ::mbs::core::MbsField MbsHeader_obj::version;

 ::mbs::core::MbsField MbsHeader_obj::typeTableHash;

 ::mbs::core::MbsField MbsHeader_obj::typeTablePointer;

 ::mbs::core::MbsField MbsHeader_obj::stringTablePointer;

 ::mbs::core::MbsField MbsHeader_obj::root;

 ::mbs::core::ComposedType MbsHeader_obj::MBS_HEADER;

void MbsHeader_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_4e705079ee908071_25_initializeType)
HXLINE(  25)			return  ::mbs::core::header::MbsHeader_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_4e705079ee908071_22_initializeType)
HXLINE(  23)		if (hx::IsNotNull( ::mbs::core::header::MbsHeader_obj::MBS_HEADER )) {
HXLINE(  23)			return;
            		}
HXLINE(  24)		::mbs::core::header::MbsHeader_obj::MBS_HEADER =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsHeader",8b,1b,a5,37));
HXLINE(  25)		::mbs::core::header::MbsHeader_obj::MBS_HEADER->setInstantiator( ::Dynamic(new _hx_Closure_0()));
HXLINE(  27)		::mbs::core::header::MbsHeader_obj::version = ::mbs::core::header::MbsHeader_obj::MBS_HEADER->createField(HX_("version",18,e7,f1,7c),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  28)		::mbs::core::header::MbsHeader_obj::typeTableHash = ::mbs::core::header::MbsHeader_obj::MBS_HEADER->createField(HX_("typeTableHash",e2,f8,d3,41),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  29)		::mbs::core::header::MbsHeader_obj::typeTablePointer = ::mbs::core::header::MbsHeader_obj::MBS_HEADER->createField(HX_("typeTablePointer",29,dc,51,0e),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  30)		::mbs::core::header::MbsHeader_obj::stringTablePointer = ::mbs::core::header::MbsHeader_obj::MBS_HEADER->createField(HX_("stringTablePointer",c0,58,bd,cf),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  31)		::mbs::core::header::MbsHeader_obj::root = ::mbs::core::header::MbsHeader_obj::MBS_HEADER->createField(HX_("root",22,ee,ae,4b),::mbs::core::MbsTypes_obj::DYNAMIC);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsHeader_obj,initializeType,(void))

 ::mbs::io::MbsList MbsHeader_obj::new_MbsHeader_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_4e705079ee908071_37_new_MbsHeader_list)
HXDLIN(  37)		 ::mbs::core::ComposedType _hx_tmp = ::mbs::core::header::MbsHeader_obj::MBS_HEADER;
HXDLIN(  37)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::mbs::core::header::MbsHeader_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsHeader_obj,new_MbsHeader_list,return )


hx::ObjectPtr< MbsHeader_obj > MbsHeader_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsHeader_obj > __this = new MbsHeader_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsHeader_obj > MbsHeader_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsHeader_obj *__this = (MbsHeader_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsHeader_obj), true, "mbs.core.header.MbsHeader"));
	*(void **)__this = MbsHeader_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsHeader_obj::MbsHeader_obj()
{
}

hx::Val MbsHeader_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"getRoot") ) { return hx::Val( getRoot_dyn() ); }
		if (HX_FIELD_EQ(inName,"setRoot") ) { return hx::Val( setRoot_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVersion") ) { return hx::Val( getVersion_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVersion") ) { return hx::Val( setVersion_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getTypeTableHash") ) { return hx::Val( getTypeTableHash_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTypeTableHash") ) { return hx::Val( setTypeTableHash_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"getTypeTablePointer") ) { return hx::Val( getTypeTablePointer_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTypeTablePointer") ) { return hx::Val( setTypeTablePointer_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"getStringTablePointer") ) { return hx::Val( getStringTablePointer_dyn() ); }
		if (HX_FIELD_EQ(inName,"setStringTablePointer") ) { return hx::Val( setStringTablePointer_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsHeader_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"root") ) { outValue = ( root ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { outValue = ( version ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"MBS_HEADER") ) { outValue = ( MBS_HEADER ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"typeTableHash") ) { outValue = ( typeTableHash ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"typeTablePointer") ) { outValue = ( typeTablePointer ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"stringTablePointer") ) { outValue = ( stringTablePointer ); return true; }
		if (HX_FIELD_EQ(inName,"new_MbsHeader_list") ) { outValue = new_MbsHeader_list_dyn(); return true; }
	}
	return false;
}

bool MbsHeader_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"root") ) { root=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"version") ) { version=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"MBS_HEADER") ) { MBS_HEADER=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"typeTableHash") ) { typeTableHash=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"typeTablePointer") ) { typeTablePointer=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"stringTablePointer") ) { stringTablePointer=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MbsHeader_obj_sMemberStorageInfo = 0;
static hx::StaticInfo MbsHeader_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsHeader_obj::version,HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsHeader_obj::typeTableHash,HX_HCSTRING("typeTableHash","\xe2","\xf8","\xd3","\x41")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsHeader_obj::typeTablePointer,HX_HCSTRING("typeTablePointer","\x29","\xdc","\x51","\x0e")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsHeader_obj::stringTablePointer,HX_HCSTRING("stringTablePointer","\xc0","\x58","\xbd","\xcf")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsHeader_obj::root,HX_HCSTRING("root","\x22","\xee","\xae","\x4b")},
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsHeader_obj::MBS_HEADER,HX_HCSTRING("MBS_HEADER","\x8e","\xe7","\xf7","\xe1")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsHeader_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	HX_HCSTRING("getVersion","\x22","\x6d","\x53","\xcc"),
	HX_HCSTRING("setVersion","\x96","\x0b","\xd1","\xcf"),
	HX_HCSTRING("getTypeTableHash","\x6c","\xa2","\xf4","\xab"),
	HX_HCSTRING("setTypeTableHash","\xe0","\x8f","\x36","\x02"),
	HX_HCSTRING("getTypeTablePointer","\xdf","\x44","\x78","\xc8"),
	HX_HCSTRING("setTypeTablePointer","\xeb","\x37","\x15","\x05"),
	HX_HCSTRING("getStringTablePointer","\xf6","\xda","\xd7","\x2e"),
	HX_HCSTRING("setStringTablePointer","\x02","\xa9","\xe0","\x82"),
	HX_HCSTRING("getRoot","\xd8","\x9d","\x31","\x1e"),
	HX_HCSTRING("setRoot","\xe4","\x2e","\x33","\x11"),
	::String(null()) };

static void MbsHeader_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsHeader_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsHeader_obj::version,"version");
	HX_MARK_MEMBER_NAME(MbsHeader_obj::typeTableHash,"typeTableHash");
	HX_MARK_MEMBER_NAME(MbsHeader_obj::typeTablePointer,"typeTablePointer");
	HX_MARK_MEMBER_NAME(MbsHeader_obj::stringTablePointer,"stringTablePointer");
	HX_MARK_MEMBER_NAME(MbsHeader_obj::root,"root");
	HX_MARK_MEMBER_NAME(MbsHeader_obj::MBS_HEADER,"MBS_HEADER");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsHeader_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsHeader_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsHeader_obj::version,"version");
	HX_VISIT_MEMBER_NAME(MbsHeader_obj::typeTableHash,"typeTableHash");
	HX_VISIT_MEMBER_NAME(MbsHeader_obj::typeTablePointer,"typeTablePointer");
	HX_VISIT_MEMBER_NAME(MbsHeader_obj::stringTablePointer,"stringTablePointer");
	HX_VISIT_MEMBER_NAME(MbsHeader_obj::root,"root");
	HX_VISIT_MEMBER_NAME(MbsHeader_obj::MBS_HEADER,"MBS_HEADER");
};

#endif

hx::Class MbsHeader_obj::__mClass;

static ::String MbsHeader_obj_sStaticFields[] = {
	HX_HCSTRING("version","\x18","\xe7","\xf1","\x7c"),
	HX_HCSTRING("typeTableHash","\xe2","\xf8","\xd3","\x41"),
	HX_HCSTRING("typeTablePointer","\x29","\xdc","\x51","\x0e"),
	HX_HCSTRING("stringTablePointer","\xc0","\x58","\xbd","\xcf"),
	HX_HCSTRING("root","\x22","\xee","\xae","\x4b"),
	HX_HCSTRING("MBS_HEADER","\x8e","\xe7","\xf7","\xe1"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsHeader_list","\x11","\x49","\x3e","\x95"),
	::String(null())
};

void MbsHeader_obj::__register()
{
	hx::Object *dummy = new MbsHeader_obj;
	MbsHeader_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("mbs.core.header.MbsHeader","\x69","\x7c","\x8c","\x16");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsHeader_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsHeader_obj::__SetStatic;
	__mClass->mMarkFunc = MbsHeader_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsHeader_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsHeader_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsHeader_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsHeader_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsHeader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsHeader_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace mbs
} // end namespace core
} // end namespace header
