// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_lime__internal_backend_native_NativeOpenGLRenderContext
#include <lime/_internal/backend/native/NativeOpenGLRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_RenderContext
#include <lime/graphics/RenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics__OpenGLRenderContext_OpenGLRenderContext_Impl_
#include <lime/graphics/_OpenGLRenderContext/OpenGLRenderContext_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_0cee4d67e8e0740c_44_fromRenderContext,"lime.graphics._OpenGLRenderContext.OpenGLRenderContext_Impl_","fromRenderContext",0xc98e9ef2,"lime.graphics._OpenGLRenderContext.OpenGLRenderContext_Impl_.fromRenderContext","lime/graphics/OpenGLRenderContext.hx",44,0x007bcf9e)
namespace lime{
namespace graphics{
namespace _OpenGLRenderContext{

void OpenGLRenderContext_Impl__obj::__construct() { }

Dynamic OpenGLRenderContext_Impl__obj::__CreateEmpty() { return new OpenGLRenderContext_Impl__obj; }

void *OpenGLRenderContext_Impl__obj::_hx_vtable = 0;

Dynamic OpenGLRenderContext_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< OpenGLRenderContext_Impl__obj > _hx_result = new OpenGLRenderContext_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool OpenGLRenderContext_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x777184d7;
}

 ::lime::_internal::backend::native::NativeOpenGLRenderContext OpenGLRenderContext_Impl__obj::fromRenderContext( ::lime::graphics::RenderContext context){
            	HX_STACKFRAME(&_hx_pos_0cee4d67e8e0740c_44_fromRenderContext)
HXDLIN(  44)		return context->gl;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(OpenGLRenderContext_Impl__obj,fromRenderContext,return )


OpenGLRenderContext_Impl__obj::OpenGLRenderContext_Impl__obj()
{
}

bool OpenGLRenderContext_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"fromRenderContext") ) { outValue = fromRenderContext_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *OpenGLRenderContext_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *OpenGLRenderContext_Impl__obj_sStaticStorageInfo = 0;
#endif

static void OpenGLRenderContext_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(OpenGLRenderContext_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void OpenGLRenderContext_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(OpenGLRenderContext_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class OpenGLRenderContext_Impl__obj::__mClass;

static ::String OpenGLRenderContext_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("fromRenderContext","\x6f","\x19","\xd4","\xba"),
	::String(null())
};

void OpenGLRenderContext_Impl__obj::__register()
{
	hx::Object *dummy = new OpenGLRenderContext_Impl__obj;
	OpenGLRenderContext_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.graphics._OpenGLRenderContext.OpenGLRenderContext_Impl_","\x31","\x79","\x32","\x26");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &OpenGLRenderContext_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = OpenGLRenderContext_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(OpenGLRenderContext_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< OpenGLRenderContext_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = OpenGLRenderContext_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = OpenGLRenderContext_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = OpenGLRenderContext_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace graphics
} // end namespace _OpenGLRenderContext
