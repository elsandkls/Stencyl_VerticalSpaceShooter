// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime__internal_backend_native_NativeCFFI
#include <lime/_internal/backend/native/NativeCFFI.h>
#endif
#ifndef INCLUDED_lime_system__CFFIPointer_CFFIPointer_Impl_
#include <lime/system/_CFFIPointer/CFFIPointer_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_lime_utils_BytePointerData
#include <lime/utils/BytePointerData.h>
#endif
#ifndef INCLUDED_lime_utils__Bytes_Bytes_Impl_
#include <lime/utils/_Bytes/Bytes_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__DataPointer_DataPointer_Impl_
#include <lime/utils/_DataPointer/DataPointer_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_26__new,"lime.utils._DataPointer.DataPointer_Impl_","_new",0x3b176380,"lime.utils._DataPointer.DataPointer_Impl_._new","lime/utils/DataPointer.hx",26,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_33_fromInt,"lime.utils._DataPointer.DataPointer_Impl_","fromInt",0xca24ece6,"lime.utils._DataPointer.DataPointer_Impl_.fromInt","lime/utils/DataPointer.hx",33,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_50_fromFloat,"lime.utils._DataPointer.DataPointer_Impl_","fromFloat",0x935cd153,"lime.utils._DataPointer.DataPointer_Impl_.fromFloat","lime/utils/DataPointer.hx",50,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_64_fromCharPointer,"lime.utils._DataPointer.DataPointer_Impl_","fromCharPointer",0x07dedf7e,"lime.utils._DataPointer.DataPointer_Impl_.fromCharPointer","lime/utils/DataPointer.hx",64,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_70_fromUint8Pointer,"lime.utils._DataPointer.DataPointer_Impl_","fromUint8Pointer",0x8086f628,"lime.utils._DataPointer.DataPointer_Impl_.fromUint8Pointer","lime/utils/DataPointer.hx",70,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_83_fromBytesPointer,"lime.utils._DataPointer.DataPointer_Impl_","fromBytesPointer",0x01727cbb,"lime.utils._DataPointer.DataPointer_Impl_.fromBytesPointer","lime/utils/DataPointer.hx",83,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_101_fromArrayBufferView,"lime.utils._DataPointer.DataPointer_Impl_","fromArrayBufferView",0xced8dcf5,"lime.utils._DataPointer.DataPointer_Impl_.fromArrayBufferView","lime/utils/DataPointer.hx",101,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_119_fromArrayBuffer,"lime.utils._DataPointer.DataPointer_Impl_","fromArrayBuffer",0x4d148670,"lime.utils._DataPointer.DataPointer_Impl_.fromArrayBuffer","lime/utils/DataPointer.hx",119,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_133_fromBytes,"lime.utils._DataPointer.DataPointer_Impl_","fromBytes",0x4e5e1422,"lime.utils._DataPointer.DataPointer_Impl_.fromBytes","lime/utils/DataPointer.hx",133,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_151_fromBytesData,"lime.utils._DataPointer.DataPointer_Impl_","fromBytesData",0x99d44f6c,"lime.utils._DataPointer.DataPointer_Impl_.fromBytesData","lime/utils/DataPointer.hx",151,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_167_fromLimeBytes,"lime.utils._DataPointer.DataPointer_Impl_","fromLimeBytes",0x0d79484d,"lime.utils._DataPointer.DataPointer_Impl_.fromLimeBytes","lime/utils/DataPointer.hx",167,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_173_fromCFFIPointer,"lime.utils._DataPointer.DataPointer_Impl_","fromCFFIPointer",0x157099ce,"lime.utils._DataPointer.DataPointer_Impl_.fromCFFIPointer","lime/utils/DataPointer.hx",173,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_189_fromFile,"lime.utils._DataPointer.DataPointer_Impl_","fromFile",0x142ae6a5,"lime.utils._DataPointer.DataPointer_Impl_.fromFile","lime/utils/DataPointer.hx",189,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_436___withOffset,"lime.utils._DataPointer.DataPointer_Impl_","__withOffset",0x51cf4a78,"lime.utils._DataPointer.DataPointer_Impl_.__withOffset","lime/utils/DataPointer.hx",436,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_449_equals,"lime.utils._DataPointer.DataPointer_Impl_","equals",0xe532421e,"lime.utils._DataPointer.DataPointer_Impl_.equals","lime/utils/DataPointer.hx",449,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_450_equalsPointer,"lime.utils._DataPointer.DataPointer_Impl_","equalsPointer",0xd8d6463f,"lime.utils._DataPointer.DataPointer_Impl_.equalsPointer","lime/utils/DataPointer.hx",450,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_451_greaterThan,"lime.utils._DataPointer.DataPointer_Impl_","greaterThan",0xb434053c,"lime.utils._DataPointer.DataPointer_Impl_.greaterThan","lime/utils/DataPointer.hx",451,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_453_greaterThanPointer,"lime.utils._DataPointer.DataPointer_Impl_","greaterThanPointer",0x7ccc42e1,"lime.utils._DataPointer.DataPointer_Impl_.greaterThanPointer","lime/utils/DataPointer.hx",453,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_455_greaterThanOrEqual,"lime.utils._DataPointer.DataPointer_Impl_","greaterThanOrEqual",0xcdd861b5,"lime.utils._DataPointer.DataPointer_Impl_.greaterThanOrEqual","lime/utils/DataPointer.hx",455,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_457_greaterThanOrEqualPointer,"lime.utils._DataPointer.DataPointer_Impl_","greaterThanOrEqualPointer",0xc9835788,"lime.utils._DataPointer.DataPointer_Impl_.greaterThanOrEqualPointer","lime/utils/DataPointer.hx",457,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_459_lessThan,"lime.utils._DataPointer.DataPointer_Impl_","lessThan",0x65d7a8f9,"lime.utils._DataPointer.DataPointer_Impl_.lessThan","lime/utils/DataPointer.hx",459,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_461_lessThanPointer,"lime.utils._DataPointer.DataPointer_Impl_","lessThanPointer",0xee7140c4,"lime.utils._DataPointer.DataPointer_Impl_.lessThanPointer","lime/utils/DataPointer.hx",461,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_463_lessThanOrEqual,"lime.utils._DataPointer.DataPointer_Impl_","lessThanOrEqual",0x3f7d5f98,"lime.utils._DataPointer.DataPointer_Impl_.lessThanOrEqual","lime/utils/DataPointer.hx",463,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_465_lessThanOrEqualPointer,"lime.utils._DataPointer.DataPointer_Impl_","lessThanOrEqualPointer",0x26e32c05,"lime.utils._DataPointer.DataPointer_Impl_.lessThanOrEqualPointer","lime/utils/DataPointer.hx",465,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_467_notEquals,"lime.utils._DataPointer.DataPointer_Impl_","notEquals",0x1918ed33,"lime.utils._DataPointer.DataPointer_Impl_.notEquals","lime/utils/DataPointer.hx",467,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_468_notEqualsPointer,"lime.utils._DataPointer.DataPointer_Impl_","notEqualsPointer",0xf10e57ca,"lime.utils._DataPointer.DataPointer_Impl_.notEqualsPointer","lime/utils/DataPointer.hx",468,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_469_plus,"lime.utils._DataPointer.DataPointer_Impl_","plus",0x46528d79,"lime.utils._DataPointer.DataPointer_Impl_.plus","lime/utils/DataPointer.hx",469,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_470_plusPointer,"lime.utils._DataPointer.DataPointer_Impl_","plusPointer",0xf813ec44,"lime.utils._DataPointer.DataPointer_Impl_.plusPointer","lime/utils/DataPointer.hx",470,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_471_minus,"lime.utils._DataPointer.DataPointer_Impl_","minus",0x85b48d71,"lime.utils._DataPointer.DataPointer_Impl_.minus","lime/utils/DataPointer.hx",471,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_472_minusPointer,"lime.utils._DataPointer.DataPointer_Impl_","minusPointer",0x7f5e5b4c,"lime.utils._DataPointer.DataPointer_Impl_.minusPointer","lime/utils/DataPointer.hx",472,0x48d01ae3)
namespace lime{
namespace utils{
namespace _DataPointer{

void DataPointer_Impl__obj::__construct() { }

Dynamic DataPointer_Impl__obj::__CreateEmpty() { return new DataPointer_Impl__obj; }

void *DataPointer_Impl__obj::_hx_vtable = 0;

Dynamic DataPointer_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DataPointer_Impl__obj > _hx_result = new DataPointer_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DataPointer_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x11922d63;
}

Float DataPointer_Impl__obj::_new(Float data){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_26__new)
HXDLIN(  26)		Float this1 = data;
HXDLIN(  26)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,_new,return )

Float DataPointer_Impl__obj::fromInt(int value){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_33_fromInt)
HXLINE(  36)		Float _hx_float = value;
HXLINE(  37)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::_new(_hx_float);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromInt,return )

Float DataPointer_Impl__obj::fromFloat(Float value){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_50_fromFloat)
HXDLIN(  50)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::_new(value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromFloat,return )

Float DataPointer_Impl__obj::fromCharPointer(::cpp::Pointer< char > pointer){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_64_fromCharPointer)
HXDLIN(  64)		return (uintptr_t)pointer->ptr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromCharPointer,return )

Float DataPointer_Impl__obj::fromUint8Pointer(::cpp::Pointer< unsigned char > pointer){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_70_fromUint8Pointer)
HXDLIN(  70)		return (uintptr_t)pointer->ptr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromUint8Pointer,return )

Float DataPointer_Impl__obj::fromBytesPointer( ::lime::utils::BytePointerData pointer){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_83_fromBytesPointer)
HXLINE(  86)		bool _hx_tmp;
HXDLIN(  86)		if (hx::IsNotNull( pointer )) {
HXLINE(  86)			_hx_tmp = hx::IsNull( pointer->bytes );
            		}
            		else {
HXLINE(  86)			_hx_tmp = true;
            		}
HXDLIN(  86)		if (_hx_tmp) {
HXLINE(  86)			return (int)0;
            		}
HXLINE(  87)		::cpp::Pointer< unsigned char > tmp = ( (::cpp::Pointer< unsigned char >)(::cpp::Pointer_obj::arrayElem(pointer->bytes->b,(int)0)) );
HXDLIN(  87)		::cpp::Pointer< unsigned char > tmp1 = tmp->add(pointer->offset);
HXDLIN(  87)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromUint8Pointer(tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromBytesPointer,return )

Float DataPointer_Impl__obj::fromArrayBufferView( ::lime::utils::ArrayBufferView arrayBufferView){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_101_fromArrayBufferView)
HXLINE( 104)		if (hx::IsNull( arrayBufferView )) {
HXLINE( 104)			return (int)0;
            		}
HXLINE( 105)		::cpp::Pointer< unsigned char > tmp = ( (::cpp::Pointer< unsigned char >)(::cpp::Pointer_obj::arrayElem(arrayBufferView->buffer->b,(int)0)) );
HXDLIN( 105)		::cpp::Pointer< unsigned char > tmp1 = tmp->add(arrayBufferView->byteOffset);
HXDLIN( 105)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromUint8Pointer(tmp1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromArrayBufferView,return )

Float DataPointer_Impl__obj::fromArrayBuffer( ::haxe::io::Bytes buffer){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_119_fromArrayBuffer)
HXLINE( 122)		if (hx::IsNull( buffer )) {
HXLINE( 122)			return (int)0;
            		}
HXLINE( 123)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromBytes(buffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromArrayBuffer,return )

Float DataPointer_Impl__obj::fromBytes( ::haxe::io::Bytes bytes){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_133_fromBytes)
HXLINE( 136)		if (hx::IsNull( bytes )) {
HXLINE( 136)			return (int)0;
            		}
HXLINE( 137)		::cpp::Pointer< unsigned char > tmp = ( (::cpp::Pointer< unsigned char >)(::cpp::Pointer_obj::arrayElem(bytes->b,(int)0)) );
HXDLIN( 137)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromUint8Pointer(tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromBytes,return )

Float DataPointer_Impl__obj::fromBytesData(::Array< unsigned char > bytesData){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_151_fromBytesData)
HXLINE( 154)		if (hx::IsNull( bytesData )) {
HXLINE( 154)			return (int)0;
            		}
HXLINE( 155)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromBytes(::haxe::io::Bytes_obj::ofData(bytesData));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromBytesData,return )

Float DataPointer_Impl__obj::fromLimeBytes( ::haxe::io::Bytes bytes){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_167_fromLimeBytes)
HXDLIN( 167)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromBytes(bytes);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromLimeBytes,return )

Float DataPointer_Impl__obj::fromCFFIPointer( ::Dynamic pointer){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_173_fromCFFIPointer)
HXLINE( 176)		if (hx::IsNull( pointer )) {
HXLINE( 176)			return (int)0;
            		}
HXLINE( 177)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::_new(::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(pointer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromCFFIPointer,return )

Float DataPointer_Impl__obj::fromFile(::String path){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_189_fromFile)
HXDLIN( 189)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromBytes(::lime::utils::_Bytes::Bytes_Impl__obj::fromFile(path));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromFile,return )

Float DataPointer_Impl__obj::_hx___withOffset(Float data,int offset){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_436___withOffset)
HXLINE( 439)		if ((data == (int)0)) {
HXLINE( 439)			return (int)0;
            		}
HXLINE( 440)		Float data1 = ::lime::_internal::backend::native::NativeCFFI_obj::lime_data_pointer_offset(data,offset);
HXLINE( 441)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::_new(data1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,_hx___withOffset,return )

bool DataPointer_Impl__obj::equals(Float a,int b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_449_equals)
HXDLIN( 449)		return (a == b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,equals,return )

bool DataPointer_Impl__obj::equalsPointer(Float a,Float b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_450_equalsPointer)
HXDLIN( 450)		return (a == b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,equalsPointer,return )

bool DataPointer_Impl__obj::greaterThan(Float a,int b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_451_greaterThan)
HXDLIN( 451)		return (a > b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,greaterThan,return )

bool DataPointer_Impl__obj::greaterThanPointer(Float a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_453_greaterThanPointer)
HXDLIN( 453)		Float _hx_tmp = ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a);
HXDLIN( 453)		return (_hx_tmp > ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,greaterThanPointer,return )

bool DataPointer_Impl__obj::greaterThanOrEqual(Float a,int b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_455_greaterThanOrEqual)
HXDLIN( 455)		return (a >= b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,greaterThanOrEqual,return )

bool DataPointer_Impl__obj::greaterThanOrEqualPointer(Float a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_457_greaterThanOrEqualPointer)
HXDLIN( 457)		Float _hx_tmp = ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a);
HXDLIN( 457)		return (_hx_tmp >= ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,greaterThanOrEqualPointer,return )

bool DataPointer_Impl__obj::lessThan(Float a,int b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_459_lessThan)
HXDLIN( 459)		return (a < b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,lessThan,return )

bool DataPointer_Impl__obj::lessThanPointer(Float a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_461_lessThanPointer)
HXDLIN( 461)		Float _hx_tmp = ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a);
HXDLIN( 461)		return (_hx_tmp < ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,lessThanPointer,return )

bool DataPointer_Impl__obj::lessThanOrEqual(Float a,int b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_463_lessThanOrEqual)
HXDLIN( 463)		return (a <= b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,lessThanOrEqual,return )

bool DataPointer_Impl__obj::lessThanOrEqualPointer(Float a, ::Dynamic b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_465_lessThanOrEqualPointer)
HXDLIN( 465)		Float _hx_tmp = ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(a);
HXDLIN( 465)		return (_hx_tmp <= ::lime::_hx_system::_CFFIPointer::CFFIPointer_Impl__obj::get(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,lessThanOrEqualPointer,return )

bool DataPointer_Impl__obj::notEquals(Float a,int b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_467_notEquals)
HXDLIN( 467)		return (a != b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,notEquals,return )

bool DataPointer_Impl__obj::notEqualsPointer(Float a,Float b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_468_notEqualsPointer)
HXDLIN( 468)		return (a != b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,notEqualsPointer,return )

Float DataPointer_Impl__obj::plus(Float a,int b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_469_plus)
HXDLIN( 469)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::_hx___withOffset(a,b);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,plus,return )

Float DataPointer_Impl__obj::plusPointer(Float a,Float b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_470_plusPointer)
HXDLIN( 470)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::_hx___withOffset(a,::Std_obj::_hx_int(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,plusPointer,return )

Float DataPointer_Impl__obj::minus(Float a,int b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_471_minus)
HXDLIN( 471)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::_hx___withOffset(a,-(b));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,minus,return )

Float DataPointer_Impl__obj::minusPointer(Float a,Float b){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_472_minusPointer)
HXDLIN( 472)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::_hx___withOffset(a,-(::Std_obj::_hx_int(b)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(DataPointer_Impl__obj,minusPointer,return )


DataPointer_Impl__obj::DataPointer_Impl__obj()
{
}

bool DataPointer_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"plus") ) { outValue = plus_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"minus") ) { outValue = minus_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"equals") ) { outValue = equals_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fromInt") ) { outValue = fromInt_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fromFile") ) { outValue = fromFile_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lessThan") ) { outValue = lessThan_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromFloat") ) { outValue = fromFloat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromBytes") ) { outValue = fromBytes_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"notEquals") ) { outValue = notEquals_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"greaterThan") ) { outValue = greaterThan_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"plusPointer") ) { outValue = plusPointer_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"__withOffset") ) { outValue = _hx___withOffset_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"minusPointer") ) { outValue = minusPointer_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"fromBytesData") ) { outValue = fromBytesData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromLimeBytes") ) { outValue = fromLimeBytes_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"equalsPointer") ) { outValue = equalsPointer_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"fromCharPointer") ) { outValue = fromCharPointer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromArrayBuffer") ) { outValue = fromArrayBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromCFFIPointer") ) { outValue = fromCFFIPointer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lessThanPointer") ) { outValue = lessThanPointer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lessThanOrEqual") ) { outValue = lessThanOrEqual_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"fromUint8Pointer") ) { outValue = fromUint8Pointer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fromBytesPointer") ) { outValue = fromBytesPointer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"notEqualsPointer") ) { outValue = notEqualsPointer_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"greaterThanPointer") ) { outValue = greaterThanPointer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"greaterThanOrEqual") ) { outValue = greaterThanOrEqual_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"fromArrayBufferView") ) { outValue = fromArrayBufferView_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"lessThanOrEqualPointer") ) { outValue = lessThanOrEqualPointer_dyn(); return true; }
		break;
	case 25:
		if (HX_FIELD_EQ(inName,"greaterThanOrEqualPointer") ) { outValue = greaterThanOrEqualPointer_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *DataPointer_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *DataPointer_Impl__obj_sStaticStorageInfo = 0;
#endif

static void DataPointer_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DataPointer_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DataPointer_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DataPointer_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class DataPointer_Impl__obj::__mClass;

static ::String DataPointer_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("fromInt","\xa5","\xdd","\xfa","\x57"),
	HX_HCSTRING("fromFloat","\xd2","\xaf","\x1f","\xb7"),
	HX_HCSTRING("fromCharPointer","\x3d","\x27","\x42","\xa7"),
	HX_HCSTRING("fromUint8Pointer","\x89","\x75","\x02","\x58"),
	HX_HCSTRING("fromBytesPointer","\x1c","\xfc","\xed","\xd8"),
	HX_HCSTRING("fromArrayBufferView","\x34","\x70","\x74","\xc8"),
	HX_HCSTRING("fromArrayBuffer","\x2f","\xce","\x77","\xec"),
	HX_HCSTRING("fromBytes","\xa1","\xf2","\x20","\x72"),
	HX_HCSTRING("fromBytesData","\x6b","\xd9","\x41","\xdb"),
	HX_HCSTRING("fromLimeBytes","\x4c","\xd2","\xe6","\x4e"),
	HX_HCSTRING("fromCFFIPointer","\x8d","\xe1","\xd3","\xb4"),
	HX_HCSTRING("fromFile","\x06","\x9d","\x87","\xa1"),
	HX_HCSTRING("__withOffset","\x59","\x45","\x9d","\x84"),
	HX_HCSTRING("equals","\x3f","\xee","\xf2","\xbf"),
	HX_HCSTRING("equalsPointer","\x3e","\xd0","\x43","\x1a"),
	HX_HCSTRING("greaterThan","\x7b","\xc1","\x4a","\x75"),
	HX_HCSTRING("greaterThanPointer","\x82","\x1c","\xaf","\xc9"),
	HX_HCSTRING("greaterThanOrEqual","\x56","\x3b","\xbb","\x1a"),
	HX_HCSTRING("greaterThanOrEqualPointer","\x07","\x64","\x57","\x78"),
	HX_HCSTRING("lessThan","\x5a","\x5f","\x34","\xf3"),
	HX_HCSTRING("lessThanPointer","\x83","\x88","\xd4","\x8d"),
	HX_HCSTRING("lessThanOrEqual","\x57","\xa7","\xe0","\xde"),
	HX_HCSTRING("lessThanOrEqualPointer","\x26","\xea","\x29","\x34"),
	HX_HCSTRING("notEquals","\xb2","\xcb","\xdb","\x3c"),
	HX_HCSTRING("notEqualsPointer","\x2b","\xd7","\x89","\xc8"),
	HX_HCSTRING("plus","\x5a","\x3f","\x5a","\x4a"),
	HX_HCSTRING("plusPointer","\x83","\xa8","\x2a","\xb9"),
	HX_HCSTRING("minus","\x70","\x80","\x68","\x08"),
	HX_HCSTRING("minusPointer","\x2d","\x56","\x2c","\xb2"),
	::String(null())
};

void DataPointer_Impl__obj::__register()
{
	hx::Object *dummy = new DataPointer_Impl__obj;
	DataPointer_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.utils._DataPointer.DataPointer_Impl_","\xaf","\xc6","\xdc","\x04");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DataPointer_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = DataPointer_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(DataPointer_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< DataPointer_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DataPointer_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DataPointer_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DataPointer_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace utils
} // end namespace _DataPointer
