// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_lime__internal_backend_native_NativeCFFI
#include <lime/_internal/backend/native/NativeCFFI.h>
#endif
#ifndef INCLUDED_lime_text_harfbuzz__HBBlob_HBBlob_Impl_
#include <lime/text/harfbuzz/_HBBlob/HBBlob_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__DataPointer_DataPointer_Impl_
#include <lime/utils/_DataPointer/DataPointer_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ff40ab3a17d4a451_22__new,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_","_new",0xbb44321a,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_._new","lime/text/harfbuzz/HBBlob.hx",22,0xf04c0f80)
HX_LOCAL_STACK_FRAME(_hx_pos_ff40ab3a17d4a451_36_createSubBlob,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_","createSubBlob",0x6987af88,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_.createSubBlob","lime/text/harfbuzz/HBBlob.hx",36,0xf04c0f80)
HX_LOCAL_STACK_FRAME(_hx_pos_ff40ab3a17d4a451_47_makeImmutable,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_","makeImmutable",0xd198249b,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_.makeImmutable","lime/text/harfbuzz/HBBlob.hx",47,0xf04c0f80)
HX_LOCAL_STACK_FRAME(_hx_pos_ff40ab3a17d4a451_63_get_data,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_","get_data",0x72227eec,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_.get_data","lime/text/harfbuzz/HBBlob.hx",63,0xf04c0f80)
HX_LOCAL_STACK_FRAME(_hx_pos_ff40ab3a17d4a451_74_get_dataWritable,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_","get_dataWritable",0xa76d906c,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_.get_dataWritable","lime/text/harfbuzz/HBBlob.hx",74,0xf04c0f80)
HX_LOCAL_STACK_FRAME(_hx_pos_ff40ab3a17d4a451_85_get_empty,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_","get_empty",0x075ebb8b,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_.get_empty","lime/text/harfbuzz/HBBlob.hx",85,0xf04c0f80)
HX_LOCAL_STACK_FRAME(_hx_pos_ff40ab3a17d4a451_96_get_immutable,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_","get_immutable",0x9a530040,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_.get_immutable","lime/text/harfbuzz/HBBlob.hx",96,0xf04c0f80)
HX_LOCAL_STACK_FRAME(_hx_pos_ff40ab3a17d4a451_107_get_length,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_","get_length",0x9b73f228,"lime.text.harfbuzz._HBBlob.HBBlob_Impl_.get_length","lime/text/harfbuzz/HBBlob.hx",107,0xf04c0f80)
namespace lime{
namespace text{
namespace harfbuzz{
namespace _HBBlob{

void HBBlob_Impl__obj::__construct() { }

Dynamic HBBlob_Impl__obj::__CreateEmpty() { return new HBBlob_Impl__obj; }

void *HBBlob_Impl__obj::_hx_vtable = 0;

Dynamic HBBlob_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< HBBlob_Impl__obj > _hx_result = new HBBlob_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool HBBlob_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x572774eb;
}

 ::Dynamic HBBlob_Impl__obj::_new(Float data,int length,int memoryMode){
            	HX_STACKFRAME(&_hx_pos_ff40ab3a17d4a451_22__new)
HXDLIN(  22)		 ::Dynamic this1 = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_blob_create(data,length,memoryMode)) );
HXDLIN(  22)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(HBBlob_Impl__obj,_new,return )

 ::Dynamic HBBlob_Impl__obj::createSubBlob( ::Dynamic this1,int offset,int length){
            	HX_STACKFRAME(&_hx_pos_ff40ab3a17d4a451_36_createSubBlob)
HXDLIN(  36)		return ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_blob_create_sub_blob(hx::DynamicPtr(this1),offset,length)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(HBBlob_Impl__obj,createSubBlob,return )

void HBBlob_Impl__obj::makeImmutable( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_ff40ab3a17d4a451_47_makeImmutable)
HXDLIN(  47)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_blob_make_immutable(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBlob_Impl__obj,makeImmutable,(void))

Float HBBlob_Impl__obj::get_data( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_ff40ab3a17d4a451_63_get_data)
HXDLIN(  63)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromFloat(::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_blob_get_data(hx::DynamicPtr(this1)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBlob_Impl__obj,get_data,return )

Float HBBlob_Impl__obj::get_dataWritable( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_ff40ab3a17d4a451_74_get_dataWritable)
HXDLIN(  74)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromFloat(::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_blob_get_data_writable(hx::DynamicPtr(this1)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBlob_Impl__obj,get_dataWritable,return )

 ::Dynamic HBBlob_Impl__obj::get_empty(){
            	HX_STACKFRAME(&_hx_pos_ff40ab3a17d4a451_85_get_empty)
HXDLIN(  85)		return ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_blob_get_empty()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(HBBlob_Impl__obj,get_empty,return )

bool HBBlob_Impl__obj::get_immutable( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_ff40ab3a17d4a451_96_get_immutable)
HXDLIN(  96)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_blob_is_immutable(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBlob_Impl__obj,get_immutable,return )

int HBBlob_Impl__obj::get_length( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_ff40ab3a17d4a451_107_get_length)
HXDLIN( 107)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_blob_get_length(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBlob_Impl__obj,get_length,return )


HBBlob_Impl__obj::HBBlob_Impl__obj()
{
}

bool HBBlob_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"get_data") ) { outValue = get_data_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_empty") ) { outValue = get_empty_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"createSubBlob") ) { outValue = createSubBlob_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"makeImmutable") ) { outValue = makeImmutable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_immutable") ) { outValue = get_immutable_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_dataWritable") ) { outValue = get_dataWritable_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *HBBlob_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *HBBlob_Impl__obj_sStaticStorageInfo = 0;
#endif

static void HBBlob_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(HBBlob_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void HBBlob_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(HBBlob_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class HBBlob_Impl__obj::__mClass;

static ::String HBBlob_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("createSubBlob","\x61","\xab","\x5f","\xf7"),
	HX_HCSTRING("makeImmutable","\x74","\x20","\x70","\x5f"),
	HX_HCSTRING("get_data","\xb3","\x11","\x1e","\xc2"),
	HX_HCSTRING("get_dataWritable","\x33","\xc2","\xf3","\x91"),
	HX_HCSTRING("get_empty","\xe4","\x96","\x83","\xb3"),
	HX_HCSTRING("get_immutable","\x19","\xfc","\x2a","\x28"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	::String(null())
};

void HBBlob_Impl__obj::__register()
{
	hx::Object *dummy = new HBBlob_Impl__obj;
	HBBlob_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.text.harfbuzz._HBBlob.HBBlob_Impl_","\x55","\x7e","\x56","\x7c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &HBBlob_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = HBBlob_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(HBBlob_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< HBBlob_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = HBBlob_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HBBlob_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HBBlob_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace text
} // end namespace harfbuzz
} // end namespace _HBBlob
