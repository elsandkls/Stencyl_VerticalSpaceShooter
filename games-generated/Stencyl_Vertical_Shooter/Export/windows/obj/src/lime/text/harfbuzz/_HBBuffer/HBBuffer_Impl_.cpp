// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime__internal_backend_native_NativeCFFI
#include <lime/_internal/backend/native/NativeCFFI.h>
#endif
#ifndef INCLUDED_lime_text_harfbuzz_HBGlyphInfo
#include <lime/text/harfbuzz/HBGlyphInfo.h>
#endif
#ifndef INCLUDED_lime_text_harfbuzz_HBGlyphPosition
#include <lime/text/harfbuzz/HBGlyphPosition.h>
#endif
#ifndef INCLUDED_lime_text_harfbuzz_HBSegmentProperties
#include <lime/text/harfbuzz/HBSegmentProperties.h>
#endif
#ifndef INCLUDED_lime_text_harfbuzz__HBBuffer_HBBuffer_Impl_
#include <lime/text/harfbuzz/_HBBuffer/HBBuffer_Impl_.h>
#endif
#ifndef INCLUDED_lime_utils__Bytes_Bytes_Impl_
#include <lime/utils/_Bytes/Bytes_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_27__new,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","_new",0x3aec073a,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_._new","lime/text/harfbuzz/HBBuffer.hx",27,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_41_add,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","add",0x218fbe68,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.add","lime/text/harfbuzz/HBBuffer.hx",41,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_50_addCodepoints,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","addCodepoints",0x39493798,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.addCodepoints","lime/text/harfbuzz/HBBuffer.hx",50,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_59_addUTF8,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","addUTF8",0xd1622fb9,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.addUTF8","lime/text/harfbuzz/HBBuffer.hx",59,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_68_addUTF16,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","addUTF16",0x64878c44,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.addUTF16","lime/text/harfbuzz/HBBuffer.hx",68,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_77_addUTF32,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","addUTF32",0x64878dfe,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.addUTF32","lime/text/harfbuzz/HBBuffer.hx",77,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_86_clearContents,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","clearContents",0xa72d92ce,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.clearContents","lime/text/harfbuzz/HBBuffer.hx",86,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_92_getGlyphInfo,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","getGlyphInfo",0x4be6379d,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.getGlyphInfo","lime/text/harfbuzz/HBBuffer.hx",92,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_129_getGlyphPositions,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","getGlyphPositions",0xfdb08a1b,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.getGlyphPositions","lime/text/harfbuzz/HBBuffer.hx",129,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_170_guessSegmentProperties,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","guessSegmentProperties",0xf514c8c8,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.guessSegmentProperties","lime/text/harfbuzz/HBBuffer.hx",170,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_179_normalizeGlyphs,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","normalizeGlyphs",0xb24ee77b,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.normalizeGlyphs","lime/text/harfbuzz/HBBuffer.hx",179,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_188_preallocate,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","preallocate",0x1b877927,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.preallocate","lime/text/harfbuzz/HBBuffer.hx",188,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_199_reset,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","reset",0x3e4ef5d6,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.reset","lime/text/harfbuzz/HBBuffer.hx",199,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_208_reverse,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","reverse",0x628b34e9,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.reverse","lime/text/harfbuzz/HBBuffer.hx",208,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_217_reverseClusters,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","reverseClusters",0x3ba97242,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.reverseClusters","lime/text/harfbuzz/HBBuffer.hx",217,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_233_get_allocationSuccessful,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","get_allocationSuccessful",0x61fae67c,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.get_allocationSuccessful","lime/text/harfbuzz/HBBuffer.hx",233,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_244_get_clusterLevel,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","get_clusterLevel",0x3526900c,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.get_clusterLevel","lime/text/harfbuzz/HBBuffer.hx",244,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_252_set_clusterLevel,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","set_clusterLevel",0x8b687d80,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.set_clusterLevel","lime/text/harfbuzz/HBBuffer.hx",252,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_265_get_contentType,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","get_contentType",0x1c878ef1,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.get_contentType","lime/text/harfbuzz/HBBuffer.hx",265,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_273_set_contentType,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","set_contentType",0x18530bfd,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.set_contentType","lime/text/harfbuzz/HBBuffer.hx",273,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_286_get_direction,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","get_direction",0x1650c11d,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.get_direction","lime/text/harfbuzz/HBBuffer.hx",286,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_294_set_direction,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","set_direction",0x5b56a329,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.set_direction","lime/text/harfbuzz/HBBuffer.hx",294,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_307_get_empty,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","get_empty",0x399e526b,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.get_empty","lime/text/harfbuzz/HBBuffer.hx",307,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_318_get_flags,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","get_flags",0xcc504325,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.get_flags","lime/text/harfbuzz/HBBuffer.hx",318,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_326_set_flags,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","set_flags",0xafa12f31,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.set_flags","lime/text/harfbuzz/HBBuffer.hx",326,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_339_get_language,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","get_language",0xe973273a,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.get_language","lime/text/harfbuzz/HBBuffer.hx",339,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_347_set_language,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","set_language",0xfe6c4aae,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.set_language","lime/text/harfbuzz/HBBuffer.hx",347,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_360_get_length,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","get_length",0x60d85f48,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.get_length","lime/text/harfbuzz/HBBuffer.hx",360,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_368_set_length,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","set_length",0x6455fdbc,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.set_length","lime/text/harfbuzz/HBBuffer.hx",368,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_381_get_replacementCodepoint,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","get_replacementCodepoint",0x3688afb3,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.get_replacementCodepoint","lime/text/harfbuzz/HBBuffer.hx",381,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_389_set_replacementCodepoint,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","set_replacementCodepoint",0x49633127,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.set_replacementCodepoint","lime/text/harfbuzz/HBBuffer.hx",389,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_402_get_script,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","get_script",0x0931186d,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.get_script","lime/text/harfbuzz/HBBuffer.hx",402,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_410_set_script,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","set_script",0x0caeb6e1,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.set_script","lime/text/harfbuzz/HBBuffer.hx",410,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_424_get_segmentProperties,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","get_segmentProperties",0xe843fa64,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.get_segmentProperties","lime/text/harfbuzz/HBBuffer.hx",424,0x7e6f757d)
HX_LOCAL_STACK_FRAME(_hx_pos_0be9af83ebc60cde_433_set_segmentProperties,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","set_segmentProperties",0x3c4cc870,"lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_.set_segmentProperties","lime/text/harfbuzz/HBBuffer.hx",433,0x7e6f757d)
namespace lime{
namespace text{
namespace harfbuzz{
namespace _HBBuffer{

void HBBuffer_Impl__obj::__construct() { }

Dynamic HBBuffer_Impl__obj::__CreateEmpty() { return new HBBuffer_Impl__obj; }

void *HBBuffer_Impl__obj::_hx_vtable = 0;

Dynamic HBBuffer_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< HBBuffer_Impl__obj > _hx_result = new HBBuffer_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool HBBuffer_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x125679e9;
}

 ::Dynamic HBBuffer_Impl__obj::_new(){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_27__new)
HXDLIN(  27)		 ::Dynamic this1 = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_create()) );
HXDLIN(  27)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(HBBuffer_Impl__obj,_new,return )

void HBBuffer_Impl__obj::add( ::Dynamic this1,int codepoint,int cluster){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_41_add)
HXDLIN(  41)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_add(hx::DynamicPtr(this1),codepoint,cluster);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(HBBuffer_Impl__obj,add,(void))

void HBBuffer_Impl__obj::addCodepoints( ::Dynamic this1,Float text,int textLength,int itemOffset,int itemLength){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_50_addCodepoints)
HXDLIN(  50)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_add_codepoints(hx::DynamicPtr(this1),text,textLength,itemOffset,itemLength);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(HBBuffer_Impl__obj,addCodepoints,(void))

void HBBuffer_Impl__obj::addUTF8( ::Dynamic this1,::String text,int itemOffset,int itemLength){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_59_addUTF8)
HXDLIN(  59)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_add_utf8(hx::DynamicPtr(this1),text,itemOffset,itemLength);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(HBBuffer_Impl__obj,addUTF8,(void))

void HBBuffer_Impl__obj::addUTF16( ::Dynamic this1,Float text,int textLength,int itemOffset,int itemLength){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_68_addUTF16)
HXDLIN(  68)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_add_utf16(hx::DynamicPtr(this1),text,textLength,itemOffset,itemLength);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(HBBuffer_Impl__obj,addUTF16,(void))

void HBBuffer_Impl__obj::addUTF32( ::Dynamic this1,Float text,int textLength,int itemOffset,int itemLength){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_77_addUTF32)
HXDLIN(  77)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_add_utf32(hx::DynamicPtr(this1),text,textLength,itemOffset,itemLength);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(HBBuffer_Impl__obj,addUTF32,(void))

void HBBuffer_Impl__obj::clearContents( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_86_clearContents)
HXDLIN(  86)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_clear_contents(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,clearContents,(void))

::Array< ::Dynamic> HBBuffer_Impl__obj::getGlyphInfo( ::Dynamic this1){
            	HX_GC_STACKFRAME(&_hx_pos_0be9af83ebc60cde_92_getGlyphInfo)
HXLINE(  95)		 ::haxe::io::Bytes bytes = ::lime::utils::_Bytes::Bytes_Impl__obj::alloc((int)0);
HXLINE(  96)		bytes = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_get_glyph_infos(hx::DynamicPtr(this1),hx::DynamicPtr(bytes))) );
HXLINE(  98)		if (hx::IsNull( bytes )) {
HXLINE( 100)			return null();
            		}
            		else {
HXLINE( 104)			::Array< ::Dynamic> result = ::Array_obj< ::Dynamic>::__new();
HXLINE( 106)			int length = bytes->length;
HXLINE( 107)			int position = (int)0;
HXDLIN( 107)			 ::lime::text::harfbuzz::HBGlyphInfo info;
HXLINE( 109)			while((position < length)){
HXLINE( 111)				info =  ::lime::text::harfbuzz::HBGlyphInfo_obj::__alloc( HX_CTX );
HXLINE( 112)				int bytes1 = bytes->b->__get(position);
HXDLIN( 112)				::Array< unsigned char > bytes2 = bytes->b;
HXDLIN( 112)				int _hx_tmp = ((int)bytes1 | (int)((int)bytes2->__get((position + (int)1)) << (int)(int)8));
HXDLIN( 112)				::Array< unsigned char > bytes3 = bytes->b;
HXDLIN( 112)				int _hx_tmp1 = ((int)_hx_tmp | (int)((int)bytes3->__get((position + (int)2)) << (int)(int)16));
HXDLIN( 112)				::Array< unsigned char > bytes4 = bytes->b;
HXDLIN( 112)				info->codepoint = ((int)_hx_tmp1 | (int)((int)bytes4->__get((position + (int)3)) << (int)(int)24));
HXDLIN( 112)				position = (position + (int)4);
HXLINE( 113)				int bytes5 = bytes->b->__get(position);
HXDLIN( 113)				::Array< unsigned char > bytes6 = bytes->b;
HXDLIN( 113)				int _hx_tmp2 = ((int)bytes5 | (int)((int)bytes6->__get((position + (int)1)) << (int)(int)8));
HXDLIN( 113)				::Array< unsigned char > bytes7 = bytes->b;
HXDLIN( 113)				int _hx_tmp3 = ((int)_hx_tmp2 | (int)((int)bytes7->__get((position + (int)2)) << (int)(int)16));
HXDLIN( 113)				::Array< unsigned char > bytes8 = bytes->b;
HXDLIN( 113)				info->mask = ((int)_hx_tmp3 | (int)((int)bytes8->__get((position + (int)3)) << (int)(int)24));
HXDLIN( 113)				position = (position + (int)4);
HXLINE( 114)				int bytes9 = bytes->b->__get(position);
HXDLIN( 114)				::Array< unsigned char > bytes10 = bytes->b;
HXDLIN( 114)				int _hx_tmp4 = ((int)bytes9 | (int)((int)bytes10->__get((position + (int)1)) << (int)(int)8));
HXDLIN( 114)				::Array< unsigned char > bytes11 = bytes->b;
HXDLIN( 114)				int _hx_tmp5 = ((int)_hx_tmp4 | (int)((int)bytes11->__get((position + (int)2)) << (int)(int)16));
HXDLIN( 114)				::Array< unsigned char > bytes12 = bytes->b;
HXDLIN( 114)				info->cluster = ((int)_hx_tmp5 | (int)((int)bytes12->__get((position + (int)3)) << (int)(int)24));
HXDLIN( 114)				position = (position + (int)4);
HXLINE( 115)				result->push(info);
            			}
HXLINE( 119)			return result;
            		}
HXLINE(  98)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,getGlyphInfo,return )

::Array< ::Dynamic> HBBuffer_Impl__obj::getGlyphPositions( ::Dynamic this1){
            	HX_GC_STACKFRAME(&_hx_pos_0be9af83ebc60cde_129_getGlyphPositions)
HXLINE( 132)		 ::haxe::io::Bytes bytes = ::lime::utils::_Bytes::Bytes_Impl__obj::alloc((int)0);
HXLINE( 133)		bytes = ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_get_glyph_positions(hx::DynamicPtr(this1),hx::DynamicPtr(bytes))) );
HXLINE( 135)		if (hx::IsNull( bytes )) {
HXLINE( 137)			return null();
            		}
            		else {
HXLINE( 141)			::Array< ::Dynamic> result = ::Array_obj< ::Dynamic>::__new();
HXLINE( 143)			int length = bytes->length;
HXLINE( 144)			int position = (int)0;
HXDLIN( 144)			 ::lime::text::harfbuzz::HBGlyphPosition glyphPosition;
HXLINE( 146)			while((position < length)){
HXLINE( 148)				glyphPosition =  ::lime::text::harfbuzz::HBGlyphPosition_obj::__alloc( HX_CTX );
HXLINE( 149)				int bytes1 = bytes->b->__get(position);
HXDLIN( 149)				::Array< unsigned char > bytes2 = bytes->b;
HXDLIN( 149)				int _hx_tmp = ((int)bytes1 | (int)((int)bytes2->__get((position + (int)1)) << (int)(int)8));
HXDLIN( 149)				::Array< unsigned char > bytes3 = bytes->b;
HXDLIN( 149)				int _hx_tmp1 = ((int)_hx_tmp | (int)((int)bytes3->__get((position + (int)2)) << (int)(int)16));
HXDLIN( 149)				::Array< unsigned char > bytes4 = bytes->b;
HXDLIN( 149)				glyphPosition->xAdvance = ((int)_hx_tmp1 | (int)((int)bytes4->__get((position + (int)3)) << (int)(int)24));
HXDLIN( 149)				position = (position + (int)4);
HXLINE( 150)				int bytes5 = bytes->b->__get(position);
HXDLIN( 150)				::Array< unsigned char > bytes6 = bytes->b;
HXDLIN( 150)				int _hx_tmp2 = ((int)bytes5 | (int)((int)bytes6->__get((position + (int)1)) << (int)(int)8));
HXDLIN( 150)				::Array< unsigned char > bytes7 = bytes->b;
HXDLIN( 150)				int _hx_tmp3 = ((int)_hx_tmp2 | (int)((int)bytes7->__get((position + (int)2)) << (int)(int)16));
HXDLIN( 150)				::Array< unsigned char > bytes8 = bytes->b;
HXDLIN( 150)				glyphPosition->yAdvance = ((int)_hx_tmp3 | (int)((int)bytes8->__get((position + (int)3)) << (int)(int)24));
HXDLIN( 150)				position = (position + (int)4);
HXLINE( 151)				int bytes9 = bytes->b->__get(position);
HXDLIN( 151)				::Array< unsigned char > bytes10 = bytes->b;
HXDLIN( 151)				int _hx_tmp4 = ((int)bytes9 | (int)((int)bytes10->__get((position + (int)1)) << (int)(int)8));
HXDLIN( 151)				::Array< unsigned char > bytes11 = bytes->b;
HXDLIN( 151)				int _hx_tmp5 = ((int)_hx_tmp4 | (int)((int)bytes11->__get((position + (int)2)) << (int)(int)16));
HXDLIN( 151)				::Array< unsigned char > bytes12 = bytes->b;
HXDLIN( 151)				glyphPosition->xOffset = ((int)_hx_tmp5 | (int)((int)bytes12->__get((position + (int)3)) << (int)(int)24));
HXDLIN( 151)				position = (position + (int)4);
HXLINE( 152)				int bytes13 = bytes->b->__get(position);
HXDLIN( 152)				::Array< unsigned char > bytes14 = bytes->b;
HXDLIN( 152)				int _hx_tmp6 = ((int)bytes13 | (int)((int)bytes14->__get((position + (int)1)) << (int)(int)8));
HXDLIN( 152)				::Array< unsigned char > bytes15 = bytes->b;
HXDLIN( 152)				int _hx_tmp7 = ((int)_hx_tmp6 | (int)((int)bytes15->__get((position + (int)2)) << (int)(int)16));
HXDLIN( 152)				::Array< unsigned char > bytes16 = bytes->b;
HXDLIN( 152)				glyphPosition->yOffset = ((int)_hx_tmp7 | (int)((int)bytes16->__get((position + (int)3)) << (int)(int)24));
HXDLIN( 152)				position = (position + (int)4);
HXLINE( 153)				result->push(glyphPosition);
            			}
HXLINE( 157)			return result;
            		}
HXLINE( 135)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,getGlyphPositions,return )

void HBBuffer_Impl__obj::guessSegmentProperties( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_170_guessSegmentProperties)
HXDLIN( 170)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_guess_segment_properties(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,guessSegmentProperties,(void))

void HBBuffer_Impl__obj::normalizeGlyphs( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_179_normalizeGlyphs)
HXDLIN( 179)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_normalize_glyphs(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,normalizeGlyphs,(void))

bool HBBuffer_Impl__obj::preallocate( ::Dynamic this1,int size){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_188_preallocate)
HXDLIN( 188)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_preallocate(hx::DynamicPtr(this1),size);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HBBuffer_Impl__obj,preallocate,return )

void HBBuffer_Impl__obj::reset( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_199_reset)
HXDLIN( 199)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_reset(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,reset,(void))

void HBBuffer_Impl__obj::reverse( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_208_reverse)
HXDLIN( 208)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_reverse(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,reverse,(void))

void HBBuffer_Impl__obj::reverseClusters( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_217_reverseClusters)
HXDLIN( 217)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_reverse_clusters(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,reverseClusters,(void))

bool HBBuffer_Impl__obj::get_allocationSuccessful( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_233_get_allocationSuccessful)
HXDLIN( 233)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_allocation_successful(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,get_allocationSuccessful,return )

int HBBuffer_Impl__obj::get_clusterLevel( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_244_get_clusterLevel)
HXDLIN( 244)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_get_cluster_level(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,get_clusterLevel,return )

int HBBuffer_Impl__obj::set_clusterLevel( ::Dynamic this1,int value){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_252_set_clusterLevel)
HXLINE( 255)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_set_cluster_level(hx::DynamicPtr(this1),value);
HXLINE( 257)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HBBuffer_Impl__obj,set_clusterLevel,return )

int HBBuffer_Impl__obj::get_contentType( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_265_get_contentType)
HXDLIN( 265)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_get_content_type(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,get_contentType,return )

int HBBuffer_Impl__obj::set_contentType( ::Dynamic this1,int value){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_273_set_contentType)
HXLINE( 276)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_set_content_type(hx::DynamicPtr(this1),value);
HXLINE( 278)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HBBuffer_Impl__obj,set_contentType,return )

int HBBuffer_Impl__obj::get_direction( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_286_get_direction)
HXDLIN( 286)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_get_direction(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,get_direction,return )

int HBBuffer_Impl__obj::set_direction( ::Dynamic this1,int value){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_294_set_direction)
HXLINE( 297)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_set_direction(hx::DynamicPtr(this1),value);
HXLINE( 299)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HBBuffer_Impl__obj,set_direction,return )

 ::Dynamic HBBuffer_Impl__obj::get_empty(){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_307_get_empty)
HXDLIN( 307)		return ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_get_empty()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(HBBuffer_Impl__obj,get_empty,return )

int HBBuffer_Impl__obj::get_flags( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_318_get_flags)
HXDLIN( 318)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_get_flags(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,get_flags,return )

int HBBuffer_Impl__obj::set_flags( ::Dynamic this1,int value){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_326_set_flags)
HXLINE( 329)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_set_flags(hx::DynamicPtr(this1),value);
HXLINE( 331)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HBBuffer_Impl__obj,set_flags,return )

 ::Dynamic HBBuffer_Impl__obj::get_language( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_339_get_language)
HXDLIN( 339)		return ( ( ::Dynamic)(::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_get_language(hx::DynamicPtr(this1))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,get_language,return )

 ::Dynamic HBBuffer_Impl__obj::set_language( ::Dynamic this1, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_347_set_language)
HXLINE( 350)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_set_language(hx::DynamicPtr(this1),hx::DynamicPtr(value));
HXLINE( 352)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HBBuffer_Impl__obj,set_language,return )

int HBBuffer_Impl__obj::get_length( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_360_get_length)
HXDLIN( 360)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_get_length(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,get_length,return )

int HBBuffer_Impl__obj::set_length( ::Dynamic this1,int value){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_368_set_length)
HXLINE( 371)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_set_length(hx::DynamicPtr(this1),value);
HXLINE( 373)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HBBuffer_Impl__obj,set_length,return )

int HBBuffer_Impl__obj::get_replacementCodepoint( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_381_get_replacementCodepoint)
HXDLIN( 381)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_get_replacement_codepoint(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,get_replacementCodepoint,return )

int HBBuffer_Impl__obj::set_replacementCodepoint( ::Dynamic this1,int value){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_389_set_replacementCodepoint)
HXLINE( 392)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_set_replacement_codepoint(hx::DynamicPtr(this1),value);
HXLINE( 394)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HBBuffer_Impl__obj,set_replacementCodepoint,return )

int HBBuffer_Impl__obj::get_script( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_402_get_script)
HXDLIN( 402)		return ::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_get_script(hx::DynamicPtr(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,get_script,return )

int HBBuffer_Impl__obj::set_script( ::Dynamic this1,int value){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_410_set_script)
HXLINE( 414)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_set_script(hx::DynamicPtr(this1),value);
HXLINE( 416)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HBBuffer_Impl__obj,set_script,return )

 ::lime::text::harfbuzz::HBSegmentProperties HBBuffer_Impl__obj::get_segmentProperties( ::Dynamic this1){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_424_get_segmentProperties)
HXDLIN( 424)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(HBBuffer_Impl__obj,get_segmentProperties,return )

 ::lime::text::harfbuzz::HBSegmentProperties HBBuffer_Impl__obj::set_segmentProperties( ::Dynamic this1, ::lime::text::harfbuzz::HBSegmentProperties value){
            	HX_STACKFRAME(&_hx_pos_0be9af83ebc60cde_433_set_segmentProperties)
HXLINE( 436)		::lime::_internal::backend::native::NativeCFFI_obj::lime_hb_buffer_set_segment_properties(hx::DynamicPtr(this1),hx::DynamicPtr(value));
HXLINE( 438)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(HBBuffer_Impl__obj,set_segmentProperties,return )


HBBuffer_Impl__obj::HBBuffer_Impl__obj()
{
}

bool HBBuffer_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { outValue = add_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"reset") ) { outValue = reset_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"addUTF8") ) { outValue = addUTF8_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reverse") ) { outValue = reverse_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"addUTF16") ) { outValue = addUTF16_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"addUTF32") ) { outValue = addUTF32_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_empty") ) { outValue = get_empty_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_flags") ) { outValue = get_flags_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_flags") ) { outValue = set_flags_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_length") ) { outValue = set_length_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_script") ) { outValue = get_script_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_script") ) { outValue = set_script_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"preallocate") ) { outValue = preallocate_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"getGlyphInfo") ) { outValue = getGlyphInfo_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_language") ) { outValue = get_language_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_language") ) { outValue = set_language_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"addCodepoints") ) { outValue = addCodepoints_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"clearContents") ) { outValue = clearContents_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_direction") ) { outValue = get_direction_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_direction") ) { outValue = set_direction_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"normalizeGlyphs") ) { outValue = normalizeGlyphs_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reverseClusters") ) { outValue = reverseClusters_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_contentType") ) { outValue = get_contentType_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_contentType") ) { outValue = set_contentType_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_clusterLevel") ) { outValue = get_clusterLevel_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_clusterLevel") ) { outValue = set_clusterLevel_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"getGlyphPositions") ) { outValue = getGlyphPositions_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"get_segmentProperties") ) { outValue = get_segmentProperties_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_segmentProperties") ) { outValue = set_segmentProperties_dyn(); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"guessSegmentProperties") ) { outValue = guessSegmentProperties_dyn(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"get_allocationSuccessful") ) { outValue = get_allocationSuccessful_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_replacementCodepoint") ) { outValue = get_replacementCodepoint_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_replacementCodepoint") ) { outValue = set_replacementCodepoint_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *HBBuffer_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *HBBuffer_Impl__obj_sStaticStorageInfo = 0;
#endif

static void HBBuffer_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(HBBuffer_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void HBBuffer_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(HBBuffer_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class HBBuffer_Impl__obj::__mClass;

static ::String HBBuffer_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("addCodepoints","\x91","\xac","\x9c","\xf4"),
	HX_HCSTRING("addUTF8","\xf2","\x33","\xd3","\x89"),
	HX_HCSTRING("addUTF16","\xeb","\x39","\xfa","\x0e"),
	HX_HCSTRING("addUTF32","\xa5","\x3b","\xfa","\x0e"),
	HX_HCSTRING("clearContents","\xc7","\x07","\x81","\x62"),
	HX_HCSTRING("getGlyphInfo","\xc4","\x44","\x9e","\x91"),
	HX_HCSTRING("getGlyphPositions","\x94","\x6f","\x94","\x38"),
	HX_HCSTRING("guessSegmentProperties","\xaf","\x6c","\x21","\x7e"),
	HX_HCSTRING("normalizeGlyphs","\xb4","\x4c","\x24","\x81"),
	HX_HCSTRING("preallocate","\xe0","\x8d","\xa1","\xcc"),
	HX_HCSTRING("reset","\xcf","\x49","\xc8","\xe6"),
	HX_HCSTRING("reverse","\x22","\x39","\xfc","\x1a"),
	HX_HCSTRING("reverseClusters","\x7b","\xd7","\x7e","\x0a"),
	HX_HCSTRING("get_allocationSuccessful","\x23","\x92","\x65","\xc2"),
	HX_HCSTRING("get_clusterLevel","\xb3","\xbc","\x09","\x61"),
	HX_HCSTRING("set_clusterLevel","\x27","\xaa","\x4b","\xb7"),
	HX_HCSTRING("get_contentType","\x2a","\xf4","\x5c","\xeb"),
	HX_HCSTRING("set_contentType","\x36","\x71","\x28","\xe7"),
	HX_HCSTRING("get_direction","\x16","\x36","\xa4","\xd1"),
	HX_HCSTRING("set_direction","\x22","\x18","\xaa","\x16"),
	HX_HCSTRING("get_empty","\xe4","\x96","\x83","\xb3"),
	HX_HCSTRING("get_flags","\x9e","\x87","\x35","\x46"),
	HX_HCSTRING("set_flags","\xaa","\x73","\x86","\x29"),
	HX_HCSTRING("get_language","\x61","\x34","\x2b","\x2f"),
	HX_HCSTRING("set_language","\xd5","\x57","\x24","\x44"),
	HX_HCSTRING("get_length","\xaf","\x04","\x8f","\x8f"),
	HX_HCSTRING("set_length","\x23","\xa3","\x0c","\x93"),
	HX_HCSTRING("get_replacementCodepoint","\x5a","\x5b","\xf3","\x96"),
	HX_HCSTRING("set_replacementCodepoint","\xce","\xdc","\xcd","\xa9"),
	HX_HCSTRING("get_script","\xd4","\xbd","\xe7","\x37"),
	HX_HCSTRING("set_script","\x48","\x5c","\x65","\x3b"),
	HX_HCSTRING("get_segmentProperties","\x5d","\x90","\xfa","\x3e"),
	HX_HCSTRING("set_segmentProperties","\x69","\x5e","\x03","\x93"),
	::String(null())
};

void HBBuffer_Impl__obj::__register()
{
	hx::Object *dummy = new HBBuffer_Impl__obj;
	HBBuffer_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.text.harfbuzz._HBBuffer.HBBuffer_Impl_","\x35","\xbd","\xfe","\xeb");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &HBBuffer_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = HBBuffer_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(HBBuffer_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< HBBuffer_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = HBBuffer_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HBBuffer_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HBBuffer_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace text
} // end namespace harfbuzz
} // end namespace _HBBuffer
