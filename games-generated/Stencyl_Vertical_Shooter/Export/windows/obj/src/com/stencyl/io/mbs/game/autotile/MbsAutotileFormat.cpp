// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_game_autotile_MbsAutotileFormat
#include <com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_game_autotile_MbsCorners
#include <com/stencyl/io/mbs/game/autotile/MbsCorners.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsField
#include <mbs/core/MbsField.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIntList
#include <mbs/io/MbsIntList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_52_new,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","new",0x577484e6,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.new","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",52,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_45_getMbsType,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","getMbsType",0xd77acf9c,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.getMbsType","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",45,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_60_allocateNew,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","allocateNew",0x489ef429,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.allocateNew","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",60,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_65_getId,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","getId",0x797bf417,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.getId","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",65,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_70_setId,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","setId",0x624aea23,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.setId","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",70,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_75_getName,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","getName",0xcabe9187,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.getName","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",75,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_80_setName,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","setName",0xbdc02293,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.setName","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",80,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_85_getAcross,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","getAcross",0xdc2ac5bb,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.getAcross","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",85,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_90_setAcross,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","setAcross",0xbf7bb1c7,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.setAcross","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",90,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_95_getDown,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","getDown",0xc42d179e,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.getDown","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",95,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_100_setDown,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","setDown",0xb72ea8aa,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.setDown","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",100,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_104_getCorners,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","getCorners",0xe801a942,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.getCorners","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",104,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_110_createCorners,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","createCorners",0xa2534b68,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.createCorners","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",110,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_117_getFlags,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","getFlags",0x0808608b,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.getFlags","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",117,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_123_createFlags,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","createFlags",0xcb590d31,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.createFlags","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",123,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_27_initializeType,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","initializeType",0x10bf6564,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.initializeType","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",27,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_24_initializeType,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","initializeType",0x10bf6564,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.initializeType","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",24,0x1dab60ea)
HX_LOCAL_STACK_FRAME(_hx_pos_9c6ee1c11f6cd746_40_new_MbsAutotileFormat_list,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","new_MbsAutotileFormat_list",0x7c9a3544,"com.stencyl.io.mbs.game.autotile.MbsAutotileFormat.new_MbsAutotileFormat_list","com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.hx",40,0x1dab60ea)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace game{
namespace autotile{

void MbsAutotileFormat_obj::__construct(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_52_new)
HXLINE(  53)		super::__construct(data);
HXLINE(  54)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::game::autotile::MbsCorners_obj::MBS_CORNERS;
HXDLIN(  54)		this->_corners =  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::game::autotile::MbsCorners_obj::__alloc( HX_CTX ,data));
HXLINE(  55)		this->_flags =  ::mbs::io::MbsIntList_obj::__alloc( HX_CTX ,data);
            	}

Dynamic MbsAutotileFormat_obj::__CreateEmpty() { return new MbsAutotileFormat_obj; }

void *MbsAutotileFormat_obj::_hx_vtable = 0;

Dynamic MbsAutotileFormat_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsAutotileFormat_obj > _hx_result = new MbsAutotileFormat_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsAutotileFormat_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x10b325b6) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x10b325b6;
	} else {
		return inClassId==(int)0x17b72d64;
	}
}

 ::mbs::core::MbsType MbsAutotileFormat_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_45_getMbsType)
HXDLIN(  45)		return ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT;
            	}


void MbsAutotileFormat_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_60_allocateNew)
HXDLIN(  60)		::Dynamic _hx_tmp = this->data;
HXDLIN(  60)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT->getSize()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsAutotileFormat_obj,allocateNew,(void))

int MbsAutotileFormat_obj::getId(){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_65_getId)
HXDLIN(  65)		::Dynamic _hx_tmp = this->data;
HXDLIN(  65)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::id->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsAutotileFormat_obj,getId,return )

void MbsAutotileFormat_obj::setId(int _val){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_70_setId)
HXDLIN(  70)		::Dynamic _hx_tmp = this->data;
HXDLIN(  70)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::id->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsAutotileFormat_obj,setId,(void))

::String MbsAutotileFormat_obj::getName(){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_75_getName)
HXDLIN(  75)		::Dynamic _hx_tmp = this->data;
HXDLIN(  75)		return ::mbs::io::MbsIO_obj::readString(_hx_tmp,(this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::name->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsAutotileFormat_obj,getName,return )

void MbsAutotileFormat_obj::setName(::String _val){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_80_setName)
HXDLIN(  80)		::Dynamic _hx_tmp = this->data;
HXDLIN(  80)		::mbs::io::MbsIO_obj::writeString(_hx_tmp,(this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::name->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsAutotileFormat_obj,setName,(void))

int MbsAutotileFormat_obj::getAcross(){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_85_getAcross)
HXDLIN(  85)		::Dynamic _hx_tmp = this->data;
HXDLIN(  85)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::across->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsAutotileFormat_obj,getAcross,return )

void MbsAutotileFormat_obj::setAcross(int _val){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_90_setAcross)
HXDLIN(  90)		::Dynamic _hx_tmp = this->data;
HXDLIN(  90)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::across->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsAutotileFormat_obj,setAcross,(void))

int MbsAutotileFormat_obj::getDown(){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_95_getDown)
HXDLIN(  95)		::Dynamic _hx_tmp = this->data;
HXDLIN(  95)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::down->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsAutotileFormat_obj,getDown,return )

void MbsAutotileFormat_obj::setDown(int _val){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_100_setDown)
HXDLIN( 100)		::Dynamic _hx_tmp = this->data;
HXDLIN( 100)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::down->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsAutotileFormat_obj,setDown,(void))

 ::mbs::io::MbsList MbsAutotileFormat_obj::getCorners(){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_104_getCorners)
HXLINE( 105)		 ::mbs::io::MbsList _hx_tmp = this->_corners;
HXDLIN( 105)		::Dynamic _hx_tmp1 = this->data;
HXDLIN( 105)		_hx_tmp->setAddress(::mbs::io::MbsIO_obj::readInt(_hx_tmp1,(this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::corners->address)));
HXLINE( 106)		return this->_corners;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsAutotileFormat_obj,getCorners,return )

 ::mbs::io::MbsList MbsAutotileFormat_obj::createCorners(int _length){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_110_createCorners)
HXLINE( 111)		this->_corners->allocateNew(_length);
HXLINE( 112)		::Dynamic _hx_tmp = this->data;
HXDLIN( 112)		int _hx_tmp1 = (this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::corners->address);
HXDLIN( 112)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,_hx_tmp1,this->_corners->getAddress());
HXLINE( 113)		return this->_corners;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsAutotileFormat_obj,createCorners,return )

 ::mbs::io::MbsIntList MbsAutotileFormat_obj::getFlags(){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_117_getFlags)
HXLINE( 118)		 ::mbs::io::MbsIntList _hx_tmp = this->_flags;
HXDLIN( 118)		::Dynamic _hx_tmp1 = this->data;
HXDLIN( 118)		_hx_tmp->setAddress(::mbs::io::MbsIO_obj::readInt(_hx_tmp1,(this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::flags->address)));
HXLINE( 119)		return this->_flags;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsAutotileFormat_obj,getFlags,return )

 ::mbs::io::MbsIntList MbsAutotileFormat_obj::createFlags(int _length){
            	HX_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_123_createFlags)
HXLINE( 124)		this->_flags->allocateNew(_length);
HXLINE( 125)		::Dynamic _hx_tmp = this->data;
HXDLIN( 125)		int _hx_tmp1 = (this->address + ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::flags->address);
HXDLIN( 125)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,_hx_tmp1,this->_flags->getAddress());
HXLINE( 126)		return this->_flags;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsAutotileFormat_obj,createFlags,return )

 ::mbs::core::MbsField MbsAutotileFormat_obj::id;

 ::mbs::core::MbsField MbsAutotileFormat_obj::name;

 ::mbs::core::MbsField MbsAutotileFormat_obj::across;

 ::mbs::core::MbsField MbsAutotileFormat_obj::down;

 ::mbs::core::MbsField MbsAutotileFormat_obj::corners;

 ::mbs::core::MbsField MbsAutotileFormat_obj::flags;

 ::mbs::core::ComposedType MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT;

void MbsAutotileFormat_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_27_initializeType)
HXLINE(  27)			return  ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_24_initializeType)
HXLINE(  25)		if (hx::IsNotNull( ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT )) {
HXLINE(  25)			return;
            		}
HXLINE(  26)		::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsAutotileFormat",32,c5,1d,ed));
HXLINE(  27)		::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT->setInstantiator( ::Dynamic(new _hx_Closure_0()));
HXLINE(  29)		::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::id = ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT->createField(HX_("id",db,5b,00,00),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  30)		::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::name = ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT->createField(HX_("name",4b,72,ff,48),::mbs::core::MbsTypes_obj::STRING);
HXLINE(  31)		::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::across = ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT->createField(HX_("across",7f,5f,f8,14),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  32)		::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::down = ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT->createField(HX_("down",62,f8,6d,42),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  33)		::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::corners = ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT->createField(HX_("corners",fe,9a,1a,63),::mbs::core::MbsTypes_obj::LIST);
HXLINE(  34)		::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::flags = ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT->createField(HX_("flags",47,2b,8c,02),::mbs::core::MbsTypes_obj::LIST);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsAutotileFormat_obj,initializeType,(void))

 ::mbs::io::MbsList MbsAutotileFormat_obj::new_MbsAutotileFormat_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_9c6ee1c11f6cd746_40_new_MbsAutotileFormat_list)
HXDLIN(  40)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT;
HXDLIN(  40)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsAutotileFormat_obj,new_MbsAutotileFormat_list,return )


hx::ObjectPtr< MbsAutotileFormat_obj > MbsAutotileFormat_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsAutotileFormat_obj > __this = new MbsAutotileFormat_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsAutotileFormat_obj > MbsAutotileFormat_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsAutotileFormat_obj *__this = (MbsAutotileFormat_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsAutotileFormat_obj), true, "com.stencyl.io.mbs.game.autotile.MbsAutotileFormat"));
	*(void **)__this = MbsAutotileFormat_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsAutotileFormat_obj::MbsAutotileFormat_obj()
{
}

void MbsAutotileFormat_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MbsAutotileFormat);
	HX_MARK_MEMBER_NAME(_corners,"_corners");
	HX_MARK_MEMBER_NAME(_flags,"_flags");
	 ::mbs::core::MbsObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MbsAutotileFormat_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_corners,"_corners");
	HX_VISIT_MEMBER_NAME(_flags,"_flags");
	 ::mbs::core::MbsObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val MbsAutotileFormat_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"getId") ) { return hx::Val( getId_dyn() ); }
		if (HX_FIELD_EQ(inName,"setId") ) { return hx::Val( setId_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"_flags") ) { return hx::Val( _flags ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getName") ) { return hx::Val( getName_dyn() ); }
		if (HX_FIELD_EQ(inName,"setName") ) { return hx::Val( setName_dyn() ); }
		if (HX_FIELD_EQ(inName,"getDown") ) { return hx::Val( getDown_dyn() ); }
		if (HX_FIELD_EQ(inName,"setDown") ) { return hx::Val( setDown_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_corners") ) { return hx::Val( _corners ); }
		if (HX_FIELD_EQ(inName,"getFlags") ) { return hx::Val( getFlags_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getAcross") ) { return hx::Val( getAcross_dyn() ); }
		if (HX_FIELD_EQ(inName,"setAcross") ) { return hx::Val( setAcross_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		if (HX_FIELD_EQ(inName,"getCorners") ) { return hx::Val( getCorners_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
		if (HX_FIELD_EQ(inName,"createFlags") ) { return hx::Val( createFlags_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"createCorners") ) { return hx::Val( createCorners_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsAutotileFormat_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { outValue = ( id ); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { outValue = ( name ); return true; }
		if (HX_FIELD_EQ(inName,"down") ) { outValue = ( down ); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"flags") ) { outValue = ( flags ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"across") ) { outValue = ( across ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"corners") ) { outValue = ( corners ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"MBS_AUTOTILE_FORMAT") ) { outValue = ( MBS_AUTOTILE_FORMAT ); return true; }
		break;
	case 26:
		if (HX_FIELD_EQ(inName,"new_MbsAutotileFormat_list") ) { outValue = new_MbsAutotileFormat_list_dyn(); return true; }
	}
	return false;
}

hx::Val MbsAutotileFormat_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"_flags") ) { _flags=inValue.Cast<  ::mbs::io::MbsIntList >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"_corners") ) { _corners=inValue.Cast<  ::mbs::io::MbsList >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool MbsAutotileFormat_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { id=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"name") ) { name=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"down") ) { down=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"flags") ) { flags=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"across") ) { across=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"corners") ) { corners=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"MBS_AUTOTILE_FORMAT") ) { MBS_AUTOTILE_FORMAT=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
	}
	return false;
}

void MbsAutotileFormat_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("_corners","\x7f","\xf4","\xd2","\x9c"));
	outFields->push(HX_HCSTRING("_flags","\x88","\x72","\x73","\xfe"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo MbsAutotileFormat_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::mbs::io::MbsList*/ ,(int)offsetof(MbsAutotileFormat_obj,_corners),HX_HCSTRING("_corners","\x7f","\xf4","\xd2","\x9c")},
	{hx::fsObject /*::mbs::io::MbsIntList*/ ,(int)offsetof(MbsAutotileFormat_obj,_flags),HX_HCSTRING("_flags","\x88","\x72","\x73","\xfe")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo MbsAutotileFormat_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsAutotileFormat_obj::id,HX_HCSTRING("id","\xdb","\x5b","\x00","\x00")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsAutotileFormat_obj::name,HX_HCSTRING("name","\x4b","\x72","\xff","\x48")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsAutotileFormat_obj::across,HX_HCSTRING("across","\x7f","\x5f","\xf8","\x14")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsAutotileFormat_obj::down,HX_HCSTRING("down","\x62","\xf8","\x6d","\x42")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsAutotileFormat_obj::corners,HX_HCSTRING("corners","\xfe","\x9a","\x1a","\x63")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsAutotileFormat_obj::flags,HX_HCSTRING("flags","\x47","\x2b","\x8c","\x02")},
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT,HX_HCSTRING("MBS_AUTOTILE_FORMAT","\x38","\xe2","\x4e","\x8e")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsAutotileFormat_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("_corners","\x7f","\xf4","\xd2","\x9c"),
	HX_HCSTRING("_flags","\x88","\x72","\x73","\xfe"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	HX_HCSTRING("getId","\x11","\x92","\x60","\x91"),
	HX_HCSTRING("setId","\x1d","\x88","\x2f","\x7a"),
	HX_HCSTRING("getName","\x01","\x22","\x82","\x1b"),
	HX_HCSTRING("setName","\x0d","\xb3","\x83","\x0e"),
	HX_HCSTRING("getAcross","\xb5","\xe8","\x4e","\x91"),
	HX_HCSTRING("setAcross","\xc1","\xd4","\x9f","\x74"),
	HX_HCSTRING("getDown","\x18","\xa8","\xf0","\x14"),
	HX_HCSTRING("setDown","\x24","\x39","\xf2","\x07"),
	HX_HCSTRING("getCorners","\x08","\x21","\x7c","\xb2"),
	HX_HCSTRING("createCorners","\x62","\x73","\x5d","\x4b"),
	HX_HCSTRING("getFlags","\xd1","\x3a","\x63","\x62"),
	HX_HCSTRING("createFlags","\xab","\x62","\x07","\x2c"),
	::String(null()) };

static void MbsAutotileFormat_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsAutotileFormat_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsAutotileFormat_obj::id,"id");
	HX_MARK_MEMBER_NAME(MbsAutotileFormat_obj::name,"name");
	HX_MARK_MEMBER_NAME(MbsAutotileFormat_obj::across,"across");
	HX_MARK_MEMBER_NAME(MbsAutotileFormat_obj::down,"down");
	HX_MARK_MEMBER_NAME(MbsAutotileFormat_obj::corners,"corners");
	HX_MARK_MEMBER_NAME(MbsAutotileFormat_obj::flags,"flags");
	HX_MARK_MEMBER_NAME(MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT,"MBS_AUTOTILE_FORMAT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsAutotileFormat_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsAutotileFormat_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsAutotileFormat_obj::id,"id");
	HX_VISIT_MEMBER_NAME(MbsAutotileFormat_obj::name,"name");
	HX_VISIT_MEMBER_NAME(MbsAutotileFormat_obj::across,"across");
	HX_VISIT_MEMBER_NAME(MbsAutotileFormat_obj::down,"down");
	HX_VISIT_MEMBER_NAME(MbsAutotileFormat_obj::corners,"corners");
	HX_VISIT_MEMBER_NAME(MbsAutotileFormat_obj::flags,"flags");
	HX_VISIT_MEMBER_NAME(MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT,"MBS_AUTOTILE_FORMAT");
};

#endif

hx::Class MbsAutotileFormat_obj::__mClass;

static ::String MbsAutotileFormat_obj_sStaticFields[] = {
	HX_HCSTRING("id","\xdb","\x5b","\x00","\x00"),
	HX_HCSTRING("name","\x4b","\x72","\xff","\x48"),
	HX_HCSTRING("across","\x7f","\x5f","\xf8","\x14"),
	HX_HCSTRING("down","\x62","\xf8","\x6d","\x42"),
	HX_HCSTRING("corners","\xfe","\x9a","\x1a","\x63"),
	HX_HCSTRING("flags","\x47","\x2b","\x8c","\x02"),
	HX_HCSTRING("MBS_AUTOTILE_FORMAT","\x38","\xe2","\x4e","\x8e"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsAutotileFormat_list","\x0a","\x19","\x47","\xfa"),
	::String(null())
};

void MbsAutotileFormat_obj::__register()
{
	hx::Object *dummy = new MbsAutotileFormat_obj;
	MbsAutotileFormat_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.game.autotile.MbsAutotileFormat","\xf4","\xd9","\x12","\x56");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsAutotileFormat_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsAutotileFormat_obj::__SetStatic;
	__mClass->mMarkFunc = MbsAutotileFormat_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsAutotileFormat_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsAutotileFormat_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsAutotileFormat_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsAutotileFormat_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsAutotileFormat_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsAutotileFormat_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace game
} // end namespace autotile
