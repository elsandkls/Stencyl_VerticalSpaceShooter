// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_utils_motion_BounceOutIn
#include <com/stencyl/utils/motion/BounceOutIn.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_EasingFunction
#include <com/stencyl/utils/motion/EasingFunction.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d2089e8382cba25c_345_new,"com.stencyl.utils.motion.BounceOutIn","new",0xc0405531,"com.stencyl.utils.motion.BounceOutIn.new","com/stencyl/utils/motion/EasingFunctions.hx",345,0xda1c1718)
HX_LOCAL_STACK_FRAME(_hx_pos_d2089e8382cba25c_347_apply,"com.stencyl.utils.motion.BounceOutIn","apply",0x1befa07f,"com.stencyl.utils.motion.BounceOutIn.apply","com/stencyl/utils/motion/EasingFunctions.hx",347,0xda1c1718)
namespace com{
namespace stencyl{
namespace utils{
namespace motion{

void BounceOutIn_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_d2089e8382cba25c_345_new)
HXDLIN( 345)		super::__construct();
            	}

Dynamic BounceOutIn_obj::__CreateEmpty() { return new BounceOutIn_obj; }

void *BounceOutIn_obj::_hx_vtable = 0;

Dynamic BounceOutIn_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< BounceOutIn_obj > _hx_result = new BounceOutIn_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool BounceOutIn_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x047402bf) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x047402bf;
	} else {
		return inClassId==(int)0x43b8900f;
	}
}

Float BounceOutIn_obj::apply(Float t){
            	HX_STACKFRAME(&_hx_pos_d2089e8382cba25c_347_apply)
HXDLIN( 347)		if ((t < ((Float)0.5))) {
HXLINE( 348)			t = (t * (int)2);
HXDLIN( 348)			if ((t < ((Float)0.36363636363636365))) {
HXLINE( 349)				return (((Float)0.5) * ((((Float)7.5625) * t) * t));
            			}
            			else {
HXLINE( 350)				if ((t < ((Float)0.72727272727272729))) {
HXLINE( 351)					t = (t - ((Float)0.54545454545454541));
HXDLIN( 351)					return (((Float)0.5) * (((((Float)7.5625) * t) * t) + ((Float)0.75)));
            				}
            				else {
HXLINE( 352)					if ((t < ((Float)0.90909090909090906))) {
HXLINE( 353)						t = (t - ((Float)0.81818181818181823));
HXDLIN( 353)						return (((Float)0.5) * (((((Float)7.5625) * t) * t) + ((Float)0.9375)));
            					}
            					else {
HXLINE( 355)						t = (t - ((Float)0.95454545454545459));
HXDLIN( 355)						return (((Float)0.5) * (((((Float)7.5625) * t) * t) + ((Float)0.984375)));
            					}
            				}
            			}
            		}
            		else {
HXLINE( 358)			t = ((int)1 - ((t * (int)2) - (int)1));
HXDLIN( 358)			if ((t < ((Float)0.36363636363636365))) {
HXLINE( 359)				return ((((Float)0.5) - (((Float)0.5) * ((((Float)7.5625) * t) * t))) + ((Float)0.5));
            			}
            			else {
HXLINE( 360)				if ((t < ((Float)0.72727272727272729))) {
HXLINE( 361)					t = (t - ((Float)0.54545454545454541));
HXDLIN( 361)					return ((((Float)0.5) - (((Float)0.5) * (((((Float)7.5625) * t) * t) + ((Float)0.75)))) + ((Float)0.5));
            				}
            				else {
HXLINE( 362)					if ((t < ((Float)0.90909090909090906))) {
HXLINE( 363)						t = (t - ((Float)0.81818181818181823));
HXDLIN( 363)						return ((((Float)0.5) - (((Float)0.5) * (((((Float)7.5625) * t) * t) + ((Float)0.9375)))) + ((Float)0.5));
            					}
            					else {
HXLINE( 365)						t = (t - ((Float)0.95454545454545459));
HXDLIN( 365)						return ((((Float)0.5) - (((Float)0.5) * (((((Float)7.5625) * t) * t) + ((Float)0.984375)))) + ((Float)0.5));
            					}
            				}
            			}
            		}
HXLINE( 347)		return ((Float)0.);
            	}



BounceOutIn_obj::BounceOutIn_obj()
{
}

hx::Val BounceOutIn_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"apply") ) { return hx::Val( apply_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *BounceOutIn_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *BounceOutIn_obj_sStaticStorageInfo = 0;
#endif

static ::String BounceOutIn_obj_sMemberFields[] = {
	HX_HCSTRING("apply","\x6e","\x85","\x3b","\x24"),
	::String(null()) };

static void BounceOutIn_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(BounceOutIn_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void BounceOutIn_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(BounceOutIn_obj::__mClass,"__mClass");
};

#endif

hx::Class BounceOutIn_obj::__mClass;

void BounceOutIn_obj::__register()
{
	hx::Object *dummy = new BounceOutIn_obj;
	BounceOutIn_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.utils.motion.BounceOutIn","\xbf","\xe8","\xe7","\x31");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = BounceOutIn_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(BounceOutIn_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< BounceOutIn_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = BounceOutIn_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BounceOutIn_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BounceOutIn_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace utils
} // end namespace motion
