// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_MbsMusic
#include <com/stencyl/io/mbs/MbsMusic.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_MbsResource
#include <com/stencyl/io/mbs/MbsResource.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsField
#include <mbs/core/MbsField.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6fd1bb031a778eda_49_new,"com.stencyl.io.mbs.MbsMusic","new",0xc086b622,"com.stencyl.io.mbs.MbsMusic.new","com/stencyl/io/mbs/MbsMusic.hx",49,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_44_getMbsType,"com.stencyl.io.mbs.MbsMusic","getMbsType",0xa4537de0,"com.stencyl.io.mbs.MbsMusic.getMbsType","com/stencyl/io/mbs/MbsMusic.hx",44,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_54_allocateNew,"com.stencyl.io.mbs.MbsMusic","allocateNew",0xb95ec165,"com.stencyl.io.mbs.MbsMusic.allocateNew","com/stencyl/io/mbs/MbsMusic.hx",54,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_59_getLoop,"com.stencyl.io.mbs.MbsMusic","getLoop",0x520044dc,"com.stencyl.io.mbs.MbsMusic.getLoop","com/stencyl/io/mbs/MbsMusic.hx",59,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_64_setLoop,"com.stencyl.io.mbs.MbsMusic","setLoop",0x4501d5e8,"com.stencyl.io.mbs.MbsMusic.setLoop","com/stencyl/io/mbs/MbsMusic.hx",64,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_69_getPan,"com.stencyl.io.mbs.MbsMusic","getPan",0x6c4a29e5,"com.stencyl.io.mbs.MbsMusic.getPan","com/stencyl/io/mbs/MbsMusic.hx",69,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_74_setPan,"com.stencyl.io.mbs.MbsMusic","setPan",0x38927e59,"com.stencyl.io.mbs.MbsMusic.setPan","com/stencyl/io/mbs/MbsMusic.hx",74,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_79_getStream,"com.stencyl.io.mbs.MbsMusic","getStream",0xb5b440f8,"com.stencyl.io.mbs.MbsMusic.getStream","com/stencyl/io/mbs/MbsMusic.hx",79,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_84_setStream,"com.stencyl.io.mbs.MbsMusic","setStream",0x99052d04,"com.stencyl.io.mbs.MbsMusic.setStream","com/stencyl/io/mbs/MbsMusic.hx",84,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_89_getType,"com.stencyl.io.mbs.MbsMusic","getType",0x57519132,"com.stencyl.io.mbs.MbsMusic.getType","com/stencyl/io/mbs/MbsMusic.hx",89,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_94_setType,"com.stencyl.io.mbs.MbsMusic","setType",0x4a53223e,"com.stencyl.io.mbs.MbsMusic.setType","com/stencyl/io/mbs/MbsMusic.hx",94,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_99_getVolume,"com.stencyl.io.mbs.MbsMusic","getVolume",0x03da5652,"com.stencyl.io.mbs.MbsMusic.getVolume","com/stencyl/io/mbs/MbsMusic.hx",99,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_104_setVolume,"com.stencyl.io.mbs.MbsMusic","setVolume",0xe72b425e,"com.stencyl.io.mbs.MbsMusic.setVolume","com/stencyl/io/mbs/MbsMusic.hx",104,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_26_initializeType,"com.stencyl.io.mbs.MbsMusic","initializeType",0x09c685a8,"com.stencyl.io.mbs.MbsMusic.initializeType","com/stencyl/io/mbs/MbsMusic.hx",26,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_21_initializeType,"com.stencyl.io.mbs.MbsMusic","initializeType",0x09c685a8,"com.stencyl.io.mbs.MbsMusic.initializeType","com/stencyl/io/mbs/MbsMusic.hx",21,0x5f4e4bce)
HX_LOCAL_STACK_FRAME(_hx_pos_6fd1bb031a778eda_39_new_MbsMusic_list,"com.stencyl.io.mbs.MbsMusic","new_MbsMusic_list",0xe3393859,"com.stencyl.io.mbs.MbsMusic.new_MbsMusic_list","com/stencyl/io/mbs/MbsMusic.hx",39,0x5f4e4bce)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{

void MbsMusic_obj::__construct(::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_49_new)
HXDLIN(  49)		super::__construct(data);
            	}

Dynamic MbsMusic_obj::__CreateEmpty() { return new MbsMusic_obj; }

void *MbsMusic_obj::_hx_vtable = 0;

Dynamic MbsMusic_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsMusic_obj > _hx_result = new MbsMusic_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsMusic_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2fadfb94) {
		if (inClassId<=(int)0x17b72d64) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x17b72d64;
		} else {
			return inClassId==(int)0x2fadfb94;
		}
	} else {
		return inClassId==(int)0x6a1d713f;
	}
}

 ::mbs::core::MbsType MbsMusic_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_44_getMbsType)
HXDLIN(  44)		return ::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC;
            	}


void MbsMusic_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_54_allocateNew)
HXDLIN(  54)		::Dynamic _hx_tmp = this->data;
HXDLIN(  54)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC->getSize()));
            	}


bool MbsMusic_obj::getLoop(){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_59_getLoop)
HXDLIN(  59)		::Dynamic _hx_tmp = this->data;
HXDLIN(  59)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::MbsMusic_obj::loop->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsMusic_obj,getLoop,return )

void MbsMusic_obj::setLoop(bool _val){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_64_setLoop)
HXDLIN(  64)		::Dynamic _hx_tmp = this->data;
HXDLIN(  64)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::MbsMusic_obj::loop->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsMusic_obj,setLoop,(void))

int MbsMusic_obj::getPan(){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_69_getPan)
HXDLIN(  69)		::Dynamic _hx_tmp = this->data;
HXDLIN(  69)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::MbsMusic_obj::pan->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsMusic_obj,getPan,return )

void MbsMusic_obj::setPan(int _val){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_74_setPan)
HXDLIN(  74)		::Dynamic _hx_tmp = this->data;
HXDLIN(  74)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::MbsMusic_obj::pan->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsMusic_obj,setPan,(void))

bool MbsMusic_obj::getStream(){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_79_getStream)
HXDLIN(  79)		::Dynamic _hx_tmp = this->data;
HXDLIN(  79)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::MbsMusic_obj::stream->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsMusic_obj,getStream,return )

void MbsMusic_obj::setStream(bool _val){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_84_setStream)
HXDLIN(  84)		::Dynamic _hx_tmp = this->data;
HXDLIN(  84)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::MbsMusic_obj::stream->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsMusic_obj,setStream,(void))

::String MbsMusic_obj::getType(){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_89_getType)
HXDLIN(  89)		::Dynamic _hx_tmp = this->data;
HXDLIN(  89)		return ::mbs::io::MbsIO_obj::readString(_hx_tmp,(this->address + ::com::stencyl::io::mbs::MbsMusic_obj::type->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsMusic_obj,getType,return )

void MbsMusic_obj::setType(::String _val){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_94_setType)
HXDLIN(  94)		::Dynamic _hx_tmp = this->data;
HXDLIN(  94)		::mbs::io::MbsIO_obj::writeString(_hx_tmp,(this->address + ::com::stencyl::io::mbs::MbsMusic_obj::type->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsMusic_obj,setType,(void))

int MbsMusic_obj::getVolume(){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_99_getVolume)
HXDLIN(  99)		::Dynamic _hx_tmp = this->data;
HXDLIN(  99)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::MbsMusic_obj::volume->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsMusic_obj,getVolume,return )

void MbsMusic_obj::setVolume(int _val){
            	HX_STACKFRAME(&_hx_pos_6fd1bb031a778eda_104_setVolume)
HXDLIN( 104)		::Dynamic _hx_tmp = this->data;
HXDLIN( 104)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::MbsMusic_obj::volume->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsMusic_obj,setVolume,(void))

 ::mbs::core::MbsField MbsMusic_obj::loop;

 ::mbs::core::MbsField MbsMusic_obj::pan;

 ::mbs::core::MbsField MbsMusic_obj::stream;

 ::mbs::core::MbsField MbsMusic_obj::type;

 ::mbs::core::MbsField MbsMusic_obj::volume;

 ::mbs::core::ComposedType MbsMusic_obj::MBS_MUSIC;

void MbsMusic_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_6fd1bb031a778eda_26_initializeType)
HXLINE(  26)			return  ::com::stencyl::io::mbs::MbsMusic_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_6fd1bb031a778eda_21_initializeType)
HXLINE(  22)		if (hx::IsNotNull( ::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC )) {
HXLINE(  22)			return;
            		}
HXLINE(  23)		::com::stencyl::io::mbs::MbsResource_obj::initializeType();
HXLINE(  25)		::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsMusic",67,88,f6,bd));
HXLINE(  26)		::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC->setInstantiator( ::Dynamic(new _hx_Closure_0()));
HXLINE(  27)		::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC->inherit(::com::stencyl::io::mbs::MbsResource_obj::MBS_RESOURCE);
HXLINE(  29)		::com::stencyl::io::mbs::MbsMusic_obj::loop = ::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC->createField(HX_("loop",64,a6,b7,47),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  30)		::com::stencyl::io::mbs::MbsMusic_obj::pan = ::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC->createField(HX_("pan",5d,51,55,00),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  31)		::com::stencyl::io::mbs::MbsMusic_obj::stream = ::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC->createField(HX_("stream",80,14,2d,11),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  32)		::com::stencyl::io::mbs::MbsMusic_obj::type = ::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC->createField(HX_("type",ba,f2,08,4d),::mbs::core::MbsTypes_obj::STRING);
HXLINE(  33)		::com::stencyl::io::mbs::MbsMusic_obj::volume = ::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC->createField(HX_("volume",da,29,53,5f),::mbs::core::MbsTypes_obj::INTEGER);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsMusic_obj,initializeType,(void))

 ::mbs::io::MbsList MbsMusic_obj::new_MbsMusic_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_6fd1bb031a778eda_39_new_MbsMusic_list)
HXDLIN(  39)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC;
HXDLIN(  39)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::MbsMusic_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsMusic_obj,new_MbsMusic_list,return )


hx::ObjectPtr< MbsMusic_obj > MbsMusic_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsMusic_obj > __this = new MbsMusic_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsMusic_obj > MbsMusic_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsMusic_obj *__this = (MbsMusic_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsMusic_obj), true, "com.stencyl.io.mbs.MbsMusic"));
	*(void **)__this = MbsMusic_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsMusic_obj::MbsMusic_obj()
{
}

hx::Val MbsMusic_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"getPan") ) { return hx::Val( getPan_dyn() ); }
		if (HX_FIELD_EQ(inName,"setPan") ) { return hx::Val( setPan_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getLoop") ) { return hx::Val( getLoop_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLoop") ) { return hx::Val( setLoop_dyn() ); }
		if (HX_FIELD_EQ(inName,"getType") ) { return hx::Val( getType_dyn() ); }
		if (HX_FIELD_EQ(inName,"setType") ) { return hx::Val( setType_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getStream") ) { return hx::Val( getStream_dyn() ); }
		if (HX_FIELD_EQ(inName,"setStream") ) { return hx::Val( setStream_dyn() ); }
		if (HX_FIELD_EQ(inName,"getVolume") ) { return hx::Val( getVolume_dyn() ); }
		if (HX_FIELD_EQ(inName,"setVolume") ) { return hx::Val( setVolume_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsMusic_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"pan") ) { outValue = ( pan ); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"loop") ) { outValue = ( loop ); return true; }
		if (HX_FIELD_EQ(inName,"type") ) { outValue = ( type ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"stream") ) { outValue = ( stream ); return true; }
		if (HX_FIELD_EQ(inName,"volume") ) { outValue = ( volume ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"MBS_MUSIC") ) { outValue = ( MBS_MUSIC ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"new_MbsMusic_list") ) { outValue = new_MbsMusic_list_dyn(); return true; }
	}
	return false;
}

bool MbsMusic_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"pan") ) { pan=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"loop") ) { loop=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"type") ) { type=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"stream") ) { stream=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"volume") ) { volume=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"MBS_MUSIC") ) { MBS_MUSIC=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MbsMusic_obj_sMemberStorageInfo = 0;
static hx::StaticInfo MbsMusic_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsMusic_obj::loop,HX_HCSTRING("loop","\x64","\xa6","\xb7","\x47")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsMusic_obj::pan,HX_HCSTRING("pan","\x5d","\x51","\x55","\x00")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsMusic_obj::stream,HX_HCSTRING("stream","\x80","\x14","\x2d","\x11")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsMusic_obj::type,HX_HCSTRING("type","\xba","\xf2","\x08","\x4d")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsMusic_obj::volume,HX_HCSTRING("volume","\xda","\x29","\x53","\x5f")},
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsMusic_obj::MBS_MUSIC,HX_HCSTRING("MBS_MUSIC","\xa4","\xd1","\x43","\x37")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsMusic_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	HX_HCSTRING("getLoop","\x1a","\x56","\x3a","\x1a"),
	HX_HCSTRING("setLoop","\x26","\xe7","\x3b","\x0d"),
	HX_HCSTRING("getPan","\x67","\x8a","\x24","\xa3"),
	HX_HCSTRING("setPan","\xdb","\xde","\x6c","\x6f"),
	HX_HCSTRING("getStream","\xb6","\x9d","\x83","\x8d"),
	HX_HCSTRING("setStream","\xc2","\x89","\xd4","\x70"),
	HX_HCSTRING("getType","\x70","\xa2","\x8b","\x1f"),
	HX_HCSTRING("setType","\x7c","\x33","\x8d","\x12"),
	HX_HCSTRING("getVolume","\x10","\xb3","\xa9","\xdb"),
	HX_HCSTRING("setVolume","\x1c","\x9f","\xfa","\xbe"),
	::String(null()) };

static void MbsMusic_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsMusic_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsMusic_obj::loop,"loop");
	HX_MARK_MEMBER_NAME(MbsMusic_obj::pan,"pan");
	HX_MARK_MEMBER_NAME(MbsMusic_obj::stream,"stream");
	HX_MARK_MEMBER_NAME(MbsMusic_obj::type,"type");
	HX_MARK_MEMBER_NAME(MbsMusic_obj::volume,"volume");
	HX_MARK_MEMBER_NAME(MbsMusic_obj::MBS_MUSIC,"MBS_MUSIC");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsMusic_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsMusic_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsMusic_obj::loop,"loop");
	HX_VISIT_MEMBER_NAME(MbsMusic_obj::pan,"pan");
	HX_VISIT_MEMBER_NAME(MbsMusic_obj::stream,"stream");
	HX_VISIT_MEMBER_NAME(MbsMusic_obj::type,"type");
	HX_VISIT_MEMBER_NAME(MbsMusic_obj::volume,"volume");
	HX_VISIT_MEMBER_NAME(MbsMusic_obj::MBS_MUSIC,"MBS_MUSIC");
};

#endif

hx::Class MbsMusic_obj::__mClass;

static ::String MbsMusic_obj_sStaticFields[] = {
	HX_HCSTRING("loop","\x64","\xa6","\xb7","\x47"),
	HX_HCSTRING("pan","\x5d","\x51","\x55","\x00"),
	HX_HCSTRING("stream","\x80","\x14","\x2d","\x11"),
	HX_HCSTRING("type","\xba","\xf2","\x08","\x4d"),
	HX_HCSTRING("volume","\xda","\x29","\x53","\x5f"),
	HX_HCSTRING("MBS_MUSIC","\xa4","\xd1","\x43","\x37"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsMusic_list","\x17","\x83","\xf0","\xf2"),
	::String(null())
};

void MbsMusic_obj::__register()
{
	hx::Object *dummy = new MbsMusic_obj;
	MbsMusic_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.MbsMusic","\x30","\xbd","\xec","\x5c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsMusic_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsMusic_obj::__SetStatic;
	__mClass->mMarkFunc = MbsMusic_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsMusic_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsMusic_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsMusic_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsMusic_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsMusic_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsMusic_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
