// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_MbsResource
#include <com/stencyl/io/mbs/MbsResource.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_actortype_MbsActorType
#include <com/stencyl/io/mbs/actortype/MbsActorType.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_snippet_MbsSnippet
#include <com/stencyl/io/mbs/snippet/MbsSnippet.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsField
#include <mbs/core/MbsField.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_77_new,"com.stencyl.io.mbs.actortype.MbsActorType","new",0x35c61cab,"com.stencyl.io.mbs.actortype.MbsActorType.new","com/stencyl/io/mbs/actortype/MbsActorType.hx",77,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_71_getMbsType,"com.stencyl.io.mbs.actortype.MbsActorType","getMbsType",0x9a6bea77,"com.stencyl.io.mbs.actortype.MbsActorType.getMbsType","com/stencyl/io/mbs/actortype/MbsActorType.hx",71,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_84_allocateNew,"com.stencyl.io.mbs.actortype.MbsActorType","allocateNew",0x18a558ee,"com.stencyl.io.mbs.actortype.MbsActorType.allocateNew","com/stencyl/io/mbs/actortype/MbsActorType.hx",84,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_89_getAngularDamping,"com.stencyl.io.mbs.actortype.MbsActorType","getAngularDamping",0x614a52c1,"com.stencyl.io.mbs.actortype.MbsActorType.getAngularDamping","com/stencyl/io/mbs/actortype/MbsActorType.hx",89,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_94_setAngularDamping,"com.stencyl.io.mbs.actortype.MbsActorType","setAngularDamping",0x84b82acd,"com.stencyl.io.mbs.actortype.MbsActorType.setAngularDamping","com/stencyl/io/mbs/actortype/MbsActorType.hx",94,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_99_getAutoScale,"com.stencyl.io.mbs.actortype.MbsActorType","getAutoScale",0x63e5fb7a,"com.stencyl.io.mbs.actortype.MbsActorType.getAutoScale","com/stencyl/io/mbs/actortype/MbsActorType.hx",99,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_104_setAutoScale,"com.stencyl.io.mbs.actortype.MbsActorType","setAutoScale",0x78df1eee,"com.stencyl.io.mbs.actortype.MbsActorType.setAutoScale","com/stencyl/io/mbs/actortype/MbsActorType.hx",104,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_109_getBodyType,"com.stencyl.io.mbs.actortype.MbsActorType","getBodyType",0x6178647d,"com.stencyl.io.mbs.actortype.MbsActorType.getBodyType","com/stencyl/io/mbs/actortype/MbsActorType.hx",109,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_114_setBodyType,"com.stencyl.io.mbs.actortype.MbsActorType","setBodyType",0x6be56b89,"com.stencyl.io.mbs.actortype.MbsActorType.setBodyType","com/stencyl/io/mbs/actortype/MbsActorType.hx",114,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_119_getContinuous,"com.stencyl.io.mbs.actortype.MbsActorType","getContinuous",0x3b7c1950,"com.stencyl.io.mbs.actortype.MbsActorType.getContinuous","com/stencyl/io/mbs/actortype/MbsActorType.hx",119,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_124_setContinuous,"com.stencyl.io.mbs.actortype.MbsActorType","setContinuous",0x8081fb5c,"com.stencyl.io.mbs.actortype.MbsActorType.setContinuous","com/stencyl/io/mbs/actortype/MbsActorType.hx",124,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_129_getEventSnippetID,"com.stencyl.io.mbs.actortype.MbsActorType","getEventSnippetID",0xd9b12b3f,"com.stencyl.io.mbs.actortype.MbsActorType.getEventSnippetID","com/stencyl/io/mbs/actortype/MbsActorType.hx",129,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_134_setEventSnippetID,"com.stencyl.io.mbs.actortype.MbsActorType","setEventSnippetID",0xfd1f034b,"com.stencyl.io.mbs.actortype.MbsActorType.setEventSnippetID","com/stencyl/io/mbs/actortype/MbsActorType.hx",134,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_139_getFixedRotation,"com.stencyl.io.mbs.actortype.MbsActorType","getFixedRotation",0x0354d131,"com.stencyl.io.mbs.actortype.MbsActorType.getFixedRotation","com/stencyl/io/mbs/actortype/MbsActorType.hx",139,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_144_setFixedRotation,"com.stencyl.io.mbs.actortype.MbsActorType","setFixedRotation",0x5996bea5,"com.stencyl.io.mbs.actortype.MbsActorType.setFixedRotation","com/stencyl/io/mbs/actortype/MbsActorType.hx",144,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_149_getFriction,"com.stencyl.io.mbs.actortype.MbsActorType","getFriction",0x2d154afb,"com.stencyl.io.mbs.actortype.MbsActorType.getFriction","com/stencyl/io/mbs/actortype/MbsActorType.hx",149,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_154_setFriction,"com.stencyl.io.mbs.actortype.MbsActorType","setFriction",0x37825207,"com.stencyl.io.mbs.actortype.MbsActorType.setFriction","com/stencyl/io/mbs/actortype/MbsActorType.hx",154,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_159_getGroupID,"com.stencyl.io.mbs.actortype.MbsActorType","getGroupID",0xcecfa9f9,"com.stencyl.io.mbs.actortype.MbsActorType.getGroupID","com/stencyl/io/mbs/actortype/MbsActorType.hx",159,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_164_setGroupID,"com.stencyl.io.mbs.actortype.MbsActorType","setGroupID",0xd24d486d,"com.stencyl.io.mbs.actortype.MbsActorType.setGroupID","com/stencyl/io/mbs/actortype/MbsActorType.hx",164,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_169_getIgnoreGravity,"com.stencyl.io.mbs.actortype.MbsActorType","getIgnoreGravity",0x48834dbb,"com.stencyl.io.mbs.actortype.MbsActorType.getIgnoreGravity","com/stencyl/io/mbs/actortype/MbsActorType.hx",169,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_174_setIgnoreGravity,"com.stencyl.io.mbs.actortype.MbsActorType","setIgnoreGravity",0x9ec53b2f,"com.stencyl.io.mbs.actortype.MbsActorType.setIgnoreGravity","com/stencyl/io/mbs/actortype/MbsActorType.hx",174,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_179_getInertia,"com.stencyl.io.mbs.actortype.MbsActorType","getInertia",0xc492da19,"com.stencyl.io.mbs.actortype.MbsActorType.getInertia","com/stencyl/io/mbs/actortype/MbsActorType.hx",179,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_184_setInertia,"com.stencyl.io.mbs.actortype.MbsActorType","setInertia",0xc810788d,"com.stencyl.io.mbs.actortype.MbsActorType.setInertia","com/stencyl/io/mbs/actortype/MbsActorType.hx",184,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_189_getLinearDamping,"com.stencyl.io.mbs.actortype.MbsActorType","getLinearDamping",0x9be8e7bc,"com.stencyl.io.mbs.actortype.MbsActorType.getLinearDamping","com/stencyl/io/mbs/actortype/MbsActorType.hx",189,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_194_setLinearDamping,"com.stencyl.io.mbs.actortype.MbsActorType","setLinearDamping",0xf22ad530,"com.stencyl.io.mbs.actortype.MbsActorType.setLinearDamping","com/stencyl/io/mbs/actortype/MbsActorType.hx",194,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_199_getMass,"com.stencyl.io.mbs.actortype.MbsActorType","getMass",0x946ebe75,"com.stencyl.io.mbs.actortype.MbsActorType.getMass","com/stencyl/io/mbs/actortype/MbsActorType.hx",199,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_204_setMass,"com.stencyl.io.mbs.actortype.MbsActorType","setMass",0x87704f81,"com.stencyl.io.mbs.actortype.MbsActorType.setMass","com/stencyl/io/mbs/actortype/MbsActorType.hx",204,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_209_getPausable,"com.stencyl.io.mbs.actortype.MbsActorType","getPausable",0x9c3e19aa,"com.stencyl.io.mbs.actortype.MbsActorType.getPausable","com/stencyl/io/mbs/actortype/MbsActorType.hx",209,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_214_setPausable,"com.stencyl.io.mbs.actortype.MbsActorType","setPausable",0xa6ab20b6,"com.stencyl.io.mbs.actortype.MbsActorType.setPausable","com/stencyl/io/mbs/actortype/MbsActorType.hx",214,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_219_getPhysicsMode,"com.stencyl.io.mbs.actortype.MbsActorType","getPhysicsMode",0x4e514c69,"com.stencyl.io.mbs.actortype.MbsActorType.getPhysicsMode","com/stencyl/io/mbs/actortype/MbsActorType.hx",219,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_224_setPhysicsMode,"com.stencyl.io.mbs.actortype.MbsActorType","setPhysicsMode",0x6e7134dd,"com.stencyl.io.mbs.actortype.MbsActorType.setPhysicsMode","com/stencyl/io/mbs/actortype/MbsActorType.hx",224,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_229_getRestitution,"com.stencyl.io.mbs.actortype.MbsActorType","getRestitution",0x6359d109,"com.stencyl.io.mbs.actortype.MbsActorType.getRestitution","com/stencyl/io/mbs/actortype/MbsActorType.hx",229,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_234_setRestitution,"com.stencyl.io.mbs.actortype.MbsActorType","setRestitution",0x8379b97d,"com.stencyl.io.mbs.actortype.MbsActorType.setRestitution","com/stencyl/io/mbs/actortype/MbsActorType.hx",234,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_239_getSprite,"com.stencyl.io.mbs.actortype.MbsActorType","getSprite",0xa4e97bc6,"com.stencyl.io.mbs.actortype.MbsActorType.getSprite","com/stencyl/io/mbs/actortype/MbsActorType.hx",239,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_244_setSprite,"com.stencyl.io.mbs.actortype.MbsActorType","setSprite",0x883a67d2,"com.stencyl.io.mbs.actortype.MbsActorType.setSprite","com/stencyl/io/mbs/actortype/MbsActorType.hx",244,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_249_getIsStatic,"com.stencyl.io.mbs.actortype.MbsActorType","getIsStatic",0xf3b14a39,"com.stencyl.io.mbs.actortype.MbsActorType.getIsStatic","com/stencyl/io/mbs/actortype/MbsActorType.hx",249,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_254_setIsStatic,"com.stencyl.io.mbs.actortype.MbsActorType","setIsStatic",0xfe1e5145,"com.stencyl.io.mbs.actortype.MbsActorType.setIsStatic","com/stencyl/io/mbs/actortype/MbsActorType.hx",254,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_258_getSnippets,"com.stencyl.io.mbs.actortype.MbsActorType","getSnippets",0xe7dce6f7,"com.stencyl.io.mbs.actortype.MbsActorType.getSnippets","com/stencyl/io/mbs/actortype/MbsActorType.hx",258,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_264_createSnippets,"com.stencyl.io.mbs.actortype.MbsActorType","createSnippets",0x7839e5a7,"com.stencyl.io.mbs.actortype.MbsActorType.createSnippets","com/stencyl/io/mbs/actortype/MbsActorType.hx",264,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_40_initializeType,"com.stencyl.io.mbs.actortype.MbsActorType","initializeType",0x240689bf,"com.stencyl.io.mbs.actortype.MbsActorType.initializeType","com/stencyl/io/mbs/actortype/MbsActorType.hx",40,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_35_initializeType,"com.stencyl.io.mbs.actortype.MbsActorType","initializeType",0x240689bf,"com.stencyl.io.mbs.actortype.MbsActorType.initializeType","com/stencyl/io/mbs/actortype/MbsActorType.hx",35,0xe77ae284)
HX_LOCAL_STACK_FRAME(_hx_pos_7d2ca4aa3287a0d2_66_new_MbsActorType_list,"com.stencyl.io.mbs.actortype.MbsActorType","new_MbsActorType_list",0xd32a39b8,"com.stencyl.io.mbs.actortype.MbsActorType.new_MbsActorType_list","com/stencyl/io/mbs/actortype/MbsActorType.hx",66,0xe77ae284)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace actortype{

void MbsActorType_obj::__construct(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_77_new)
HXLINE(  78)		super::__construct(data);
HXLINE(  79)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::snippet::MbsSnippet_obj::MBS_SNIPPET;
HXDLIN(  79)		this->_snippets =  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::snippet::MbsSnippet_obj::__alloc( HX_CTX ,data));
            	}

Dynamic MbsActorType_obj::__CreateEmpty() { return new MbsActorType_obj; }

void *MbsActorType_obj::_hx_vtable = 0;

Dynamic MbsActorType_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsActorType_obj > _hx_result = new MbsActorType_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsActorType_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2e6073b3) {
		if (inClassId<=(int)0x17b72d64) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x17b72d64;
		} else {
			return inClassId==(int)0x2e6073b3;
		}
	} else {
		return inClassId==(int)0x6a1d713f;
	}
}

 ::mbs::core::MbsType MbsActorType_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_71_getMbsType)
HXDLIN(  71)		return ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE;
            	}


void MbsActorType_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_84_allocateNew)
HXDLIN(  84)		::Dynamic _hx_tmp = this->data;
HXDLIN(  84)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->getSize()));
            	}


Float MbsActorType_obj::getAngularDamping(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_89_getAngularDamping)
HXDLIN(  89)		::Dynamic _hx_tmp = this->data;
HXDLIN(  89)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::angularDamping->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getAngularDamping,return )

void MbsActorType_obj::setAngularDamping(Float _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_94_setAngularDamping)
HXDLIN(  94)		::Dynamic _hx_tmp = this->data;
HXDLIN(  94)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::angularDamping->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setAngularDamping,(void))

bool MbsActorType_obj::getAutoScale(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_99_getAutoScale)
HXDLIN(  99)		::Dynamic _hx_tmp = this->data;
HXDLIN(  99)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::autoScale->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getAutoScale,return )

void MbsActorType_obj::setAutoScale(bool _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_104_setAutoScale)
HXDLIN( 104)		::Dynamic _hx_tmp = this->data;
HXDLIN( 104)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::autoScale->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setAutoScale,(void))

int MbsActorType_obj::getBodyType(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_109_getBodyType)
HXDLIN( 109)		::Dynamic _hx_tmp = this->data;
HXDLIN( 109)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::bodyType->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getBodyType,return )

void MbsActorType_obj::setBodyType(int _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_114_setBodyType)
HXDLIN( 114)		::Dynamic _hx_tmp = this->data;
HXDLIN( 114)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::bodyType->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setBodyType,(void))

bool MbsActorType_obj::getContinuous(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_119_getContinuous)
HXDLIN( 119)		::Dynamic _hx_tmp = this->data;
HXDLIN( 119)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::continuous->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getContinuous,return )

void MbsActorType_obj::setContinuous(bool _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_124_setContinuous)
HXDLIN( 124)		::Dynamic _hx_tmp = this->data;
HXDLIN( 124)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::continuous->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setContinuous,(void))

int MbsActorType_obj::getEventSnippetID(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_129_getEventSnippetID)
HXDLIN( 129)		::Dynamic _hx_tmp = this->data;
HXDLIN( 129)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::eventSnippetID->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getEventSnippetID,return )

void MbsActorType_obj::setEventSnippetID(int _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_134_setEventSnippetID)
HXDLIN( 134)		::Dynamic _hx_tmp = this->data;
HXDLIN( 134)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::eventSnippetID->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setEventSnippetID,(void))

bool MbsActorType_obj::getFixedRotation(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_139_getFixedRotation)
HXDLIN( 139)		::Dynamic _hx_tmp = this->data;
HXDLIN( 139)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::fixedRotation->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getFixedRotation,return )

void MbsActorType_obj::setFixedRotation(bool _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_144_setFixedRotation)
HXDLIN( 144)		::Dynamic _hx_tmp = this->data;
HXDLIN( 144)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::fixedRotation->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setFixedRotation,(void))

Float MbsActorType_obj::getFriction(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_149_getFriction)
HXDLIN( 149)		::Dynamic _hx_tmp = this->data;
HXDLIN( 149)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::friction->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getFriction,return )

void MbsActorType_obj::setFriction(Float _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_154_setFriction)
HXDLIN( 154)		::Dynamic _hx_tmp = this->data;
HXDLIN( 154)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::friction->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setFriction,(void))

int MbsActorType_obj::getGroupID(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_159_getGroupID)
HXDLIN( 159)		::Dynamic _hx_tmp = this->data;
HXDLIN( 159)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::groupID->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getGroupID,return )

void MbsActorType_obj::setGroupID(int _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_164_setGroupID)
HXDLIN( 164)		::Dynamic _hx_tmp = this->data;
HXDLIN( 164)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::groupID->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setGroupID,(void))

bool MbsActorType_obj::getIgnoreGravity(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_169_getIgnoreGravity)
HXDLIN( 169)		::Dynamic _hx_tmp = this->data;
HXDLIN( 169)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::ignoreGravity->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getIgnoreGravity,return )

void MbsActorType_obj::setIgnoreGravity(bool _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_174_setIgnoreGravity)
HXDLIN( 174)		::Dynamic _hx_tmp = this->data;
HXDLIN( 174)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::ignoreGravity->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setIgnoreGravity,(void))

Float MbsActorType_obj::getInertia(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_179_getInertia)
HXDLIN( 179)		::Dynamic _hx_tmp = this->data;
HXDLIN( 179)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::inertia->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getInertia,return )

void MbsActorType_obj::setInertia(Float _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_184_setInertia)
HXDLIN( 184)		::Dynamic _hx_tmp = this->data;
HXDLIN( 184)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::inertia->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setInertia,(void))

Float MbsActorType_obj::getLinearDamping(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_189_getLinearDamping)
HXDLIN( 189)		::Dynamic _hx_tmp = this->data;
HXDLIN( 189)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::linearDamping->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getLinearDamping,return )

void MbsActorType_obj::setLinearDamping(Float _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_194_setLinearDamping)
HXDLIN( 194)		::Dynamic _hx_tmp = this->data;
HXDLIN( 194)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::linearDamping->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setLinearDamping,(void))

Float MbsActorType_obj::getMass(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_199_getMass)
HXDLIN( 199)		::Dynamic _hx_tmp = this->data;
HXDLIN( 199)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::mass->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getMass,return )

void MbsActorType_obj::setMass(Float _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_204_setMass)
HXDLIN( 204)		::Dynamic _hx_tmp = this->data;
HXDLIN( 204)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::mass->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setMass,(void))

bool MbsActorType_obj::getPausable(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_209_getPausable)
HXDLIN( 209)		::Dynamic _hx_tmp = this->data;
HXDLIN( 209)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::pausable->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getPausable,return )

void MbsActorType_obj::setPausable(bool _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_214_setPausable)
HXDLIN( 214)		::Dynamic _hx_tmp = this->data;
HXDLIN( 214)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::pausable->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setPausable,(void))

int MbsActorType_obj::getPhysicsMode(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_219_getPhysicsMode)
HXDLIN( 219)		::Dynamic _hx_tmp = this->data;
HXDLIN( 219)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::physicsMode->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getPhysicsMode,return )

void MbsActorType_obj::setPhysicsMode(int _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_224_setPhysicsMode)
HXDLIN( 224)		::Dynamic _hx_tmp = this->data;
HXDLIN( 224)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::physicsMode->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setPhysicsMode,(void))

Float MbsActorType_obj::getRestitution(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_229_getRestitution)
HXDLIN( 229)		::Dynamic _hx_tmp = this->data;
HXDLIN( 229)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::restitution->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getRestitution,return )

void MbsActorType_obj::setRestitution(Float _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_234_setRestitution)
HXDLIN( 234)		::Dynamic _hx_tmp = this->data;
HXDLIN( 234)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::restitution->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setRestitution,(void))

int MbsActorType_obj::getSprite(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_239_getSprite)
HXDLIN( 239)		::Dynamic _hx_tmp = this->data;
HXDLIN( 239)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::sprite->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getSprite,return )

void MbsActorType_obj::setSprite(int _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_244_setSprite)
HXDLIN( 244)		::Dynamic _hx_tmp = this->data;
HXDLIN( 244)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::sprite->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setSprite,(void))

bool MbsActorType_obj::getIsStatic(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_249_getIsStatic)
HXDLIN( 249)		::Dynamic _hx_tmp = this->data;
HXDLIN( 249)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::isStatic->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getIsStatic,return )

void MbsActorType_obj::setIsStatic(bool _val){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_254_setIsStatic)
HXDLIN( 254)		::Dynamic _hx_tmp = this->data;
HXDLIN( 254)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::isStatic->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,setIsStatic,(void))

 ::mbs::io::MbsList MbsActorType_obj::getSnippets(){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_258_getSnippets)
HXLINE( 259)		 ::mbs::io::MbsList _hx_tmp = this->_snippets;
HXDLIN( 259)		::Dynamic _hx_tmp1 = this->data;
HXDLIN( 259)		_hx_tmp->setAddress(::mbs::io::MbsIO_obj::readInt(_hx_tmp1,(this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::snippets->address)));
HXLINE( 260)		return this->_snippets;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,getSnippets,return )

 ::mbs::io::MbsList MbsActorType_obj::createSnippets(int _length){
            	HX_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_264_createSnippets)
HXLINE( 265)		this->_snippets->allocateNew(_length);
HXLINE( 266)		::Dynamic _hx_tmp = this->data;
HXDLIN( 266)		int _hx_tmp1 = (this->address + ::com::stencyl::io::mbs::actortype::MbsActorType_obj::snippets->address);
HXDLIN( 266)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,_hx_tmp1,this->_snippets->getAddress());
HXLINE( 267)		return this->_snippets;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,createSnippets,return )

 ::mbs::core::MbsField MbsActorType_obj::angularDamping;

 ::mbs::core::MbsField MbsActorType_obj::autoScale;

 ::mbs::core::MbsField MbsActorType_obj::bodyType;

 ::mbs::core::MbsField MbsActorType_obj::continuous;

 ::mbs::core::MbsField MbsActorType_obj::eventSnippetID;

 ::mbs::core::MbsField MbsActorType_obj::fixedRotation;

 ::mbs::core::MbsField MbsActorType_obj::friction;

 ::mbs::core::MbsField MbsActorType_obj::groupID;

 ::mbs::core::MbsField MbsActorType_obj::ignoreGravity;

 ::mbs::core::MbsField MbsActorType_obj::inertia;

 ::mbs::core::MbsField MbsActorType_obj::linearDamping;

 ::mbs::core::MbsField MbsActorType_obj::mass;

 ::mbs::core::MbsField MbsActorType_obj::pausable;

 ::mbs::core::MbsField MbsActorType_obj::physicsMode;

 ::mbs::core::MbsField MbsActorType_obj::restitution;

 ::mbs::core::MbsField MbsActorType_obj::sprite;

 ::mbs::core::MbsField MbsActorType_obj::isStatic;

 ::mbs::core::MbsField MbsActorType_obj::snippets;

 ::mbs::core::ComposedType MbsActorType_obj::MBS_ACTOR_TYPE;

void MbsActorType_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_40_initializeType)
HXLINE(  40)			return  ::com::stencyl::io::mbs::actortype::MbsActorType_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_35_initializeType)
HXLINE(  36)		if (hx::IsNotNull( ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE )) {
HXLINE(  36)			return;
            		}
HXLINE(  37)		::com::stencyl::io::mbs::MbsResource_obj::initializeType();
HXLINE(  39)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsActorType",11,c9,e1,3f));
HXLINE(  40)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->setInstantiator( ::Dynamic(new _hx_Closure_0()));
HXLINE(  41)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->inherit(::com::stencyl::io::mbs::MbsResource_obj::MBS_RESOURCE);
HXLINE(  43)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::angularDamping = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("angularDamping",00,8a,bf,7c),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  44)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::autoScale = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("autoScale",9b,0c,da,56),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  45)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::bodyType = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("bodyType",7c,92,2c,cc),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  46)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::continuous = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("continuous",0f,05,17,de),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  47)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::eventSnippetID = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("eventSnippetID",7e,62,26,f5),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  48)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::fixedRotation = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("fixedRotation",d2,86,5e,50),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  49)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::friction = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("friction",fa,78,c9,97),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  50)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::groupID = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("groupID",da,80,f7,86),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  51)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::ignoreGravity = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("ignoreGravity",5c,03,8d,95),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  52)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::inertia = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("inertia",fa,b0,ba,7c),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  53)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::linearDamping = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("linearDamping",5d,9d,f2,e8),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  54)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::mass = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("mass",f4,40,56,48),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  55)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::pausable = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("pausable",a9,47,f2,06),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  56)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::physicsMode = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("physicsMode",ca,a7,44,f3),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  57)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::restitution = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("restitution",6a,2c,4d,08),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  58)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::sprite = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("sprite",05,dc,95,c3),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  59)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::isStatic = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("isStatic",38,78,65,5e),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  60)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::snippets = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE->createField(HX_("snippets",f6,14,91,52),::mbs::core::MbsTypes_obj::LIST);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsActorType_obj,initializeType,(void))

 ::mbs::io::MbsList MbsActorType_obj::new_MbsActorType_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_7d2ca4aa3287a0d2_66_new_MbsActorType_list)
HXDLIN(  66)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE;
HXDLIN(  66)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::actortype::MbsActorType_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsActorType_obj,new_MbsActorType_list,return )


hx::ObjectPtr< MbsActorType_obj > MbsActorType_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsActorType_obj > __this = new MbsActorType_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsActorType_obj > MbsActorType_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsActorType_obj *__this = (MbsActorType_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsActorType_obj), true, "com.stencyl.io.mbs.actortype.MbsActorType"));
	*(void **)__this = MbsActorType_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsActorType_obj::MbsActorType_obj()
{
}

void MbsActorType_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MbsActorType);
	HX_MARK_MEMBER_NAME(_snippets,"_snippets");
	 ::mbs::core::MbsObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MbsActorType_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_snippets,"_snippets");
	 ::mbs::core::MbsObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val MbsActorType_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"getMass") ) { return hx::Val( getMass_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMass") ) { return hx::Val( setMass_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_snippets") ) { return hx::Val( _snippets ); }
		if (HX_FIELD_EQ(inName,"getSprite") ) { return hx::Val( getSprite_dyn() ); }
		if (HX_FIELD_EQ(inName,"setSprite") ) { return hx::Val( setSprite_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		if (HX_FIELD_EQ(inName,"getGroupID") ) { return hx::Val( getGroupID_dyn() ); }
		if (HX_FIELD_EQ(inName,"setGroupID") ) { return hx::Val( setGroupID_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInertia") ) { return hx::Val( getInertia_dyn() ); }
		if (HX_FIELD_EQ(inName,"setInertia") ) { return hx::Val( setInertia_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBodyType") ) { return hx::Val( getBodyType_dyn() ); }
		if (HX_FIELD_EQ(inName,"setBodyType") ) { return hx::Val( setBodyType_dyn() ); }
		if (HX_FIELD_EQ(inName,"getFriction") ) { return hx::Val( getFriction_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFriction") ) { return hx::Val( setFriction_dyn() ); }
		if (HX_FIELD_EQ(inName,"getPausable") ) { return hx::Val( getPausable_dyn() ); }
		if (HX_FIELD_EQ(inName,"setPausable") ) { return hx::Val( setPausable_dyn() ); }
		if (HX_FIELD_EQ(inName,"getIsStatic") ) { return hx::Val( getIsStatic_dyn() ); }
		if (HX_FIELD_EQ(inName,"setIsStatic") ) { return hx::Val( setIsStatic_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSnippets") ) { return hx::Val( getSnippets_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"getAutoScale") ) { return hx::Val( getAutoScale_dyn() ); }
		if (HX_FIELD_EQ(inName,"setAutoScale") ) { return hx::Val( setAutoScale_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getContinuous") ) { return hx::Val( getContinuous_dyn() ); }
		if (HX_FIELD_EQ(inName,"setContinuous") ) { return hx::Val( setContinuous_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getPhysicsMode") ) { return hx::Val( getPhysicsMode_dyn() ); }
		if (HX_FIELD_EQ(inName,"setPhysicsMode") ) { return hx::Val( setPhysicsMode_dyn() ); }
		if (HX_FIELD_EQ(inName,"getRestitution") ) { return hx::Val( getRestitution_dyn() ); }
		if (HX_FIELD_EQ(inName,"setRestitution") ) { return hx::Val( setRestitution_dyn() ); }
		if (HX_FIELD_EQ(inName,"createSnippets") ) { return hx::Val( createSnippets_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getFixedRotation") ) { return hx::Val( getFixedRotation_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFixedRotation") ) { return hx::Val( setFixedRotation_dyn() ); }
		if (HX_FIELD_EQ(inName,"getIgnoreGravity") ) { return hx::Val( getIgnoreGravity_dyn() ); }
		if (HX_FIELD_EQ(inName,"setIgnoreGravity") ) { return hx::Val( setIgnoreGravity_dyn() ); }
		if (HX_FIELD_EQ(inName,"getLinearDamping") ) { return hx::Val( getLinearDamping_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLinearDamping") ) { return hx::Val( setLinearDamping_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"getAngularDamping") ) { return hx::Val( getAngularDamping_dyn() ); }
		if (HX_FIELD_EQ(inName,"setAngularDamping") ) { return hx::Val( setAngularDamping_dyn() ); }
		if (HX_FIELD_EQ(inName,"getEventSnippetID") ) { return hx::Val( getEventSnippetID_dyn() ); }
		if (HX_FIELD_EQ(inName,"setEventSnippetID") ) { return hx::Val( setEventSnippetID_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsActorType_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"mass") ) { outValue = ( mass ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"sprite") ) { outValue = ( sprite ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"groupID") ) { outValue = ( groupID ); return true; }
		if (HX_FIELD_EQ(inName,"inertia") ) { outValue = ( inertia ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"bodyType") ) { outValue = ( bodyType ); return true; }
		if (HX_FIELD_EQ(inName,"friction") ) { outValue = ( friction ); return true; }
		if (HX_FIELD_EQ(inName,"pausable") ) { outValue = ( pausable ); return true; }
		if (HX_FIELD_EQ(inName,"isStatic") ) { outValue = ( isStatic ); return true; }
		if (HX_FIELD_EQ(inName,"snippets") ) { outValue = ( snippets ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"autoScale") ) { outValue = ( autoScale ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"continuous") ) { outValue = ( continuous ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"physicsMode") ) { outValue = ( physicsMode ); return true; }
		if (HX_FIELD_EQ(inName,"restitution") ) { outValue = ( restitution ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"fixedRotation") ) { outValue = ( fixedRotation ); return true; }
		if (HX_FIELD_EQ(inName,"ignoreGravity") ) { outValue = ( ignoreGravity ); return true; }
		if (HX_FIELD_EQ(inName,"linearDamping") ) { outValue = ( linearDamping ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"angularDamping") ) { outValue = ( angularDamping ); return true; }
		if (HX_FIELD_EQ(inName,"eventSnippetID") ) { outValue = ( eventSnippetID ); return true; }
		if (HX_FIELD_EQ(inName,"MBS_ACTOR_TYPE") ) { outValue = ( MBS_ACTOR_TYPE ); return true; }
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"new_MbsActorType_list") ) { outValue = new_MbsActorType_list_dyn(); return true; }
	}
	return false;
}

hx::Val MbsActorType_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_snippets") ) { _snippets=inValue.Cast<  ::mbs::io::MbsList >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool MbsActorType_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"mass") ) { mass=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"sprite") ) { sprite=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"groupID") ) { groupID=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"inertia") ) { inertia=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"bodyType") ) { bodyType=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"friction") ) { friction=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"pausable") ) { pausable=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"isStatic") ) { isStatic=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"snippets") ) { snippets=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"autoScale") ) { autoScale=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"continuous") ) { continuous=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"physicsMode") ) { physicsMode=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"restitution") ) { restitution=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"fixedRotation") ) { fixedRotation=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"ignoreGravity") ) { ignoreGravity=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"linearDamping") ) { linearDamping=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"angularDamping") ) { angularDamping=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"eventSnippetID") ) { eventSnippetID=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"MBS_ACTOR_TYPE") ) { MBS_ACTOR_TYPE=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
	}
	return false;
}

void MbsActorType_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("_snippets","\x55","\x0c","\x27","\x9a"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo MbsActorType_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::mbs::io::MbsList*/ ,(int)offsetof(MbsActorType_obj,_snippets),HX_HCSTRING("_snippets","\x55","\x0c","\x27","\x9a")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo MbsActorType_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::angularDamping,HX_HCSTRING("angularDamping","\x00","\x8a","\xbf","\x7c")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::autoScale,HX_HCSTRING("autoScale","\x9b","\x0c","\xda","\x56")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::bodyType,HX_HCSTRING("bodyType","\x7c","\x92","\x2c","\xcc")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::continuous,HX_HCSTRING("continuous","\x0f","\x05","\x17","\xde")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::eventSnippetID,HX_HCSTRING("eventSnippetID","\x7e","\x62","\x26","\xf5")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::fixedRotation,HX_HCSTRING("fixedRotation","\xd2","\x86","\x5e","\x50")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::friction,HX_HCSTRING("friction","\xfa","\x78","\xc9","\x97")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::groupID,HX_HCSTRING("groupID","\xda","\x80","\xf7","\x86")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::ignoreGravity,HX_HCSTRING("ignoreGravity","\x5c","\x03","\x8d","\x95")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::inertia,HX_HCSTRING("inertia","\xfa","\xb0","\xba","\x7c")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::linearDamping,HX_HCSTRING("linearDamping","\x5d","\x9d","\xf2","\xe8")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::mass,HX_HCSTRING("mass","\xf4","\x40","\x56","\x48")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::pausable,HX_HCSTRING("pausable","\xa9","\x47","\xf2","\x06")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::physicsMode,HX_HCSTRING("physicsMode","\xca","\xa7","\x44","\xf3")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::restitution,HX_HCSTRING("restitution","\x6a","\x2c","\x4d","\x08")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::sprite,HX_HCSTRING("sprite","\x05","\xdc","\x95","\xc3")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::isStatic,HX_HCSTRING("isStatic","\x38","\x78","\x65","\x5e")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsActorType_obj::snippets,HX_HCSTRING("snippets","\xf6","\x14","\x91","\x52")},
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsActorType_obj::MBS_ACTOR_TYPE,HX_HCSTRING("MBS_ACTOR_TYPE","\x25","\x36","\x3f","\x03")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsActorType_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("_snippets","\x55","\x0c","\x27","\x9a"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	HX_HCSTRING("getAngularDamping","\x36","\x39","\x33","\xef"),
	HX_HCSTRING("setAngularDamping","\x42","\x11","\xa1","\x12"),
	HX_HCSTRING("getAutoScale","\x25","\xa9","\x30","\x66"),
	HX_HCSTRING("setAutoScale","\x99","\xcc","\x29","\x7b"),
	HX_HCSTRING("getBodyType","\x32","\x55","\x20","\xf2"),
	HX_HCSTRING("setBodyType","\x3e","\x5c","\x8d","\xfc"),
	HX_HCSTRING("getContinuous","\x45","\x61","\x89","\x3a"),
	HX_HCSTRING("setContinuous","\x51","\x43","\x8f","\x7f"),
	HX_HCSTRING("getEventSnippetID","\xb4","\x11","\x9a","\x67"),
	HX_HCSTRING("setEventSnippetID","\xc0","\xe9","\x07","\x8b"),
	HX_HCSTRING("getFixedRotation","\x5c","\x30","\x7f","\xba"),
	HX_HCSTRING("setFixedRotation","\xd0","\x1d","\xc1","\x10"),
	HX_HCSTRING("getFriction","\xb0","\x3b","\xbd","\xbd"),
	HX_HCSTRING("setFriction","\xbc","\x42","\x2a","\xc8"),
	HX_HCSTRING("getGroupID","\xe4","\x06","\x59","\xd6"),
	HX_HCSTRING("setGroupID","\x58","\xa5","\xd6","\xd9"),
	HX_HCSTRING("getIgnoreGravity","\xe6","\xac","\xad","\xff"),
	HX_HCSTRING("setIgnoreGravity","\x5a","\x9a","\xef","\x55"),
	HX_HCSTRING("getInertia","\x04","\x37","\x1c","\xcc"),
	HX_HCSTRING("setInertia","\x78","\xd5","\x99","\xcf"),
	HX_HCSTRING("getLinearDamping","\xe7","\x46","\x13","\x53"),
	HX_HCSTRING("setLinearDamping","\x5b","\x34","\x55","\xa9"),
	HX_HCSTRING("getMass","\xaa","\xf0","\xd8","\x1a"),
	HX_HCSTRING("setMass","\xb6","\x81","\xda","\x0d"),
	HX_HCSTRING("getPausable","\x5f","\x0a","\xe6","\x2c"),
	HX_HCSTRING("setPausable","\x6b","\x11","\x53","\x37"),
	HX_HCSTRING("getPhysicsMode","\xd4","\xfa","\xe2","\x7a"),
	HX_HCSTRING("setPhysicsMode","\x48","\xe3","\x02","\x9b"),
	HX_HCSTRING("getRestitution","\x74","\x7f","\xeb","\x8f"),
	HX_HCSTRING("setRestitution","\xe8","\x67","\x0b","\xb0"),
	HX_HCSTRING("getSprite","\x3b","\x65","\xec","\x3f"),
	HX_HCSTRING("setSprite","\x47","\x51","\x3d","\x23"),
	HX_HCSTRING("getIsStatic","\xee","\x3a","\x59","\x84"),
	HX_HCSTRING("setIsStatic","\xfa","\x41","\xc6","\x8e"),
	HX_HCSTRING("getSnippets","\xac","\xd7","\x84","\x78"),
	HX_HCSTRING("createSnippets","\x12","\x94","\xcb","\xa4"),
	::String(null()) };

static void MbsActorType_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsActorType_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::angularDamping,"angularDamping");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::autoScale,"autoScale");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::bodyType,"bodyType");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::continuous,"continuous");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::eventSnippetID,"eventSnippetID");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::fixedRotation,"fixedRotation");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::friction,"friction");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::groupID,"groupID");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::ignoreGravity,"ignoreGravity");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::inertia,"inertia");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::linearDamping,"linearDamping");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::mass,"mass");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::pausable,"pausable");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::physicsMode,"physicsMode");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::restitution,"restitution");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::sprite,"sprite");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::isStatic,"isStatic");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::snippets,"snippets");
	HX_MARK_MEMBER_NAME(MbsActorType_obj::MBS_ACTOR_TYPE,"MBS_ACTOR_TYPE");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsActorType_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::angularDamping,"angularDamping");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::autoScale,"autoScale");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::bodyType,"bodyType");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::continuous,"continuous");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::eventSnippetID,"eventSnippetID");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::fixedRotation,"fixedRotation");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::friction,"friction");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::groupID,"groupID");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::ignoreGravity,"ignoreGravity");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::inertia,"inertia");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::linearDamping,"linearDamping");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::mass,"mass");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::pausable,"pausable");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::physicsMode,"physicsMode");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::restitution,"restitution");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::sprite,"sprite");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::isStatic,"isStatic");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::snippets,"snippets");
	HX_VISIT_MEMBER_NAME(MbsActorType_obj::MBS_ACTOR_TYPE,"MBS_ACTOR_TYPE");
};

#endif

hx::Class MbsActorType_obj::__mClass;

static ::String MbsActorType_obj_sStaticFields[] = {
	HX_HCSTRING("angularDamping","\x00","\x8a","\xbf","\x7c"),
	HX_HCSTRING("autoScale","\x9b","\x0c","\xda","\x56"),
	HX_HCSTRING("bodyType","\x7c","\x92","\x2c","\xcc"),
	HX_HCSTRING("continuous","\x0f","\x05","\x17","\xde"),
	HX_HCSTRING("eventSnippetID","\x7e","\x62","\x26","\xf5"),
	HX_HCSTRING("fixedRotation","\xd2","\x86","\x5e","\x50"),
	HX_HCSTRING("friction","\xfa","\x78","\xc9","\x97"),
	HX_HCSTRING("groupID","\xda","\x80","\xf7","\x86"),
	HX_HCSTRING("ignoreGravity","\x5c","\x03","\x8d","\x95"),
	HX_HCSTRING("inertia","\xfa","\xb0","\xba","\x7c"),
	HX_HCSTRING("linearDamping","\x5d","\x9d","\xf2","\xe8"),
	HX_HCSTRING("mass","\xf4","\x40","\x56","\x48"),
	HX_HCSTRING("pausable","\xa9","\x47","\xf2","\x06"),
	HX_HCSTRING("physicsMode","\xca","\xa7","\x44","\xf3"),
	HX_HCSTRING("restitution","\x6a","\x2c","\x4d","\x08"),
	HX_HCSTRING("sprite","\x05","\xdc","\x95","\xc3"),
	HX_HCSTRING("isStatic","\x38","\x78","\x65","\x5e"),
	HX_HCSTRING("snippets","\xf6","\x14","\x91","\x52"),
	HX_HCSTRING("MBS_ACTOR_TYPE","\x25","\x36","\x3f","\x03"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsActorType_list","\xad","\xfe","\x5f","\xfc"),
	::String(null())
};

void MbsActorType_obj::__register()
{
	hx::Object *dummy = new MbsActorType_obj;
	MbsActorType_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.actortype.MbsActorType","\x39","\xeb","\x61","\xd6");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsActorType_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsActorType_obj::__SetStatic;
	__mClass->mMarkFunc = MbsActorType_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsActorType_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsActorType_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsActorType_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsActorType_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsActorType_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsActorType_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace actortype
