// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsJoint
#include <com/stencyl/io/mbs/scene/physics/MbsJoint.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsSlidingJoint
#include <com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsField
#include <mbs/core/MbsField.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c57f8288bd9c9938_55_new,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","new",0x319e6cfa,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.new","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",55,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_50_getMbsType,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","getMbsType",0xb3ced208,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.getMbsType","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",50,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_60_allocateNew,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","allocateNew",0x35cd103d,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.allocateNew","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",60,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_65_getLimit,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","getLimit",0xf68da3eb,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.getLimit","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",65,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_70_setLimit,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","setLimit",0xa4eafd5f,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.setLimit","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",70,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_75_getMotor,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","getMotor",0x8df0d525,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.getMotor","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",75,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_80_setMotor,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","setMotor",0x3c4e2e99,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.setMotor","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",80,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_85_getLower,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","getLower",0xfa8c7eb1,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.getLower","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",85,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_90_setLower,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","setLower",0xa8e9d825,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.setLower","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",90,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_95_getUpper,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","getUpper",0x29cb9e12,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.getUpper","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",95,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_100_setUpper,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","setUpper",0xd828f786,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.setUpper","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",100,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_105_getForce,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","getForce",0x8621369b,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.getForce","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",105,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_110_setForce,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","setForce",0x347e900f,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.setForce","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",110,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_115_getSpeed,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","getSpeed",0x02f61c37,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.getSpeed","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",115,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_120_setSpeed,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","setSpeed",0xb15375ab,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.setSpeed","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",120,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_125_getX,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","getX",0x34606d28,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.getX","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",125,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_130_setX,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","setX",0x3c4efc9c,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.setX","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",130,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_135_getY,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","getY",0x34606d29,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.getY","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",135,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_140_setY,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","setY",0x3c4efc9d,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.setY","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",140,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_29_initializeType,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","initializeType",0xa3830dd0,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.initializeType","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",29,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_24_initializeType,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","initializeType",0xa3830dd0,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.initializeType","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",24,0xf8f5d0f8)
HX_LOCAL_STACK_FRAME(_hx_pos_c57f8288bd9c9938_45_new_MbsSlidingJoint_list,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","new_MbsSlidingJoint_list",0x547daa68,"com.stencyl.io.mbs.scene.physics.MbsSlidingJoint.new_MbsSlidingJoint_list","com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.hx",45,0xf8f5d0f8)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace scene{
namespace physics{

void MbsSlidingJoint_obj::__construct(::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_55_new)
HXDLIN(  55)		super::__construct(data);
            	}

Dynamic MbsSlidingJoint_obj::__CreateEmpty() { return new MbsSlidingJoint_obj; }

void *MbsSlidingJoint_obj::_hx_vtable = 0;

Dynamic MbsSlidingJoint_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsSlidingJoint_obj > _hx_result = new MbsSlidingJoint_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsSlidingJoint_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x17b72d64) {
		if (inClassId<=(int)0x16855b1a) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x16855b1a;
		} else {
			return inClassId==(int)0x17b72d64;
		}
	} else {
		return inClassId==(int)0x6c0033f4;
	}
}

 ::mbs::core::MbsType MbsSlidingJoint_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_50_getMbsType)
HXDLIN(  50)		return ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT;
            	}


void MbsSlidingJoint_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_60_allocateNew)
HXDLIN(  60)		::Dynamic _hx_tmp = this->data;
HXDLIN(  60)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT->getSize()));
            	}


bool MbsSlidingJoint_obj::getLimit(){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_65_getLimit)
HXDLIN(  65)		::Dynamic _hx_tmp = this->data;
HXDLIN(  65)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::limit->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSlidingJoint_obj,getLimit,return )

void MbsSlidingJoint_obj::setLimit(bool _val){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_70_setLimit)
HXDLIN(  70)		::Dynamic _hx_tmp = this->data;
HXDLIN(  70)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::limit->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSlidingJoint_obj,setLimit,(void))

bool MbsSlidingJoint_obj::getMotor(){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_75_getMotor)
HXDLIN(  75)		::Dynamic _hx_tmp = this->data;
HXDLIN(  75)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::motor->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSlidingJoint_obj,getMotor,return )

void MbsSlidingJoint_obj::setMotor(bool _val){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_80_setMotor)
HXDLIN(  80)		::Dynamic _hx_tmp = this->data;
HXDLIN(  80)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::motor->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSlidingJoint_obj,setMotor,(void))

Float MbsSlidingJoint_obj::getLower(){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_85_getLower)
HXDLIN(  85)		::Dynamic _hx_tmp = this->data;
HXDLIN(  85)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::lower->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSlidingJoint_obj,getLower,return )

void MbsSlidingJoint_obj::setLower(Float _val){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_90_setLower)
HXDLIN(  90)		::Dynamic _hx_tmp = this->data;
HXDLIN(  90)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::lower->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSlidingJoint_obj,setLower,(void))

Float MbsSlidingJoint_obj::getUpper(){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_95_getUpper)
HXDLIN(  95)		::Dynamic _hx_tmp = this->data;
HXDLIN(  95)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::upper->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSlidingJoint_obj,getUpper,return )

void MbsSlidingJoint_obj::setUpper(Float _val){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_100_setUpper)
HXDLIN( 100)		::Dynamic _hx_tmp = this->data;
HXDLIN( 100)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::upper->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSlidingJoint_obj,setUpper,(void))

Float MbsSlidingJoint_obj::getForce(){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_105_getForce)
HXDLIN( 105)		::Dynamic _hx_tmp = this->data;
HXDLIN( 105)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::force->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSlidingJoint_obj,getForce,return )

void MbsSlidingJoint_obj::setForce(Float _val){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_110_setForce)
HXDLIN( 110)		::Dynamic _hx_tmp = this->data;
HXDLIN( 110)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::force->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSlidingJoint_obj,setForce,(void))

Float MbsSlidingJoint_obj::getSpeed(){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_115_getSpeed)
HXDLIN( 115)		::Dynamic _hx_tmp = this->data;
HXDLIN( 115)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::speed->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSlidingJoint_obj,getSpeed,return )

void MbsSlidingJoint_obj::setSpeed(Float _val){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_120_setSpeed)
HXDLIN( 120)		::Dynamic _hx_tmp = this->data;
HXDLIN( 120)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::speed->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSlidingJoint_obj,setSpeed,(void))

Float MbsSlidingJoint_obj::getX(){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_125_getX)
HXDLIN( 125)		::Dynamic _hx_tmp = this->data;
HXDLIN( 125)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::x->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSlidingJoint_obj,getX,return )

void MbsSlidingJoint_obj::setX(Float _val){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_130_setX)
HXDLIN( 130)		::Dynamic _hx_tmp = this->data;
HXDLIN( 130)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::x->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSlidingJoint_obj,setX,(void))

Float MbsSlidingJoint_obj::getY(){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_135_getY)
HXDLIN( 135)		::Dynamic _hx_tmp = this->data;
HXDLIN( 135)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::y->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSlidingJoint_obj,getY,return )

void MbsSlidingJoint_obj::setY(Float _val){
            	HX_STACKFRAME(&_hx_pos_c57f8288bd9c9938_140_setY)
HXDLIN( 140)		::Dynamic _hx_tmp = this->data;
HXDLIN( 140)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::y->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSlidingJoint_obj,setY,(void))

 ::mbs::core::MbsField MbsSlidingJoint_obj::limit;

 ::mbs::core::MbsField MbsSlidingJoint_obj::motor;

 ::mbs::core::MbsField MbsSlidingJoint_obj::lower;

 ::mbs::core::MbsField MbsSlidingJoint_obj::upper;

 ::mbs::core::MbsField MbsSlidingJoint_obj::force;

 ::mbs::core::MbsField MbsSlidingJoint_obj::speed;

 ::mbs::core::MbsField MbsSlidingJoint_obj::x;

 ::mbs::core::MbsField MbsSlidingJoint_obj::y;

 ::mbs::core::ComposedType MbsSlidingJoint_obj::MBS_SLIDING_JOINT;

void MbsSlidingJoint_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_c57f8288bd9c9938_29_initializeType)
HXLINE(  29)			return  ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_c57f8288bd9c9938_24_initializeType)
HXLINE(  25)		if (hx::IsNotNull( ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT )) {
HXLINE(  25)			return;
            		}
HXLINE(  26)		::com::stencyl::io::mbs::scene::physics::MbsJoint_obj::initializeType();
HXLINE(  28)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsSlidingJoint",3a,fa,40,07));
HXLINE(  29)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT->setInstantiator( ::Dynamic(new _hx_Closure_0()));
HXLINE(  30)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT->inherit(::com::stencyl::io::mbs::scene::physics::MbsJoint_obj::MBS_JOINT);
HXLINE(  32)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::limit = ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT->createField(HX_("limit",3b,1f,01,75),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  33)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::motor = ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT->createField(HX_("motor",75,50,64,0c),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  34)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::lower = ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT->createField(HX_("lower",01,fa,ff,78),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  35)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::upper = ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT->createField(HX_("upper",62,19,3f,a8),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  36)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::force = ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT->createField(HX_("force",eb,b1,94,04),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  37)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::speed = ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT->createField(HX_("speed",87,97,69,81),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  38)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::x = ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT->createField(HX_("x",78,00,00,00),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  39)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::y = ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT->createField(HX_("y",79,00,00,00),::mbs::core::MbsTypes_obj::FLOAT);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsSlidingJoint_obj,initializeType,(void))

 ::mbs::io::MbsList MbsSlidingJoint_obj::new_MbsSlidingJoint_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_c57f8288bd9c9938_45_new_MbsSlidingJoint_list)
HXDLIN(  45)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT;
HXDLIN(  45)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsSlidingJoint_obj,new_MbsSlidingJoint_list,return )


hx::ObjectPtr< MbsSlidingJoint_obj > MbsSlidingJoint_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsSlidingJoint_obj > __this = new MbsSlidingJoint_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsSlidingJoint_obj > MbsSlidingJoint_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsSlidingJoint_obj *__this = (MbsSlidingJoint_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsSlidingJoint_obj), true, "com.stencyl.io.mbs.scene.physics.MbsSlidingJoint"));
	*(void **)__this = MbsSlidingJoint_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsSlidingJoint_obj::MbsSlidingJoint_obj()
{
}

hx::Val MbsSlidingJoint_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"getX") ) { return hx::Val( getX_dyn() ); }
		if (HX_FIELD_EQ(inName,"setX") ) { return hx::Val( setX_dyn() ); }
		if (HX_FIELD_EQ(inName,"getY") ) { return hx::Val( getY_dyn() ); }
		if (HX_FIELD_EQ(inName,"setY") ) { return hx::Val( setY_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getLimit") ) { return hx::Val( getLimit_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLimit") ) { return hx::Val( setLimit_dyn() ); }
		if (HX_FIELD_EQ(inName,"getMotor") ) { return hx::Val( getMotor_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMotor") ) { return hx::Val( setMotor_dyn() ); }
		if (HX_FIELD_EQ(inName,"getLower") ) { return hx::Val( getLower_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLower") ) { return hx::Val( setLower_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUpper") ) { return hx::Val( getUpper_dyn() ); }
		if (HX_FIELD_EQ(inName,"setUpper") ) { return hx::Val( setUpper_dyn() ); }
		if (HX_FIELD_EQ(inName,"getForce") ) { return hx::Val( getForce_dyn() ); }
		if (HX_FIELD_EQ(inName,"setForce") ) { return hx::Val( setForce_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSpeed") ) { return hx::Val( getSpeed_dyn() ); }
		if (HX_FIELD_EQ(inName,"setSpeed") ) { return hx::Val( setSpeed_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsSlidingJoint_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { outValue = ( x ); return true; }
		if (HX_FIELD_EQ(inName,"y") ) { outValue = ( y ); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"limit") ) { outValue = ( limit ); return true; }
		if (HX_FIELD_EQ(inName,"motor") ) { outValue = ( motor ); return true; }
		if (HX_FIELD_EQ(inName,"lower") ) { outValue = ( lower ); return true; }
		if (HX_FIELD_EQ(inName,"upper") ) { outValue = ( upper ); return true; }
		if (HX_FIELD_EQ(inName,"force") ) { outValue = ( force ); return true; }
		if (HX_FIELD_EQ(inName,"speed") ) { outValue = ( speed ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"MBS_SLIDING_JOINT") ) { outValue = ( MBS_SLIDING_JOINT ); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"new_MbsSlidingJoint_list") ) { outValue = new_MbsSlidingJoint_list_dyn(); return true; }
	}
	return false;
}

bool MbsSlidingJoint_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"y") ) { y=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"limit") ) { limit=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"motor") ) { motor=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"lower") ) { lower=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"upper") ) { upper=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"force") ) { force=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"speed") ) { speed=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"MBS_SLIDING_JOINT") ) { MBS_SLIDING_JOINT=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MbsSlidingJoint_obj_sMemberStorageInfo = 0;
static hx::StaticInfo MbsSlidingJoint_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSlidingJoint_obj::limit,HX_HCSTRING("limit","\x3b","\x1f","\x01","\x75")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSlidingJoint_obj::motor,HX_HCSTRING("motor","\x75","\x50","\x64","\x0c")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSlidingJoint_obj::lower,HX_HCSTRING("lower","\x01","\xfa","\xff","\x78")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSlidingJoint_obj::upper,HX_HCSTRING("upper","\x62","\x19","\x3f","\xa8")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSlidingJoint_obj::force,HX_HCSTRING("force","\xeb","\xb1","\x94","\x04")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSlidingJoint_obj::speed,HX_HCSTRING("speed","\x87","\x97","\x69","\x81")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSlidingJoint_obj::x,HX_HCSTRING("x","\x78","\x00","\x00","\x00")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSlidingJoint_obj::y,HX_HCSTRING("y","\x79","\x00","\x00","\x00")},
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsSlidingJoint_obj::MBS_SLIDING_JOINT,HX_HCSTRING("MBS_SLIDING_JOINT","\x98","\x87","\xc0","\x27")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsSlidingJoint_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	HX_HCSTRING("getLimit","\xc5","\x2e","\xd8","\xd4"),
	HX_HCSTRING("setLimit","\x39","\x88","\x35","\x83"),
	HX_HCSTRING("getMotor","\xff","\x5f","\x3b","\x6c"),
	HX_HCSTRING("setMotor","\x73","\xb9","\x98","\x1a"),
	HX_HCSTRING("getLower","\x8b","\x09","\xd7","\xd8"),
	HX_HCSTRING("setLower","\xff","\x62","\x34","\x87"),
	HX_HCSTRING("getUpper","\xec","\x28","\x16","\x08"),
	HX_HCSTRING("setUpper","\x60","\x82","\x73","\xb6"),
	HX_HCSTRING("getForce","\x75","\xc1","\x6b","\x64"),
	HX_HCSTRING("setForce","\xe9","\x1a","\xc9","\x12"),
	HX_HCSTRING("getSpeed","\x11","\xa7","\x40","\xe1"),
	HX_HCSTRING("setSpeed","\x85","\x00","\x9e","\x8f"),
	HX_HCSTRING("getX","\x02","\x03","\x62","\x44"),
	HX_HCSTRING("setX","\x76","\x92","\x50","\x4c"),
	HX_HCSTRING("getY","\x03","\x03","\x62","\x44"),
	HX_HCSTRING("setY","\x77","\x92","\x50","\x4c"),
	::String(null()) };

static void MbsSlidingJoint_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsSlidingJoint_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsSlidingJoint_obj::limit,"limit");
	HX_MARK_MEMBER_NAME(MbsSlidingJoint_obj::motor,"motor");
	HX_MARK_MEMBER_NAME(MbsSlidingJoint_obj::lower,"lower");
	HX_MARK_MEMBER_NAME(MbsSlidingJoint_obj::upper,"upper");
	HX_MARK_MEMBER_NAME(MbsSlidingJoint_obj::force,"force");
	HX_MARK_MEMBER_NAME(MbsSlidingJoint_obj::speed,"speed");
	HX_MARK_MEMBER_NAME(MbsSlidingJoint_obj::x,"x");
	HX_MARK_MEMBER_NAME(MbsSlidingJoint_obj::y,"y");
	HX_MARK_MEMBER_NAME(MbsSlidingJoint_obj::MBS_SLIDING_JOINT,"MBS_SLIDING_JOINT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsSlidingJoint_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsSlidingJoint_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsSlidingJoint_obj::limit,"limit");
	HX_VISIT_MEMBER_NAME(MbsSlidingJoint_obj::motor,"motor");
	HX_VISIT_MEMBER_NAME(MbsSlidingJoint_obj::lower,"lower");
	HX_VISIT_MEMBER_NAME(MbsSlidingJoint_obj::upper,"upper");
	HX_VISIT_MEMBER_NAME(MbsSlidingJoint_obj::force,"force");
	HX_VISIT_MEMBER_NAME(MbsSlidingJoint_obj::speed,"speed");
	HX_VISIT_MEMBER_NAME(MbsSlidingJoint_obj::x,"x");
	HX_VISIT_MEMBER_NAME(MbsSlidingJoint_obj::y,"y");
	HX_VISIT_MEMBER_NAME(MbsSlidingJoint_obj::MBS_SLIDING_JOINT,"MBS_SLIDING_JOINT");
};

#endif

hx::Class MbsSlidingJoint_obj::__mClass;

static ::String MbsSlidingJoint_obj_sStaticFields[] = {
	HX_HCSTRING("limit","\x3b","\x1f","\x01","\x75"),
	HX_HCSTRING("motor","\x75","\x50","\x64","\x0c"),
	HX_HCSTRING("lower","\x01","\xfa","\xff","\x78"),
	HX_HCSTRING("upper","\x62","\x19","\x3f","\xa8"),
	HX_HCSTRING("force","\xeb","\xb1","\x94","\x04"),
	HX_HCSTRING("speed","\x87","\x97","\x69","\x81"),
	HX_HCSTRING("x","\x78","\x00","\x00","\x00"),
	HX_HCSTRING("y","\x79","\x00","\x00","\x00"),
	HX_HCSTRING("MBS_SLIDING_JOINT","\x98","\x87","\xc0","\x27"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsSlidingJoint_list","\x42","\x09","\x9d","\xd9"),
	::String(null())
};

void MbsSlidingJoint_obj::__register()
{
	hx::Object *dummy = new MbsSlidingJoint_obj;
	MbsSlidingJoint_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.scene.physics.MbsSlidingJoint","\x08","\x28","\x7a","\x2b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsSlidingJoint_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsSlidingJoint_obj::__SetStatic;
	__mClass->mMarkFunc = MbsSlidingJoint_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsSlidingJoint_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsSlidingJoint_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsSlidingJoint_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsSlidingJoint_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsSlidingJoint_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsSlidingJoint_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace scene
} // end namespace physics
