// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_graphics__G_TemporaryImage
#include <com/stencyl/graphics/_G/TemporaryImage.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dc2a2019d67c659b_682_new,"com.stencyl.graphics._G.TemporaryImage","new",0x6607e0ae,"com.stencyl.graphics._G.TemporaryImage.new","com/stencyl/graphics/G.hx",682,0x0bf8b3aa)
namespace com{
namespace stencyl{
namespace graphics{
namespace _G{

void TemporaryImage_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_dc2a2019d67c659b_682_new)
            	}

Dynamic TemporaryImage_obj::__CreateEmpty() { return new TemporaryImage_obj; }

void *TemporaryImage_obj::_hx_vtable = 0;

Dynamic TemporaryImage_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TemporaryImage_obj > _hx_result = new TemporaryImage_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TemporaryImage_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3bbaf12c;
}


TemporaryImage_obj::TemporaryImage_obj()
{
}

void TemporaryImage_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TemporaryImage);
	HX_MARK_MEMBER_NAME(lifetime,"lifetime");
	HX_MARK_MEMBER_NAME(img,"img");
	HX_MARK_END_CLASS();
}

void TemporaryImage_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(lifetime,"lifetime");
	HX_VISIT_MEMBER_NAME(img,"img");
}

hx::Val TemporaryImage_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"img") ) { return hx::Val( img ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"lifetime") ) { return hx::Val( lifetime ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TemporaryImage_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"img") ) { img=inValue.Cast<  ::openfl::display::BitmapData >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"lifetime") ) { lifetime=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TemporaryImage_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("lifetime","\x09","\x0b","\x72","\x6c"));
	outFields->push(HX_HCSTRING("img","\x03","\x0c","\x50","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo TemporaryImage_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(TemporaryImage_obj,lifetime),HX_HCSTRING("lifetime","\x09","\x0b","\x72","\x6c")},
	{hx::fsObject /*::openfl::display::BitmapData*/ ,(int)offsetof(TemporaryImage_obj,img),HX_HCSTRING("img","\x03","\x0c","\x50","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TemporaryImage_obj_sStaticStorageInfo = 0;
#endif

static ::String TemporaryImage_obj_sMemberFields[] = {
	HX_HCSTRING("lifetime","\x09","\x0b","\x72","\x6c"),
	HX_HCSTRING("img","\x03","\x0c","\x50","\x00"),
	::String(null()) };

static void TemporaryImage_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TemporaryImage_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TemporaryImage_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TemporaryImage_obj::__mClass,"__mClass");
};

#endif

hx::Class TemporaryImage_obj::__mClass;

void TemporaryImage_obj::__register()
{
	hx::Object *dummy = new TemporaryImage_obj;
	TemporaryImage_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.graphics._G.TemporaryImage","\xbc","\xb1","\x4a","\x2e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TemporaryImage_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TemporaryImage_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TemporaryImage_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TemporaryImage_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TemporaryImage_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TemporaryImage_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace graphics
} // end namespace _G
