// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsShape
#include <com/stencyl/io/mbs/shape/MbsShape.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_bcddd102ae8d8e2d_33_new,"com.stencyl.io.mbs.shape.MbsShape","new",0xecdfdccb,"com.stencyl.io.mbs.shape.MbsShape.new","com/stencyl/io/mbs/shape/MbsShape.hx",33,0xbaad8ae4)
HX_LOCAL_STACK_FRAME(_hx_pos_bcddd102ae8d8e2d_28_getMbsType,"com.stencyl.io.mbs.shape.MbsShape","getMbsType",0xe4586e57,"com.stencyl.io.mbs.shape.MbsShape.getMbsType","com/stencyl/io/mbs/shape/MbsShape.hx",28,0xbaad8ae4)
HX_LOCAL_STACK_FRAME(_hx_pos_bcddd102ae8d8e2d_38_allocateNew,"com.stencyl.io.mbs.shape.MbsShape","allocateNew",0x7dac390e,"com.stencyl.io.mbs.shape.MbsShape.allocateNew","com/stencyl/io/mbs/shape/MbsShape.hx",38,0xbaad8ae4)
HX_LOCAL_STACK_FRAME(_hx_pos_bcddd102ae8d8e2d_17_initializeType,"com.stencyl.io.mbs.shape.MbsShape","initializeType",0x4bb27d9f,"com.stencyl.io.mbs.shape.MbsShape.initializeType","com/stencyl/io/mbs/shape/MbsShape.hx",17,0xbaad8ae4)
HX_LOCAL_STACK_FRAME(_hx_pos_bcddd102ae8d8e2d_14_initializeType,"com.stencyl.io.mbs.shape.MbsShape","initializeType",0x4bb27d9f,"com.stencyl.io.mbs.shape.MbsShape.initializeType","com/stencyl/io/mbs/shape/MbsShape.hx",14,0xbaad8ae4)
HX_LOCAL_STACK_FRAME(_hx_pos_bcddd102ae8d8e2d_23_new_MbsShape_list,"com.stencyl.io.mbs.shape.MbsShape","new_MbsShape_list",0x02e2c0c6,"com.stencyl.io.mbs.shape.MbsShape.new_MbsShape_list","com/stencyl/io/mbs/shape/MbsShape.hx",23,0xbaad8ae4)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace shape{

void MbsShape_obj::__construct(::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_bcddd102ae8d8e2d_33_new)
HXDLIN(  33)		super::__construct(data);
            	}

Dynamic MbsShape_obj::__CreateEmpty() { return new MbsShape_obj; }

void *MbsShape_obj::_hx_vtable = 0;

Dynamic MbsShape_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsShape_obj > _hx_result = new MbsShape_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsShape_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x17b72d64) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x17b72d64;
	} else {
		return inClassId==(int)0x3c5173db;
	}
}

 ::mbs::core::MbsType MbsShape_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_bcddd102ae8d8e2d_28_getMbsType)
HXDLIN(  28)		return ::com::stencyl::io::mbs::shape::MbsShape_obj::MBS_SHAPE;
            	}


void MbsShape_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_bcddd102ae8d8e2d_38_allocateNew)
HXDLIN(  38)		::Dynamic _hx_tmp = this->data;
HXDLIN(  38)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::com::stencyl::io::mbs::shape::MbsShape_obj::MBS_SHAPE->getSize()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsShape_obj,allocateNew,(void))

 ::mbs::core::ComposedType MbsShape_obj::MBS_SHAPE;

void MbsShape_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_bcddd102ae8d8e2d_17_initializeType)
HXLINE(  17)			return  ::com::stencyl::io::mbs::shape::MbsShape_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_bcddd102ae8d8e2d_14_initializeType)
HXLINE(  15)		if (hx::IsNotNull( ::com::stencyl::io::mbs::shape::MbsShape_obj::MBS_SHAPE )) {
HXLINE(  15)			return;
            		}
HXLINE(  16)		::com::stencyl::io::mbs::shape::MbsShape_obj::MBS_SHAPE =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsShape",e3,9a,b8,29));
HXLINE(  17)		::com::stencyl::io::mbs::shape::MbsShape_obj::MBS_SHAPE->setInstantiator( ::Dynamic(new _hx_Closure_0()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsShape_obj,initializeType,(void))

 ::mbs::io::MbsList MbsShape_obj::new_MbsShape_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_bcddd102ae8d8e2d_23_new_MbsShape_list)
HXDLIN(  23)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::shape::MbsShape_obj::MBS_SHAPE;
HXDLIN(  23)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::shape::MbsShape_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsShape_obj,new_MbsShape_list,return )


hx::ObjectPtr< MbsShape_obj > MbsShape_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsShape_obj > __this = new MbsShape_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsShape_obj > MbsShape_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsShape_obj *__this = (MbsShape_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsShape_obj), true, "com.stencyl.io.mbs.shape.MbsShape"));
	*(void **)__this = MbsShape_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsShape_obj::MbsShape_obj()
{
}

hx::Val MbsShape_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsShape_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"MBS_SHAPE") ) { outValue = ( MBS_SHAPE ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"new_MbsShape_list") ) { outValue = new_MbsShape_list_dyn(); return true; }
	}
	return false;
}

bool MbsShape_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"MBS_SHAPE") ) { MBS_SHAPE=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MbsShape_obj_sMemberStorageInfo = 0;
static hx::StaticInfo MbsShape_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsShape_obj::MBS_SHAPE,HX_HCSTRING("MBS_SHAPE","\x20","\xe4","\x05","\xa3")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsShape_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	::String(null()) };

static void MbsShape_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsShape_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsShape_obj::MBS_SHAPE,"MBS_SHAPE");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsShape_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsShape_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsShape_obj::MBS_SHAPE,"MBS_SHAPE");
};

#endif

hx::Class MbsShape_obj::__mClass;

static ::String MbsShape_obj_sStaticFields[] = {
	HX_HCSTRING("MBS_SHAPE","\x20","\xe4","\x05","\xa3"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsShape_list","\x1b","\xef","\xad","\xa8"),
	::String(null())
};

void MbsShape_obj::__register()
{
	hx::Object *dummy = new MbsShape_obj;
	MbsShape_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.shape.MbsShape","\x59","\x1b","\x51","\x41");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsShape_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsShape_obj::__SetStatic;
	__mClass->mMarkFunc = MbsShape_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsShape_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsShape_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsShape_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsShape_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsShape_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsShape_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace shape
