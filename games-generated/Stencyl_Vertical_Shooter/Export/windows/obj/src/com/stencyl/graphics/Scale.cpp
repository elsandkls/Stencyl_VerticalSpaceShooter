// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_graphics_Scale
#include <com/stencyl/graphics/Scale.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_81b4ed4463f2bf1b_15_new,"com.stencyl.graphics.Scale","new",0xf1fdab48,"com.stencyl.graphics.Scale.new","com/stencyl/graphics/Scale.hx",15,0xdbd312e7)
HX_LOCAL_STACK_FRAME(_hx_pos_81b4ed4463f2bf1b_34_toString,"com.stencyl.graphics.Scale","toString",0x319a6cc4,"com.stencyl.graphics.Scale.toString","com/stencyl/graphics/Scale.hx",34,0xdbd312e7)
HX_LOCAL_STACK_FRAME(_hx_pos_81b4ed4463f2bf1b_20_fromString,"com.stencyl.graphics.Scale","fromString",0xa4d0fff3,"com.stencyl.graphics.Scale.fromString","com/stencyl/graphics/Scale.hx",20,0xdbd312e7)
HX_LOCAL_STACK_FRAME(_hx_pos_81b4ed4463f2bf1b_5_boot,"com.stencyl.graphics.Scale","boot",0xc411344a,"com.stencyl.graphics.Scale.boot","com/stencyl/graphics/Scale.hx",5,0xdbd312e7)
HX_LOCAL_STACK_FRAME(_hx_pos_81b4ed4463f2bf1b_6_boot,"com.stencyl.graphics.Scale","boot",0xc411344a,"com.stencyl.graphics.Scale.boot","com/stencyl/graphics/Scale.hx",6,0xdbd312e7)
HX_LOCAL_STACK_FRAME(_hx_pos_81b4ed4463f2bf1b_7_boot,"com.stencyl.graphics.Scale","boot",0xc411344a,"com.stencyl.graphics.Scale.boot","com/stencyl/graphics/Scale.hx",7,0xdbd312e7)
HX_LOCAL_STACK_FRAME(_hx_pos_81b4ed4463f2bf1b_8_boot,"com.stencyl.graphics.Scale","boot",0xc411344a,"com.stencyl.graphics.Scale.boot","com/stencyl/graphics/Scale.hx",8,0xdbd312e7)
HX_LOCAL_STACK_FRAME(_hx_pos_81b4ed4463f2bf1b_9_boot,"com.stencyl.graphics.Scale","boot",0xc411344a,"com.stencyl.graphics.Scale.boot","com/stencyl/graphics/Scale.hx",9,0xdbd312e7)
namespace com{
namespace stencyl{
namespace graphics{

void Scale_obj::__construct(Float value){
            	HX_STACKFRAME(&_hx_pos_81b4ed4463f2bf1b_15_new)
HXDLIN(  15)		this->value = value;
            	}

Dynamic Scale_obj::__CreateEmpty() { return new Scale_obj; }

void *Scale_obj::_hx_vtable = 0;

Dynamic Scale_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Scale_obj > _hx_result = new Scale_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Scale_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6e3c8a54;
}

::String Scale_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_81b4ed4463f2bf1b_34_toString)
HXDLIN(  34)		if ((this->value == ((Float)1.0))) {
HXDLIN(  34)			return HX_("1x",27,2b,00,00);
            		}
            		else {
HXLINE(  35)			if ((this->value == ((Float)1.5))) {
HXLINE(  35)				return HX_("1.5x",c0,8a,86,20);
            			}
            			else {
HXLINE(  36)				if ((this->value == ((Float)2.0))) {
HXLINE(  36)					return HX_("2x",06,2c,00,00);
            				}
            				else {
HXLINE(  37)					if ((this->value == ((Float)3.0))) {
HXLINE(  37)						return HX_("3x",e5,2c,00,00);
            					}
            					else {
HXLINE(  38)						if ((this->value == ((Float)4.0))) {
HXLINE(  38)							return HX_("4x",c4,2d,00,00);
            						}
            						else {
HXLINE(  39)							return HX_("",00,00,00,00);
            						}
            					}
            				}
            			}
            		}
HXLINE(  34)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Scale_obj,toString,return )

 ::com::stencyl::graphics::Scale Scale_obj::_1X;

 ::com::stencyl::graphics::Scale Scale_obj::_1_5X;

 ::com::stencyl::graphics::Scale Scale_obj::_2X;

 ::com::stencyl::graphics::Scale Scale_obj::_3X;

 ::com::stencyl::graphics::Scale Scale_obj::_4X;

 ::com::stencyl::graphics::Scale Scale_obj::fromString(::String value){
            	HX_STACKFRAME(&_hx_pos_81b4ed4463f2bf1b_20_fromString)
HXDLIN(  20)		::String _hx_switch_0 = value;
            		if (  (_hx_switch_0==HX_("1.5x",c0,8a,86,20)) ){
HXLINE(  23)			return ::com::stencyl::graphics::Scale_obj::_1_5X;
HXDLIN(  23)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("1x",27,2b,00,00)) ){
HXLINE(  22)			return ::com::stencyl::graphics::Scale_obj::_1X;
HXDLIN(  22)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("2x",06,2c,00,00)) ){
HXLINE(  24)			return ::com::stencyl::graphics::Scale_obj::_2X;
HXDLIN(  24)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("3x",e5,2c,00,00)) ){
HXLINE(  25)			return ::com::stencyl::graphics::Scale_obj::_3X;
HXDLIN(  25)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("4x",c4,2d,00,00)) ){
HXLINE(  26)			return ::com::stencyl::graphics::Scale_obj::_4X;
HXDLIN(  26)			goto _hx_goto_2;
            		}
            		/* default */{
HXLINE(  27)			return ::com::stencyl::graphics::Scale_obj::_1X;
            		}
            		_hx_goto_2:;
HXLINE(  20)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Scale_obj,fromString,return )


Scale_obj::Scale_obj()
{
}

hx::Val Scale_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { return hx::Val( value ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Scale_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"_1X") ) { outValue = ( _1X ); return true; }
		if (HX_FIELD_EQ(inName,"_2X") ) { outValue = ( _2X ); return true; }
		if (HX_FIELD_EQ(inName,"_3X") ) { outValue = ( _3X ); return true; }
		if (HX_FIELD_EQ(inName,"_4X") ) { outValue = ( _4X ); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"_1_5X") ) { outValue = ( _1_5X ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
	}
	return false;
}

hx::Val Scale_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { value=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Scale_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"_1X") ) { _1X=ioValue.Cast<  ::com::stencyl::graphics::Scale >(); return true; }
		if (HX_FIELD_EQ(inName,"_2X") ) { _2X=ioValue.Cast<  ::com::stencyl::graphics::Scale >(); return true; }
		if (HX_FIELD_EQ(inName,"_3X") ) { _3X=ioValue.Cast<  ::com::stencyl::graphics::Scale >(); return true; }
		if (HX_FIELD_EQ(inName,"_4X") ) { _4X=ioValue.Cast<  ::com::stencyl::graphics::Scale >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"_1_5X") ) { _1_5X=ioValue.Cast<  ::com::stencyl::graphics::Scale >(); return true; }
	}
	return false;
}

void Scale_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Scale_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(Scale_obj,value),HX_HCSTRING("value","\x71","\x7f","\xb8","\x31")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Scale_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::com::stencyl::graphics::Scale*/ ,(void *) &Scale_obj::_1X,HX_HCSTRING("_1X","\x26","\x41","\x48","\x00")},
	{hx::fsObject /*::com::stencyl::graphics::Scale*/ ,(void *) &Scale_obj::_1_5X,HX_HCSTRING("_1_5X","\xf0","\xd4","\xbc","\xd3")},
	{hx::fsObject /*::com::stencyl::graphics::Scale*/ ,(void *) &Scale_obj::_2X,HX_HCSTRING("_2X","\x05","\x42","\x48","\x00")},
	{hx::fsObject /*::com::stencyl::graphics::Scale*/ ,(void *) &Scale_obj::_3X,HX_HCSTRING("_3X","\xe4","\x42","\x48","\x00")},
	{hx::fsObject /*::com::stencyl::graphics::Scale*/ ,(void *) &Scale_obj::_4X,HX_HCSTRING("_4X","\xc3","\x43","\x48","\x00")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Scale_obj_sMemberFields[] = {
	HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void Scale_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Scale_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Scale_obj::_1X,"_1X");
	HX_MARK_MEMBER_NAME(Scale_obj::_1_5X,"_1_5X");
	HX_MARK_MEMBER_NAME(Scale_obj::_2X,"_2X");
	HX_MARK_MEMBER_NAME(Scale_obj::_3X,"_3X");
	HX_MARK_MEMBER_NAME(Scale_obj::_4X,"_4X");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Scale_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Scale_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Scale_obj::_1X,"_1X");
	HX_VISIT_MEMBER_NAME(Scale_obj::_1_5X,"_1_5X");
	HX_VISIT_MEMBER_NAME(Scale_obj::_2X,"_2X");
	HX_VISIT_MEMBER_NAME(Scale_obj::_3X,"_3X");
	HX_VISIT_MEMBER_NAME(Scale_obj::_4X,"_4X");
};

#endif

hx::Class Scale_obj::__mClass;

static ::String Scale_obj_sStaticFields[] = {
	HX_HCSTRING("_1X","\x26","\x41","\x48","\x00"),
	HX_HCSTRING("_1_5X","\xf0","\xd4","\xbc","\xd3"),
	HX_HCSTRING("_2X","\x05","\x42","\x48","\x00"),
	HX_HCSTRING("_3X","\xe4","\x42","\x48","\x00"),
	HX_HCSTRING("_4X","\xc3","\x43","\x48","\x00"),
	HX_HCSTRING("fromString","\xdb","\x2d","\x74","\x54"),
	::String(null())
};

void Scale_obj::__register()
{
	hx::Object *dummy = new Scale_obj;
	Scale_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.graphics.Scale","\x56","\xa7","\xec","\xfd");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Scale_obj::__GetStatic;
	__mClass->mSetStaticField = &Scale_obj::__SetStatic;
	__mClass->mMarkFunc = Scale_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Scale_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Scale_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Scale_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Scale_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Scale_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Scale_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Scale_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_81b4ed4463f2bf1b_5_boot)
HXDLIN(   5)		_1X =  ::com::stencyl::graphics::Scale_obj::__alloc( HX_CTX ,((Float)1.0));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_81b4ed4463f2bf1b_6_boot)
HXDLIN(   6)		_1_5X =  ::com::stencyl::graphics::Scale_obj::__alloc( HX_CTX ,((Float)1.5));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_81b4ed4463f2bf1b_7_boot)
HXDLIN(   7)		_2X =  ::com::stencyl::graphics::Scale_obj::__alloc( HX_CTX ,((Float)2.0));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_81b4ed4463f2bf1b_8_boot)
HXDLIN(   8)		_3X =  ::com::stencyl::graphics::Scale_obj::__alloc( HX_CTX ,((Float)3.0));
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_81b4ed4463f2bf1b_9_boot)
HXDLIN(   9)		_4X =  ::com::stencyl::graphics::Scale_obj::__alloc( HX_CTX ,((Float)4.0));
            	}
}

} // end namespace com
} // end namespace stencyl
} // end namespace graphics
