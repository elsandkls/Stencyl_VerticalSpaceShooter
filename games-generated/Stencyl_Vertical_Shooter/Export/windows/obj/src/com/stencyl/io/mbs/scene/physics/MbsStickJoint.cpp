// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsJoint
#include <com/stencyl/io/mbs/scene/physics/MbsJoint.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsStickJoint
#include <com/stencyl/io/mbs/scene/physics/MbsStickJoint.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsField
#include <mbs/core/MbsField.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_223cc77fd08d634c_43_new,"com.stencyl.io.mbs.scene.physics.MbsStickJoint","new",0xb78a0118,"com.stencyl.io.mbs.scene.physics.MbsStickJoint.new","com/stencyl/io/mbs/scene/physics/MbsStickJoint.hx",43,0x1b6a761a)
HX_LOCAL_STACK_FRAME(_hx_pos_223cc77fd08d634c_38_getMbsType,"com.stencyl.io.mbs.scene.physics.MbsStickJoint","getMbsType",0x6f271daa,"com.stencyl.io.mbs.scene.physics.MbsStickJoint.getMbsType","com/stencyl/io/mbs/scene/physics/MbsStickJoint.hx",38,0x1b6a761a)
HX_LOCAL_STACK_FRAME(_hx_pos_223cc77fd08d634c_48_allocateNew,"com.stencyl.io.mbs.scene.physics.MbsStickJoint","allocateNew",0x67b6f25b,"com.stencyl.io.mbs.scene.physics.MbsStickJoint.allocateNew","com/stencyl/io/mbs/scene/physics/MbsStickJoint.hx",48,0x1b6a761a)
HX_LOCAL_STACK_FRAME(_hx_pos_223cc77fd08d634c_53_getDamping,"com.stencyl.io.mbs.scene.physics.MbsStickJoint","getDamping",0x3098ed14,"com.stencyl.io.mbs.scene.physics.MbsStickJoint.getDamping","com/stencyl/io/mbs/scene/physics/MbsStickJoint.hx",53,0x1b6a761a)
HX_LOCAL_STACK_FRAME(_hx_pos_223cc77fd08d634c_58_setDamping,"com.stencyl.io.mbs.scene.physics.MbsStickJoint","setDamping",0x34168b88,"com.stencyl.io.mbs.scene.physics.MbsStickJoint.setDamping","com/stencyl/io/mbs/scene/physics/MbsStickJoint.hx",58,0x1b6a761a)
HX_LOCAL_STACK_FRAME(_hx_pos_223cc77fd08d634c_63_getFrequency,"com.stencyl.io.mbs.scene.physics.MbsStickJoint","getFrequency",0xa94b176e,"com.stencyl.io.mbs.scene.physics.MbsStickJoint.getFrequency","com/stencyl/io/mbs/scene/physics/MbsStickJoint.hx",63,0x1b6a761a)
HX_LOCAL_STACK_FRAME(_hx_pos_223cc77fd08d634c_68_setFrequency,"com.stencyl.io.mbs.scene.physics.MbsStickJoint","setFrequency",0xbe443ae2,"com.stencyl.io.mbs.scene.physics.MbsStickJoint.setFrequency","com/stencyl/io/mbs/scene/physics/MbsStickJoint.hx",68,0x1b6a761a)
HX_LOCAL_STACK_FRAME(_hx_pos_223cc77fd08d634c_23_initializeType,"com.stencyl.io.mbs.scene.physics.MbsStickJoint","initializeType",0x3f46d272,"com.stencyl.io.mbs.scene.physics.MbsStickJoint.initializeType","com/stencyl/io/mbs/scene/physics/MbsStickJoint.hx",23,0x1b6a761a)
HX_LOCAL_STACK_FRAME(_hx_pos_223cc77fd08d634c_18_initializeType,"com.stencyl.io.mbs.scene.physics.MbsStickJoint","initializeType",0x3f46d272,"com.stencyl.io.mbs.scene.physics.MbsStickJoint.initializeType","com/stencyl/io/mbs/scene/physics/MbsStickJoint.hx",18,0x1b6a761a)
HX_LOCAL_STACK_FRAME(_hx_pos_223cc77fd08d634c_33_new_MbsStickJoint_list,"com.stencyl.io.mbs.scene.physics.MbsStickJoint","new_MbsStickJoint_list",0x8f03a46c,"com.stencyl.io.mbs.scene.physics.MbsStickJoint.new_MbsStickJoint_list","com/stencyl/io/mbs/scene/physics/MbsStickJoint.hx",33,0x1b6a761a)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace scene{
namespace physics{

void MbsStickJoint_obj::__construct(::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_223cc77fd08d634c_43_new)
HXDLIN(  43)		super::__construct(data);
            	}

Dynamic MbsStickJoint_obj::__CreateEmpty() { return new MbsStickJoint_obj; }

void *MbsStickJoint_obj::_hx_vtable = 0;

Dynamic MbsStickJoint_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsStickJoint_obj > _hx_result = new MbsStickJoint_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsStickJoint_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3a838af0) {
		if (inClassId<=(int)0x17b72d64) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x17b72d64;
		} else {
			return inClassId==(int)0x3a838af0;
		}
	} else {
		return inClassId==(int)0x6c0033f4;
	}
}

 ::mbs::core::MbsType MbsStickJoint_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_223cc77fd08d634c_38_getMbsType)
HXDLIN(  38)		return ::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::MBS_STICK_JOINT;
            	}


void MbsStickJoint_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_223cc77fd08d634c_48_allocateNew)
HXDLIN(  48)		::Dynamic _hx_tmp = this->data;
HXDLIN(  48)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::MBS_STICK_JOINT->getSize()));
            	}


Float MbsStickJoint_obj::getDamping(){
            	HX_STACKFRAME(&_hx_pos_223cc77fd08d634c_53_getDamping)
HXDLIN(  53)		::Dynamic _hx_tmp = this->data;
HXDLIN(  53)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::damping->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsStickJoint_obj,getDamping,return )

void MbsStickJoint_obj::setDamping(Float _val){
            	HX_STACKFRAME(&_hx_pos_223cc77fd08d634c_58_setDamping)
HXDLIN(  58)		::Dynamic _hx_tmp = this->data;
HXDLIN(  58)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::damping->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsStickJoint_obj,setDamping,(void))

Float MbsStickJoint_obj::getFrequency(){
            	HX_STACKFRAME(&_hx_pos_223cc77fd08d634c_63_getFrequency)
HXDLIN(  63)		::Dynamic _hx_tmp = this->data;
HXDLIN(  63)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::frequency->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsStickJoint_obj,getFrequency,return )

void MbsStickJoint_obj::setFrequency(Float _val){
            	HX_STACKFRAME(&_hx_pos_223cc77fd08d634c_68_setFrequency)
HXDLIN(  68)		::Dynamic _hx_tmp = this->data;
HXDLIN(  68)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::frequency->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsStickJoint_obj,setFrequency,(void))

 ::mbs::core::MbsField MbsStickJoint_obj::damping;

 ::mbs::core::MbsField MbsStickJoint_obj::frequency;

 ::mbs::core::ComposedType MbsStickJoint_obj::MBS_STICK_JOINT;

void MbsStickJoint_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_223cc77fd08d634c_23_initializeType)
HXLINE(  23)			return  ::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_223cc77fd08d634c_18_initializeType)
HXLINE(  19)		if (hx::IsNotNull( ::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::MBS_STICK_JOINT )) {
HXLINE(  19)			return;
            		}
HXLINE(  20)		::com::stencyl::io::mbs::scene::physics::MbsJoint_obj::initializeType();
HXLINE(  22)		::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::MBS_STICK_JOINT =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsStickJoint",d8,56,a3,2f));
HXLINE(  23)		::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::MBS_STICK_JOINT->setInstantiator( ::Dynamic(new _hx_Closure_0()));
HXLINE(  24)		::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::MBS_STICK_JOINT->inherit(::com::stencyl::io::mbs::scene::physics::MbsJoint_obj::MBS_JOINT);
HXLINE(  26)		::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::damping = ::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::MBS_STICK_JOINT->createField(HX_("damping",c2,90,05,14),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  27)		::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::frequency = ::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::MBS_STICK_JOINT->createField(HX_("frequency",9c,82,ea,bb),::mbs::core::MbsTypes_obj::FLOAT);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsStickJoint_obj,initializeType,(void))

 ::mbs::io::MbsList MbsStickJoint_obj::new_MbsStickJoint_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_223cc77fd08d634c_33_new_MbsStickJoint_list)
HXDLIN(  33)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::MBS_STICK_JOINT;
HXDLIN(  33)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsStickJoint_obj,new_MbsStickJoint_list,return )


hx::ObjectPtr< MbsStickJoint_obj > MbsStickJoint_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsStickJoint_obj > __this = new MbsStickJoint_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsStickJoint_obj > MbsStickJoint_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsStickJoint_obj *__this = (MbsStickJoint_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsStickJoint_obj), true, "com.stencyl.io.mbs.scene.physics.MbsStickJoint"));
	*(void **)__this = MbsStickJoint_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsStickJoint_obj::MbsStickJoint_obj()
{
}

hx::Val MbsStickJoint_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		if (HX_FIELD_EQ(inName,"getDamping") ) { return hx::Val( getDamping_dyn() ); }
		if (HX_FIELD_EQ(inName,"setDamping") ) { return hx::Val( setDamping_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"getFrequency") ) { return hx::Val( getFrequency_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFrequency") ) { return hx::Val( setFrequency_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsStickJoint_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"damping") ) { outValue = ( damping ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frequency") ) { outValue = ( frequency ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"MBS_STICK_JOINT") ) { outValue = ( MBS_STICK_JOINT ); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"new_MbsStickJoint_list") ) { outValue = new_MbsStickJoint_list_dyn(); return true; }
	}
	return false;
}

bool MbsStickJoint_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"damping") ) { damping=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frequency") ) { frequency=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"MBS_STICK_JOINT") ) { MBS_STICK_JOINT=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MbsStickJoint_obj_sMemberStorageInfo = 0;
static hx::StaticInfo MbsStickJoint_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsStickJoint_obj::damping,HX_HCSTRING("damping","\xc2","\x90","\x05","\x14")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsStickJoint_obj::frequency,HX_HCSTRING("frequency","\x9c","\x82","\xea","\xbb")},
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsStickJoint_obj::MBS_STICK_JOINT,HX_HCSTRING("MBS_STICK_JOINT","\xfa","\x57","\x2f","\xfe")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsStickJoint_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	HX_HCSTRING("getDamping","\xcc","\x16","\x67","\x63"),
	HX_HCSTRING("setDamping","\x40","\xb5","\xe4","\x66"),
	HX_HCSTRING("getFrequency","\x26","\x1f","\x41","\xcb"),
	HX_HCSTRING("setFrequency","\x9a","\x42","\x3a","\xe0"),
	::String(null()) };

static void MbsStickJoint_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsStickJoint_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsStickJoint_obj::damping,"damping");
	HX_MARK_MEMBER_NAME(MbsStickJoint_obj::frequency,"frequency");
	HX_MARK_MEMBER_NAME(MbsStickJoint_obj::MBS_STICK_JOINT,"MBS_STICK_JOINT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsStickJoint_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsStickJoint_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsStickJoint_obj::damping,"damping");
	HX_VISIT_MEMBER_NAME(MbsStickJoint_obj::frequency,"frequency");
	HX_VISIT_MEMBER_NAME(MbsStickJoint_obj::MBS_STICK_JOINT,"MBS_STICK_JOINT");
};

#endif

hx::Class MbsStickJoint_obj::__mClass;

static ::String MbsStickJoint_obj_sStaticFields[] = {
	HX_HCSTRING("damping","\xc2","\x90","\x05","\x14"),
	HX_HCSTRING("frequency","\x9c","\x82","\xea","\xbb"),
	HX_HCSTRING("MBS_STICK_JOINT","\xfa","\x57","\x2f","\xfe"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsStickJoint_list","\x24","\x82","\x45","\xb5"),
	::String(null())
};

void MbsStickJoint_obj::__register()
{
	hx::Object *dummy = new MbsStickJoint_obj;
	MbsStickJoint_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.scene.physics.MbsStickJoint","\x26","\xd5","\x85","\xb7");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsStickJoint_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsStickJoint_obj::__SetStatic;
	__mClass->mMarkFunc = MbsStickJoint_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsStickJoint_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsStickJoint_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsStickJoint_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsStickJoint_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsStickJoint_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsStickJoint_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace scene
} // end namespace physics
