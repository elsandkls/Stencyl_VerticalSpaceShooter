// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_graphics_BitmapTweenProperties
#include <com/stencyl/graphics/BitmapTweenProperties.h>
#endif
#ifndef INCLUDED_com_stencyl_graphics_BitmapWrapper
#include <com/stencyl/graphics/BitmapWrapper.h>
#endif
#ifndef INCLUDED_com_stencyl_graphics_EngineScaleUpdateListener
#include <com/stencyl/graphics/EngineScaleUpdateListener.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_TweenFloat
#include <com/stencyl/utils/motion/TweenFloat.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_TweenFloat2
#include <com/stencyl/utils/motion/TweenFloat2.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_TweenManager
#include <com/stencyl/utils/motion/TweenManager.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_TweenObject
#include <com/stencyl/utils/motion/TweenObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_656d9ef0c5542343_110_new,"com.stencyl.graphics.BitmapTweenProperties","new",0x78e6964d,"com.stencyl.graphics.BitmapTweenProperties.new","com/stencyl/graphics/BitmapWrapper.hx",110,0x488acf8d)
HX_LOCAL_STACK_FRAME(_hx_pos_656d9ef0c5542343_120_pause,"com.stencyl.graphics.BitmapTweenProperties","pause",0x9499b223,"com.stencyl.graphics.BitmapTweenProperties.pause","com/stencyl/graphics/BitmapWrapper.hx",120,0x488acf8d)
HX_LOCAL_STACK_FRAME(_hx_pos_656d9ef0c5542343_128_unpause,"com.stencyl.graphics.BitmapTweenProperties","unpause",0x49b98e6a,"com.stencyl.graphics.BitmapTweenProperties.unpause","com/stencyl/graphics/BitmapWrapper.hx",128,0x488acf8d)
HX_LOCAL_STACK_FRAME(_hx_pos_656d9ef0c5542343_136_cancel,"com.stencyl.graphics.BitmapTweenProperties","cancel",0x3a91d9ad,"com.stencyl.graphics.BitmapTweenProperties.cancel","com/stencyl/graphics/BitmapWrapper.hx",136,0x488acf8d)
HX_LOCAL_STACK_FRAME(_hx_pos_656d9ef0c5542343_147_onUpdateXY,"com.stencyl.graphics.BitmapTweenProperties","onUpdateXY",0xb8e47d3c,"com.stencyl.graphics.BitmapTweenProperties.onUpdateXY","com/stencyl/graphics/BitmapWrapper.hx",147,0x488acf8d)
HX_LOCAL_STACK_FRAME(_hx_pos_656d9ef0c5542343_148_onUpdateAngle,"com.stencyl.graphics.BitmapTweenProperties","onUpdateAngle",0x84e91a58,"com.stencyl.graphics.BitmapTweenProperties.onUpdateAngle","com/stencyl/graphics/BitmapWrapper.hx",148,0x488acf8d)
HX_LOCAL_STACK_FRAME(_hx_pos_656d9ef0c5542343_149_onUpdateAlpha,"com.stencyl.graphics.BitmapTweenProperties","onUpdateAlpha",0x839d7de3,"com.stencyl.graphics.BitmapTweenProperties.onUpdateAlpha","com/stencyl/graphics/BitmapWrapper.hx",149,0x488acf8d)
HX_LOCAL_STACK_FRAME(_hx_pos_656d9ef0c5542343_150_onUpdateScaleXY,"com.stencyl.graphics.BitmapTweenProperties","onUpdateScaleXY",0x775493d0,"com.stencyl.graphics.BitmapTweenProperties.onUpdateScaleXY","com/stencyl/graphics/BitmapWrapper.hx",150,0x488acf8d)
namespace com{
namespace stencyl{
namespace graphics{

void BitmapTweenProperties_obj::__construct( ::com::stencyl::graphics::BitmapWrapper bmp){
            	HX_GC_STACKFRAME(&_hx_pos_656d9ef0c5542343_110_new)
HXLINE( 111)		this->bmp = bmp;
HXLINE( 113)		this->xy = ( ( ::com::stencyl::utils::motion::TweenFloat2)( ::com::stencyl::utils::motion::TweenFloat2_obj::__alloc( HX_CTX )->doOnUpdate(this->onUpdateXY_dyn())) );
HXLINE( 114)		this->angle = ( ( ::com::stencyl::utils::motion::TweenFloat)( ::com::stencyl::utils::motion::TweenFloat_obj::__alloc( HX_CTX )->doOnUpdate(this->onUpdateAngle_dyn())) );
HXLINE( 115)		this->alpha = ( ( ::com::stencyl::utils::motion::TweenFloat)( ::com::stencyl::utils::motion::TweenFloat_obj::__alloc( HX_CTX )->doOnUpdate(this->onUpdateAlpha_dyn())) );
HXLINE( 116)		this->scaleXY = ( ( ::com::stencyl::utils::motion::TweenFloat2)( ::com::stencyl::utils::motion::TweenFloat2_obj::__alloc( HX_CTX )->doOnUpdate(this->onUpdateScaleXY_dyn())) );
            	}

Dynamic BitmapTweenProperties_obj::__CreateEmpty() { return new BitmapTweenProperties_obj; }

void *BitmapTweenProperties_obj::_hx_vtable = 0;

Dynamic BitmapTweenProperties_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< BitmapTweenProperties_obj > _hx_result = new BitmapTweenProperties_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool BitmapTweenProperties_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x40f6aad9;
}

void BitmapTweenProperties_obj::pause(){
            	HX_STACKFRAME(&_hx_pos_656d9ef0c5542343_120_pause)
HXLINE( 121)		this->xy->paused = true;
HXLINE( 122)		this->angle->paused = true;
HXLINE( 123)		this->alpha->paused = true;
HXLINE( 124)		this->scaleXY->paused = true;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BitmapTweenProperties_obj,pause,(void))

void BitmapTweenProperties_obj::unpause(){
            	HX_STACKFRAME(&_hx_pos_656d9ef0c5542343_128_unpause)
HXLINE( 129)		this->xy->paused = false;
HXLINE( 130)		this->angle->paused = false;
HXLINE( 131)		this->alpha->paused = false;
HXLINE( 132)		this->scaleXY->paused = false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(BitmapTweenProperties_obj,unpause,(void))

void BitmapTweenProperties_obj::cancel(){
            	HX_STACKFRAME(&_hx_pos_656d9ef0c5542343_136_cancel)
HXLINE( 137)		if (this->xy->active) {
HXLINE( 138)			::com::stencyl::utils::motion::TweenManager_obj::cancel(this->xy);
            		}
HXLINE( 139)		if (this->angle->active) {
HXLINE( 140)			::com::stencyl::utils::motion::TweenManager_obj::cancel(this->angle);
            		}
HXLINE( 141)		if (this->alpha->active) {
HXLINE( 142)			::com::stencyl::utils::motion::TweenManager_obj::cancel(this->alpha);
            		}
HXLINE( 143)		if (this->scaleXY->active) {
HXLINE( 144)			::com::stencyl::utils::motion::TweenManager_obj::cancel(this->scaleXY);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(BitmapTweenProperties_obj,cancel,(void))

void BitmapTweenProperties_obj::onUpdateXY(){
            	HX_STACKFRAME(&_hx_pos_656d9ef0c5542343_147_onUpdateXY)
HXDLIN( 147)		this->bmp->set_imgX(this->xy->value1);
HXDLIN( 147)		this->bmp->set_imgY(this->xy->value2);
            	}


HX_DEFINE_DYNAMIC_FUNC0(BitmapTweenProperties_obj,onUpdateXY,(void))

void BitmapTweenProperties_obj::onUpdateAngle(){
            	HX_STACKFRAME(&_hx_pos_656d9ef0c5542343_148_onUpdateAngle)
HXDLIN( 148)		this->bmp->set_rotation(this->angle->value);
            	}


HX_DEFINE_DYNAMIC_FUNC0(BitmapTweenProperties_obj,onUpdateAngle,(void))

void BitmapTweenProperties_obj::onUpdateAlpha(){
            	HX_STACKFRAME(&_hx_pos_656d9ef0c5542343_149_onUpdateAlpha)
HXDLIN( 149)		this->bmp->set_alpha(this->alpha->value);
            	}


HX_DEFINE_DYNAMIC_FUNC0(BitmapTweenProperties_obj,onUpdateAlpha,(void))

void BitmapTweenProperties_obj::onUpdateScaleXY(){
            	HX_STACKFRAME(&_hx_pos_656d9ef0c5542343_150_onUpdateScaleXY)
HXDLIN( 150)		this->bmp->set_scaleX(this->scaleXY->value1);
HXDLIN( 150)		this->bmp->set_scaleY(this->scaleXY->value2);
            	}


HX_DEFINE_DYNAMIC_FUNC0(BitmapTweenProperties_obj,onUpdateScaleXY,(void))


hx::ObjectPtr< BitmapTweenProperties_obj > BitmapTweenProperties_obj::__new( ::com::stencyl::graphics::BitmapWrapper bmp) {
	hx::ObjectPtr< BitmapTweenProperties_obj > __this = new BitmapTweenProperties_obj();
	__this->__construct(bmp);
	return __this;
}

hx::ObjectPtr< BitmapTweenProperties_obj > BitmapTweenProperties_obj::__alloc(hx::Ctx *_hx_ctx, ::com::stencyl::graphics::BitmapWrapper bmp) {
	BitmapTweenProperties_obj *__this = (BitmapTweenProperties_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BitmapTweenProperties_obj), true, "com.stencyl.graphics.BitmapTweenProperties"));
	*(void **)__this = BitmapTweenProperties_obj::_hx_vtable;
	__this->__construct(bmp);
	return __this;
}

BitmapTweenProperties_obj::BitmapTweenProperties_obj()
{
}

void BitmapTweenProperties_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BitmapTweenProperties);
	HX_MARK_MEMBER_NAME(xy,"xy");
	HX_MARK_MEMBER_NAME(angle,"angle");
	HX_MARK_MEMBER_NAME(alpha,"alpha");
	HX_MARK_MEMBER_NAME(scaleXY,"scaleXY");
	HX_MARK_MEMBER_NAME(bmp,"bmp");
	HX_MARK_END_CLASS();
}

void BitmapTweenProperties_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(xy,"xy");
	HX_VISIT_MEMBER_NAME(angle,"angle");
	HX_VISIT_MEMBER_NAME(alpha,"alpha");
	HX_VISIT_MEMBER_NAME(scaleXY,"scaleXY");
	HX_VISIT_MEMBER_NAME(bmp,"bmp");
}

hx::Val BitmapTweenProperties_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"xy") ) { return hx::Val( xy ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"bmp") ) { return hx::Val( bmp ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"angle") ) { return hx::Val( angle ); }
		if (HX_FIELD_EQ(inName,"alpha") ) { return hx::Val( alpha ); }
		if (HX_FIELD_EQ(inName,"pause") ) { return hx::Val( pause_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"cancel") ) { return hx::Val( cancel_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"scaleXY") ) { return hx::Val( scaleXY ); }
		if (HX_FIELD_EQ(inName,"unpause") ) { return hx::Val( unpause_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onUpdateXY") ) { return hx::Val( onUpdateXY_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"onUpdateAngle") ) { return hx::Val( onUpdateAngle_dyn() ); }
		if (HX_FIELD_EQ(inName,"onUpdateAlpha") ) { return hx::Val( onUpdateAlpha_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"onUpdateScaleXY") ) { return hx::Val( onUpdateScaleXY_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val BitmapTweenProperties_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"xy") ) { xy=inValue.Cast<  ::com::stencyl::utils::motion::TweenFloat2 >(); return inValue; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"bmp") ) { bmp=inValue.Cast<  ::com::stencyl::graphics::BitmapWrapper >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"angle") ) { angle=inValue.Cast<  ::com::stencyl::utils::motion::TweenFloat >(); return inValue; }
		if (HX_FIELD_EQ(inName,"alpha") ) { alpha=inValue.Cast<  ::com::stencyl::utils::motion::TweenFloat >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"scaleXY") ) { scaleXY=inValue.Cast<  ::com::stencyl::utils::motion::TweenFloat2 >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void BitmapTweenProperties_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("xy","\x01","\x69","\x00","\x00"));
	outFields->push(HX_HCSTRING("angle","\xd3","\x43","\xe2","\x22"));
	outFields->push(HX_HCSTRING("alpha","\x5e","\xa7","\x96","\x21"));
	outFields->push(HX_HCSTRING("scaleXY","\x0b","\x52","\x07","\x65"));
	outFields->push(HX_HCSTRING("bmp","\x45","\xbc","\x4a","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo BitmapTweenProperties_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::com::stencyl::utils::motion::TweenFloat2*/ ,(int)offsetof(BitmapTweenProperties_obj,xy),HX_HCSTRING("xy","\x01","\x69","\x00","\x00")},
	{hx::fsObject /*::com::stencyl::utils::motion::TweenFloat*/ ,(int)offsetof(BitmapTweenProperties_obj,angle),HX_HCSTRING("angle","\xd3","\x43","\xe2","\x22")},
	{hx::fsObject /*::com::stencyl::utils::motion::TweenFloat*/ ,(int)offsetof(BitmapTweenProperties_obj,alpha),HX_HCSTRING("alpha","\x5e","\xa7","\x96","\x21")},
	{hx::fsObject /*::com::stencyl::utils::motion::TweenFloat2*/ ,(int)offsetof(BitmapTweenProperties_obj,scaleXY),HX_HCSTRING("scaleXY","\x0b","\x52","\x07","\x65")},
	{hx::fsObject /*::com::stencyl::graphics::BitmapWrapper*/ ,(int)offsetof(BitmapTweenProperties_obj,bmp),HX_HCSTRING("bmp","\x45","\xbc","\x4a","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *BitmapTweenProperties_obj_sStaticStorageInfo = 0;
#endif

static ::String BitmapTweenProperties_obj_sMemberFields[] = {
	HX_HCSTRING("xy","\x01","\x69","\x00","\x00"),
	HX_HCSTRING("angle","\xd3","\x43","\xe2","\x22"),
	HX_HCSTRING("alpha","\x5e","\xa7","\x96","\x21"),
	HX_HCSTRING("scaleXY","\x0b","\x52","\x07","\x65"),
	HX_HCSTRING("bmp","\x45","\xbc","\x4a","\x00"),
	HX_HCSTRING("pause","\xf6","\xd6","\x57","\xbd"),
	HX_HCSTRING("unpause","\xfd","\xcd","\xe8","\xb9"),
	HX_HCSTRING("cancel","\x7a","\xed","\x33","\xb8"),
	HX_HCSTRING("onUpdateXY","\x89","\xfb","\xb0","\x55"),
	HX_HCSTRING("onUpdateAngle","\x2b","\xca","\x64","\x6b"),
	HX_HCSTRING("onUpdateAlpha","\xb6","\x2d","\x19","\x6a"),
	HX_HCSTRING("onUpdateScaleXY","\x63","\x1e","\xfa","\xb7"),
	::String(null()) };

static void BitmapTweenProperties_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(BitmapTweenProperties_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void BitmapTweenProperties_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(BitmapTweenProperties_obj::__mClass,"__mClass");
};

#endif

hx::Class BitmapTweenProperties_obj::__mClass;

void BitmapTweenProperties_obj::__register()
{
	hx::Object *dummy = new BitmapTweenProperties_obj;
	BitmapTweenProperties_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.graphics.BitmapTweenProperties","\xdb","\x6b","\x58","\xd5");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = BitmapTweenProperties_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(BitmapTweenProperties_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< BitmapTweenProperties_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = BitmapTweenProperties_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BitmapTweenProperties_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BitmapTweenProperties_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace graphics
