// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsHingeJoint
#include <com/stencyl/io/mbs/scene/physics/MbsHingeJoint.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsJoint
#include <com/stencyl/io/mbs/scene/physics/MbsJoint.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsField
#include <mbs/core/MbsField.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b3cf8be98a175e99_51_new,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","new",0x254a095d,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.new","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",51,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_46_getMbsType,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","getMbsType",0x3790d805,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.getMbsType","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",46,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_56_allocateNew,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","allocateNew",0xfbd047a0,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.allocateNew","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",56,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_61_getLimit,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","getLimit",0x18a140a8,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.getLimit","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",61,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_66_setLimit,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","setLimit",0xc6fe9a1c,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.setLimit","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",66,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_71_getMotor,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","getMotor",0xb00471e2,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.getMotor","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",71,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_76_setMotor,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","setMotor",0x5e61cb56,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.setMotor","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",76,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_81_getLower,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","getLower",0x1ca01b6e,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.getLower","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",81,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_86_setLower,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","setLower",0xcafd74e2,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.setLower","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",86,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_91_getUpper,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","getUpper",0x4bdf3acf,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.getUpper","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",91,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_96_setUpper,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","setUpper",0xfa3c9443,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.setUpper","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",96,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_101_getTorque,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","getTorque",0x1f0dd4bd,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.getTorque","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",101,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_106_setTorque,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","setTorque",0x025ec0c9,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.setTorque","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",106,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_111_getSpeed,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","getSpeed",0x2509b8f4,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.getSpeed","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",111,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_116_setSpeed,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","setSpeed",0xd3671268,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.setSpeed","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",116,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_27_initializeType,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","initializeType",0xdd8c564d,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.initializeType","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",27,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_22_initializeType,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","initializeType",0xdd8c564d,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.initializeType","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",22,0xdcc4dd75)
HX_LOCAL_STACK_FRAME(_hx_pos_b3cf8be98a175e99_41_new_MbsHingeJoint_list,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint","new_MbsHingeJoint_list",0x11d02f62,"com.stencyl.io.mbs.scene.physics.MbsHingeJoint.new_MbsHingeJoint_list","com/stencyl/io/mbs/scene/physics/MbsHingeJoint.hx",41,0xdcc4dd75)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace scene{
namespace physics{

void MbsHingeJoint_obj::__construct(::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_51_new)
HXDLIN(  51)		super::__construct(data);
            	}

Dynamic MbsHingeJoint_obj::__CreateEmpty() { return new MbsHingeJoint_obj; }

void *MbsHingeJoint_obj::_hx_vtable = 0;

Dynamic MbsHingeJoint_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsHingeJoint_obj > _hx_result = new MbsHingeJoint_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsHingeJoint_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x451eccb5) {
		if (inClassId<=(int)0x17b72d64) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x17b72d64;
		} else {
			return inClassId==(int)0x451eccb5;
		}
	} else {
		return inClassId==(int)0x6c0033f4;
	}
}

 ::mbs::core::MbsType MbsHingeJoint_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_46_getMbsType)
HXDLIN(  46)		return ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT;
            	}


void MbsHingeJoint_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_56_allocateNew)
HXDLIN(  56)		::Dynamic _hx_tmp = this->data;
HXDLIN(  56)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT->getSize()));
            	}


bool MbsHingeJoint_obj::getLimit(){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_61_getLimit)
HXDLIN(  61)		::Dynamic _hx_tmp = this->data;
HXDLIN(  61)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::limit->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHingeJoint_obj,getLimit,return )

void MbsHingeJoint_obj::setLimit(bool _val){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_66_setLimit)
HXDLIN(  66)		::Dynamic _hx_tmp = this->data;
HXDLIN(  66)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::limit->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsHingeJoint_obj,setLimit,(void))

bool MbsHingeJoint_obj::getMotor(){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_71_getMotor)
HXDLIN(  71)		::Dynamic _hx_tmp = this->data;
HXDLIN(  71)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::motor->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHingeJoint_obj,getMotor,return )

void MbsHingeJoint_obj::setMotor(bool _val){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_76_setMotor)
HXDLIN(  76)		::Dynamic _hx_tmp = this->data;
HXDLIN(  76)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::motor->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsHingeJoint_obj,setMotor,(void))

Float MbsHingeJoint_obj::getLower(){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_81_getLower)
HXDLIN(  81)		::Dynamic _hx_tmp = this->data;
HXDLIN(  81)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::lower->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHingeJoint_obj,getLower,return )

void MbsHingeJoint_obj::setLower(Float _val){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_86_setLower)
HXDLIN(  86)		::Dynamic _hx_tmp = this->data;
HXDLIN(  86)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::lower->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsHingeJoint_obj,setLower,(void))

Float MbsHingeJoint_obj::getUpper(){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_91_getUpper)
HXDLIN(  91)		::Dynamic _hx_tmp = this->data;
HXDLIN(  91)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::upper->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHingeJoint_obj,getUpper,return )

void MbsHingeJoint_obj::setUpper(Float _val){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_96_setUpper)
HXDLIN(  96)		::Dynamic _hx_tmp = this->data;
HXDLIN(  96)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::upper->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsHingeJoint_obj,setUpper,(void))

Float MbsHingeJoint_obj::getTorque(){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_101_getTorque)
HXDLIN( 101)		::Dynamic _hx_tmp = this->data;
HXDLIN( 101)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::torque->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHingeJoint_obj,getTorque,return )

void MbsHingeJoint_obj::setTorque(Float _val){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_106_setTorque)
HXDLIN( 106)		::Dynamic _hx_tmp = this->data;
HXDLIN( 106)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::torque->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsHingeJoint_obj,setTorque,(void))

Float MbsHingeJoint_obj::getSpeed(){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_111_getSpeed)
HXDLIN( 111)		::Dynamic _hx_tmp = this->data;
HXDLIN( 111)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::speed->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsHingeJoint_obj,getSpeed,return )

void MbsHingeJoint_obj::setSpeed(Float _val){
            	HX_STACKFRAME(&_hx_pos_b3cf8be98a175e99_116_setSpeed)
HXDLIN( 116)		::Dynamic _hx_tmp = this->data;
HXDLIN( 116)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::speed->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsHingeJoint_obj,setSpeed,(void))

 ::mbs::core::MbsField MbsHingeJoint_obj::limit;

 ::mbs::core::MbsField MbsHingeJoint_obj::motor;

 ::mbs::core::MbsField MbsHingeJoint_obj::lower;

 ::mbs::core::MbsField MbsHingeJoint_obj::upper;

 ::mbs::core::MbsField MbsHingeJoint_obj::torque;

 ::mbs::core::MbsField MbsHingeJoint_obj::speed;

 ::mbs::core::ComposedType MbsHingeJoint_obj::MBS_HINGE_JOINT;

void MbsHingeJoint_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_b3cf8be98a175e99_27_initializeType)
HXLINE(  27)			return  ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_b3cf8be98a175e99_22_initializeType)
HXLINE(  23)		if (hx::IsNotNull( ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT )) {
HXLINE(  23)			return;
            		}
HXLINE(  24)		::com::stencyl::io::mbs::scene::physics::MbsJoint_obj::initializeType();
HXLINE(  26)		::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsHingeJoint",9d,98,3e,3a));
HXLINE(  27)		::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT->setInstantiator( ::Dynamic(new _hx_Closure_0()));
HXLINE(  28)		::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT->inherit(::com::stencyl::io::mbs::scene::physics::MbsJoint_obj::MBS_JOINT);
HXLINE(  30)		::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::limit = ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT->createField(HX_("limit",3b,1f,01,75),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  31)		::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::motor = ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT->createField(HX_("motor",75,50,64,0c),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  32)		::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::lower = ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT->createField(HX_("lower",01,fa,ff,78),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  33)		::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::upper = ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT->createField(HX_("upper",62,19,3f,a8),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  34)		::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::torque = ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT->createField(HX_("torque",ca,b6,90,96),::mbs::core::MbsTypes_obj::FLOAT);
HXLINE(  35)		::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::speed = ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT->createField(HX_("speed",87,97,69,81),::mbs::core::MbsTypes_obj::FLOAT);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsHingeJoint_obj,initializeType,(void))

 ::mbs::io::MbsList MbsHingeJoint_obj::new_MbsHingeJoint_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_b3cf8be98a175e99_41_new_MbsHingeJoint_list)
HXDLIN(  41)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT;
HXDLIN(  41)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsHingeJoint_obj,new_MbsHingeJoint_list,return )


hx::ObjectPtr< MbsHingeJoint_obj > MbsHingeJoint_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsHingeJoint_obj > __this = new MbsHingeJoint_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsHingeJoint_obj > MbsHingeJoint_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsHingeJoint_obj *__this = (MbsHingeJoint_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsHingeJoint_obj), true, "com.stencyl.io.mbs.scene.physics.MbsHingeJoint"));
	*(void **)__this = MbsHingeJoint_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsHingeJoint_obj::MbsHingeJoint_obj()
{
}

hx::Val MbsHingeJoint_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"getLimit") ) { return hx::Val( getLimit_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLimit") ) { return hx::Val( setLimit_dyn() ); }
		if (HX_FIELD_EQ(inName,"getMotor") ) { return hx::Val( getMotor_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMotor") ) { return hx::Val( setMotor_dyn() ); }
		if (HX_FIELD_EQ(inName,"getLower") ) { return hx::Val( getLower_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLower") ) { return hx::Val( setLower_dyn() ); }
		if (HX_FIELD_EQ(inName,"getUpper") ) { return hx::Val( getUpper_dyn() ); }
		if (HX_FIELD_EQ(inName,"setUpper") ) { return hx::Val( setUpper_dyn() ); }
		if (HX_FIELD_EQ(inName,"getSpeed") ) { return hx::Val( getSpeed_dyn() ); }
		if (HX_FIELD_EQ(inName,"setSpeed") ) { return hx::Val( setSpeed_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getTorque") ) { return hx::Val( getTorque_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTorque") ) { return hx::Val( setTorque_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsHingeJoint_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"limit") ) { outValue = ( limit ); return true; }
		if (HX_FIELD_EQ(inName,"motor") ) { outValue = ( motor ); return true; }
		if (HX_FIELD_EQ(inName,"lower") ) { outValue = ( lower ); return true; }
		if (HX_FIELD_EQ(inName,"upper") ) { outValue = ( upper ); return true; }
		if (HX_FIELD_EQ(inName,"speed") ) { outValue = ( speed ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"torque") ) { outValue = ( torque ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"MBS_HINGE_JOINT") ) { outValue = ( MBS_HINGE_JOINT ); return true; }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"new_MbsHingeJoint_list") ) { outValue = new_MbsHingeJoint_list_dyn(); return true; }
	}
	return false;
}

bool MbsHingeJoint_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"limit") ) { limit=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"motor") ) { motor=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"lower") ) { lower=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"upper") ) { upper=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"speed") ) { speed=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"torque") ) { torque=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"MBS_HINGE_JOINT") ) { MBS_HINGE_JOINT=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MbsHingeJoint_obj_sMemberStorageInfo = 0;
static hx::StaticInfo MbsHingeJoint_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsHingeJoint_obj::limit,HX_HCSTRING("limit","\x3b","\x1f","\x01","\x75")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsHingeJoint_obj::motor,HX_HCSTRING("motor","\x75","\x50","\x64","\x0c")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsHingeJoint_obj::lower,HX_HCSTRING("lower","\x01","\xfa","\xff","\x78")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsHingeJoint_obj::upper,HX_HCSTRING("upper","\x62","\x19","\x3f","\xa8")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsHingeJoint_obj::torque,HX_HCSTRING("torque","\xca","\xb6","\x90","\x96")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsHingeJoint_obj::speed,HX_HCSTRING("speed","\x87","\x97","\x69","\x81")},
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsHingeJoint_obj::MBS_HINGE_JOINT,HX_HCSTRING("MBS_HINGE_JOINT","\x95","\xa2","\x6d","\x3b")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsHingeJoint_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	HX_HCSTRING("getLimit","\xc5","\x2e","\xd8","\xd4"),
	HX_HCSTRING("setLimit","\x39","\x88","\x35","\x83"),
	HX_HCSTRING("getMotor","\xff","\x5f","\x3b","\x6c"),
	HX_HCSTRING("setMotor","\x73","\xb9","\x98","\x1a"),
	HX_HCSTRING("getLower","\x8b","\x09","\xd7","\xd8"),
	HX_HCSTRING("setLower","\xff","\x62","\x34","\x87"),
	HX_HCSTRING("getUpper","\xec","\x28","\x16","\x08"),
	HX_HCSTRING("setUpper","\x60","\x82","\x73","\xb6"),
	HX_HCSTRING("getTorque","\x00","\x40","\xe7","\x12"),
	HX_HCSTRING("setTorque","\x0c","\x2c","\x38","\xf6"),
	HX_HCSTRING("getSpeed","\x11","\xa7","\x40","\xe1"),
	HX_HCSTRING("setSpeed","\x85","\x00","\x9e","\x8f"),
	::String(null()) };

static void MbsHingeJoint_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsHingeJoint_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsHingeJoint_obj::limit,"limit");
	HX_MARK_MEMBER_NAME(MbsHingeJoint_obj::motor,"motor");
	HX_MARK_MEMBER_NAME(MbsHingeJoint_obj::lower,"lower");
	HX_MARK_MEMBER_NAME(MbsHingeJoint_obj::upper,"upper");
	HX_MARK_MEMBER_NAME(MbsHingeJoint_obj::torque,"torque");
	HX_MARK_MEMBER_NAME(MbsHingeJoint_obj::speed,"speed");
	HX_MARK_MEMBER_NAME(MbsHingeJoint_obj::MBS_HINGE_JOINT,"MBS_HINGE_JOINT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsHingeJoint_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsHingeJoint_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsHingeJoint_obj::limit,"limit");
	HX_VISIT_MEMBER_NAME(MbsHingeJoint_obj::motor,"motor");
	HX_VISIT_MEMBER_NAME(MbsHingeJoint_obj::lower,"lower");
	HX_VISIT_MEMBER_NAME(MbsHingeJoint_obj::upper,"upper");
	HX_VISIT_MEMBER_NAME(MbsHingeJoint_obj::torque,"torque");
	HX_VISIT_MEMBER_NAME(MbsHingeJoint_obj::speed,"speed");
	HX_VISIT_MEMBER_NAME(MbsHingeJoint_obj::MBS_HINGE_JOINT,"MBS_HINGE_JOINT");
};

#endif

hx::Class MbsHingeJoint_obj::__mClass;

static ::String MbsHingeJoint_obj_sStaticFields[] = {
	HX_HCSTRING("limit","\x3b","\x1f","\x01","\x75"),
	HX_HCSTRING("motor","\x75","\x50","\x64","\x0c"),
	HX_HCSTRING("lower","\x01","\xfa","\xff","\x78"),
	HX_HCSTRING("upper","\x62","\x19","\x3f","\xa8"),
	HX_HCSTRING("torque","\xca","\xb6","\x90","\x96"),
	HX_HCSTRING("speed","\x87","\x97","\x69","\x81"),
	HX_HCSTRING("MBS_HINGE_JOINT","\x95","\xa2","\x6d","\x3b"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsHingeJoint_list","\x3f","\xb6","\x8c","\x4f"),
	::String(null())
};

void MbsHingeJoint_obj::__register()
{
	hx::Object *dummy = new MbsHingeJoint_obj;
	MbsHingeJoint_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.scene.physics.MbsHingeJoint","\xeb","\x16","\x21","\xc2");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsHingeJoint_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsHingeJoint_obj::__SetStatic;
	__mClass->mMarkFunc = MbsHingeJoint_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsHingeJoint_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsHingeJoint_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsHingeJoint_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsHingeJoint_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsHingeJoint_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsHingeJoint_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace scene
} // end namespace physics
