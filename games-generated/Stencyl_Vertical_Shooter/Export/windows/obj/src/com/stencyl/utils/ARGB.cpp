// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_ARGB
#include <com/stencyl/utils/ARGB.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_143_new,"com.stencyl.utils.ARGB","new",0xfc201eea,"com.stencyl.utils.ARGB.new","com/stencyl/utils/ARGB.hx",143,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_151_set,"com.stencyl.utils.ARGB","set",0xfc23ea2c,"com.stencyl.utils.ARGB.set","com/stencyl/utils/ARGB.hx",151,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_155_lerp,"com.stencyl.utils.ARGB","lerp",0x9ea87cad,"com.stencyl.utils.ARGB.lerp","com/stencyl/utils/ARGB.hx",155,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_163_getA8,"com.stencyl.utils.ARGB","getA8",0x53c50ff7,"com.stencyl.utils.ARGB.getA8","com/stencyl/utils/ARGB.hx",163,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_165_getR8,"com.stencyl.utils.ARGB","getR8",0x53c51ec6,"com.stencyl.utils.ARGB.getR8","com/stencyl/utils/ARGB.hx",165,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_167_getG8,"com.stencyl.utils.ARGB","getG8",0x53c51531,"com.stencyl.utils.ARGB.getG8","com/stencyl/utils/ARGB.hx",167,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_169_getB8,"com.stencyl.utils.ARGB","getB8",0x53c510d6,"com.stencyl.utils.ARGB.getB8","com/stencyl/utils/ARGB.hx",169,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_172_get24,"com.stencyl.utils.ARGB","get24",0x53c502e2,"com.stencyl.utils.ARGB.get24","com/stencyl/utils/ARGB.hx",172,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_174_set24,"com.stencyl.utils.ARGB","set24",0x3c93f8ee,"com.stencyl.utils.ARGB.set24","com/stencyl/utils/ARGB.hx",174,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_177_get32,"com.stencyl.utils.ARGB","get32",0x53c503bf,"com.stencyl.utils.ARGB.get32","com/stencyl/utils/ARGB.hx",177,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_179_set32,"com.stencyl.utils.ARGB","set32",0x3c93f9cb,"com.stencyl.utils.ARGB.set32","com/stencyl/utils/ARGB.hx",179,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_183_copy,"com.stencyl.utils.ARGB","copy",0x98bd25eb,"com.stencyl.utils.ARGB.copy","com/stencyl/utils/ARGB.hx",183,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_63_setARGBi,"com.stencyl.utils.ARGB","setARGBi",0xe29503f1,"com.stencyl.utils.ARGB.setARGBi","com/stencyl/utils/ARGB.hx",63,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_72_setARGBf,"com.stencyl.utils.ARGB","setARGBf",0xe29503ee,"com.stencyl.utils.ARGB.setARGBf","com/stencyl/utils/ARGB.hx",72,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_83_toARGB,"com.stencyl.utils.ARGB","toARGB",0xcba577fd,"com.stencyl.utils.ARGB.toARGB","com/stencyl/utils/ARGB.hx",83,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_87_getRGB,"com.stencyl.utils.ARGB","getRGB",0xf8b5dbcd,"com.stencyl.utils.ARGB.getRGB","com/stencyl/utils/ARGB.hx",87,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_89_setRGB,"com.stencyl.utils.ARGB","setRGB",0xc4fe3041,"com.stencyl.utils.ARGB.setRGB","com/stencyl/utils/ARGB.hx",89,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_92_getA,"com.stencyl.utils.ARGB","getA",0x9b5a6d21,"com.stencyl.utils.ARGB.getA","com/stencyl/utils/ARGB.hx",92,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_94_getAf,"com.stencyl.utils.ARGB","getAf",0x53c51025,"com.stencyl.utils.ARGB.getAf","com/stencyl/utils/ARGB.hx",94,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_97_getR,"com.stencyl.utils.ARGB","getR",0x9b5a6d32,"com.stencyl.utils.ARGB.getR","com/stencyl/utils/ARGB.hx",97,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_99_getRf,"com.stencyl.utils.ARGB","getRf",0x53c51ef4,"com.stencyl.utils.ARGB.getRf","com/stencyl/utils/ARGB.hx",99,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_102_getG,"com.stencyl.utils.ARGB","getG",0x9b5a6d27,"com.stencyl.utils.ARGB.getG","com/stencyl/utils/ARGB.hx",102,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_104_getGf,"com.stencyl.utils.ARGB","getGf",0x53c5155f,"com.stencyl.utils.ARGB.getGf","com/stencyl/utils/ARGB.hx",104,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_107_getB,"com.stencyl.utils.ARGB","getB",0x9b5a6d22,"com.stencyl.utils.ARGB.getB","com/stencyl/utils/ARGB.hx",107,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_109_getBf,"com.stencyl.utils.ARGB","getBf",0x53c51104,"com.stencyl.utils.ARGB.getBf","com/stencyl/utils/ARGB.hx",109,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_112_setA,"com.stencyl.utils.ARGB","setA",0xa348fc95,"com.stencyl.utils.ARGB.setA","com/stencyl/utils/ARGB.hx",112,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_114_setAf,"com.stencyl.utils.ARGB","setAf",0x3c940631,"com.stencyl.utils.ARGB.setAf","com/stencyl/utils/ARGB.hx",114,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_117_setR,"com.stencyl.utils.ARGB","setR",0xa348fca6,"com.stencyl.utils.ARGB.setR","com/stencyl/utils/ARGB.hx",117,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_119_setRf,"com.stencyl.utils.ARGB","setRf",0x3c941500,"com.stencyl.utils.ARGB.setRf","com/stencyl/utils/ARGB.hx",119,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_122_setG,"com.stencyl.utils.ARGB","setG",0xa348fc9b,"com.stencyl.utils.ARGB.setG","com/stencyl/utils/ARGB.hx",122,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_124_setGf,"com.stencyl.utils.ARGB","setGf",0x3c940b6b,"com.stencyl.utils.ARGB.setGf","com/stencyl/utils/ARGB.hx",124,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_127_setB,"com.stencyl.utils.ARGB","setB",0xa348fc96,"com.stencyl.utils.ARGB.setB","com/stencyl/utils/ARGB.hx",127,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_129_setBf,"com.stencyl.utils.ARGB","setBf",0x3c940710,"com.stencyl.utils.ARGB.setBf","com/stencyl/utils/ARGB.hx",129,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_48_boot,"com.stencyl.utils.ARGB","boot",0x9813ee68,"com.stencyl.utils.ARGB.boot","com/stencyl/utils/ARGB.hx",48,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_49_boot,"com.stencyl.utils.ARGB","boot",0x9813ee68,"com.stencyl.utils.ARGB.boot","com/stencyl/utils/ARGB.hx",49,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_50_boot,"com.stencyl.utils.ARGB","boot",0x9813ee68,"com.stencyl.utils.ARGB.boot","com/stencyl/utils/ARGB.hx",50,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_51_boot,"com.stencyl.utils.ARGB","boot",0x9813ee68,"com.stencyl.utils.ARGB.boot","com/stencyl/utils/ARGB.hx",51,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_52_boot,"com.stencyl.utils.ARGB","boot",0x9813ee68,"com.stencyl.utils.ARGB.boot","com/stencyl/utils/ARGB.hx",52,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_53_boot,"com.stencyl.utils.ARGB","boot",0x9813ee68,"com.stencyl.utils.ARGB.boot","com/stencyl/utils/ARGB.hx",53,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_54_boot,"com.stencyl.utils.ARGB","boot",0x9813ee68,"com.stencyl.utils.ARGB.boot","com/stencyl/utils/ARGB.hx",54,0x9768bba3)
HX_LOCAL_STACK_FRAME(_hx_pos_84a2df0e6dbe6948_55_boot,"com.stencyl.utils.ARGB","boot",0x9813ee68,"com.stencyl.utils.ARGB.boot","com/stencyl/utils/ARGB.hx",55,0x9768bba3)
namespace com{
namespace stencyl{
namespace utils{

void ARGB_obj::__construct( ::Dynamic __o_a, ::Dynamic __o_r, ::Dynamic __o_g, ::Dynamic __o_b){
 ::Dynamic a = __o_a.Default(((Float)0.0));
 ::Dynamic r = __o_r.Default(((Float)0.0));
 ::Dynamic g = __o_g.Default(((Float)0.0));
 ::Dynamic b = __o_b.Default(((Float)0.0));
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_143_new)
HXLINE( 144)		this->a = a;
HXLINE( 145)		this->r = r;
HXLINE( 146)		this->g = g;
HXLINE( 147)		this->b = b;
            	}

Dynamic ARGB_obj::__CreateEmpty() { return new ARGB_obj; }

void *ARGB_obj::_hx_vtable = 0;

Dynamic ARGB_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ARGB_obj > _hx_result = new ARGB_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool ARGB_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x213399ae;
}

void ARGB_obj::set(Float a,Float r,Float g,Float b){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_151_set)
HXDLIN( 151)		this->a = a;
HXDLIN( 151)		this->r = r;
HXDLIN( 151)		this->g = g;
HXDLIN( 151)		this->b = b;
            	}


HX_DEFINE_DYNAMIC_FUNC4(ARGB_obj,set,(void))

void ARGB_obj::lerp( ::com::stencyl::utils::ARGB input,Float t, ::com::stencyl::utils::ARGB output){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_155_lerp)
HXLINE( 156)		Float _hx_tmp = this->a;
HXDLIN( 156)		output->a = (_hx_tmp + ((input->a - this->a) * t));
HXLINE( 157)		Float _hx_tmp1 = this->r;
HXDLIN( 157)		output->r = (_hx_tmp1 + ((input->r - this->r) * t));
HXLINE( 158)		Float _hx_tmp2 = this->g;
HXDLIN( 158)		output->g = (_hx_tmp2 + ((input->g - this->g) * t));
HXLINE( 159)		Float _hx_tmp3 = this->b;
HXDLIN( 159)		output->b = (_hx_tmp3 + ((input->b - this->b) * t));
            	}


HX_DEFINE_DYNAMIC_FUNC3(ARGB_obj,lerp,(void))

int ARGB_obj::getA8(){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_163_getA8)
HXDLIN( 163)		Float x = (this->a * (int)255);
HXDLIN( 163)		Float _hx_tmp;
HXDLIN( 163)		if ((x > (int)0)) {
HXDLIN( 163)			_hx_tmp = (x + ((Float).5));
            		}
            		else {
HXDLIN( 163)			if ((x < (int)0)) {
HXDLIN( 163)				_hx_tmp = (x - ((Float).5));
            			}
            			else {
HXDLIN( 163)				_hx_tmp = (int)0;
            			}
            		}
HXDLIN( 163)		return ::Std_obj::_hx_int(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ARGB_obj,getA8,return )

int ARGB_obj::getR8(){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_165_getR8)
HXDLIN( 165)		Float x = (this->r * (int)255);
HXDLIN( 165)		Float _hx_tmp;
HXDLIN( 165)		if ((x > (int)0)) {
HXDLIN( 165)			_hx_tmp = (x + ((Float).5));
            		}
            		else {
HXDLIN( 165)			if ((x < (int)0)) {
HXDLIN( 165)				_hx_tmp = (x - ((Float).5));
            			}
            			else {
HXDLIN( 165)				_hx_tmp = (int)0;
            			}
            		}
HXDLIN( 165)		return ::Std_obj::_hx_int(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ARGB_obj,getR8,return )

int ARGB_obj::getG8(){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_167_getG8)
HXDLIN( 167)		Float x = (this->g * (int)255);
HXDLIN( 167)		Float _hx_tmp;
HXDLIN( 167)		if ((x > (int)0)) {
HXDLIN( 167)			_hx_tmp = (x + ((Float).5));
            		}
            		else {
HXDLIN( 167)			if ((x < (int)0)) {
HXDLIN( 167)				_hx_tmp = (x - ((Float).5));
            			}
            			else {
HXDLIN( 167)				_hx_tmp = (int)0;
            			}
            		}
HXDLIN( 167)		return ::Std_obj::_hx_int(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ARGB_obj,getG8,return )

int ARGB_obj::getB8(){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_169_getB8)
HXDLIN( 169)		Float x = (this->b * (int)255);
HXDLIN( 169)		Float _hx_tmp;
HXDLIN( 169)		if ((x > (int)0)) {
HXDLIN( 169)			_hx_tmp = (x + ((Float).5));
            		}
            		else {
HXDLIN( 169)			if ((x < (int)0)) {
HXDLIN( 169)				_hx_tmp = (x - ((Float).5));
            			}
            			else {
HXDLIN( 169)				_hx_tmp = (int)0;
            			}
            		}
HXDLIN( 169)		return ::Std_obj::_hx_int(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ARGB_obj,getB8,return )

int ARGB_obj::get24(){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_172_get24)
HXDLIN( 172)		Float x = (this->r * (int)255);
HXDLIN( 172)		Float _hx_tmp;
HXDLIN( 172)		if ((x > (int)0)) {
HXDLIN( 172)			_hx_tmp = (x + ((Float).5));
            		}
            		else {
HXDLIN( 172)			if ((x < (int)0)) {
HXDLIN( 172)				_hx_tmp = (x - ((Float).5));
            			}
            			else {
HXDLIN( 172)				_hx_tmp = (int)0;
            			}
            		}
HXDLIN( 172)		int _hx_tmp1 = ((int)::Std_obj::_hx_int(_hx_tmp) << (int)(int)16);
HXDLIN( 172)		Float x1 = (this->g * (int)255);
HXDLIN( 172)		Float _hx_tmp2;
HXDLIN( 172)		if ((x1 > (int)0)) {
HXDLIN( 172)			_hx_tmp2 = (x1 + ((Float).5));
            		}
            		else {
HXDLIN( 172)			if ((x1 < (int)0)) {
HXDLIN( 172)				_hx_tmp2 = (x1 - ((Float).5));
            			}
            			else {
HXDLIN( 172)				_hx_tmp2 = (int)0;
            			}
            		}
HXDLIN( 172)		int _hx_tmp3 = ((int)_hx_tmp1 | (int)((int)::Std_obj::_hx_int(_hx_tmp2) << (int)(int)8));
HXDLIN( 172)		Float x2 = (this->b * (int)255);
HXDLIN( 172)		Float _hx_tmp4;
HXDLIN( 172)		if ((x2 > (int)0)) {
HXDLIN( 172)			_hx_tmp4 = (x2 + ((Float).5));
            		}
            		else {
HXDLIN( 172)			if ((x2 < (int)0)) {
HXDLIN( 172)				_hx_tmp4 = (x2 - ((Float).5));
            			}
            			else {
HXDLIN( 172)				_hx_tmp4 = (int)0;
            			}
            		}
HXDLIN( 172)		return ((int)_hx_tmp3 | (int)::Std_obj::_hx_int(_hx_tmp4));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ARGB_obj,get24,return )

void ARGB_obj::set24(int r,int g,int b){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_174_set24)
HXDLIN( 174)		this->a = this->a;
HXDLIN( 174)		this->r = (((int)r & (int)(int)255) * ((Float)0.00392156862745098));
HXDLIN( 174)		this->g = (((int)g & (int)(int)255) * ((Float)0.00392156862745098));
HXDLIN( 174)		this->b = (((int)b & (int)(int)255) * ((Float)0.00392156862745098));
            	}


HX_DEFINE_DYNAMIC_FUNC3(ARGB_obj,set24,(void))

int ARGB_obj::get32(){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_177_get32)
HXDLIN( 177)		Float x = (this->a * (int)255);
HXDLIN( 177)		Float _hx_tmp;
HXDLIN( 177)		if ((x > (int)0)) {
HXDLIN( 177)			_hx_tmp = (x + ((Float).5));
            		}
            		else {
HXDLIN( 177)			if ((x < (int)0)) {
HXDLIN( 177)				_hx_tmp = (x - ((Float).5));
            			}
            			else {
HXDLIN( 177)				_hx_tmp = (int)0;
            			}
            		}
HXDLIN( 177)		int _hx_tmp1 = ((int)::Std_obj::_hx_int(_hx_tmp) << (int)(int)24);
HXDLIN( 177)		Float x1 = (this->r * (int)255);
HXDLIN( 177)		Float _hx_tmp2;
HXDLIN( 177)		if ((x1 > (int)0)) {
HXDLIN( 177)			_hx_tmp2 = (x1 + ((Float).5));
            		}
            		else {
HXDLIN( 177)			if ((x1 < (int)0)) {
HXDLIN( 177)				_hx_tmp2 = (x1 - ((Float).5));
            			}
            			else {
HXDLIN( 177)				_hx_tmp2 = (int)0;
            			}
            		}
HXDLIN( 177)		int _hx_tmp3 = ((int)_hx_tmp1 | (int)((int)::Std_obj::_hx_int(_hx_tmp2) << (int)(int)16));
HXDLIN( 177)		Float x2 = (this->g * (int)255);
HXDLIN( 177)		Float _hx_tmp4;
HXDLIN( 177)		if ((x2 > (int)0)) {
HXDLIN( 177)			_hx_tmp4 = (x2 + ((Float).5));
            		}
            		else {
HXDLIN( 177)			if ((x2 < (int)0)) {
HXDLIN( 177)				_hx_tmp4 = (x2 - ((Float).5));
            			}
            			else {
HXDLIN( 177)				_hx_tmp4 = (int)0;
            			}
            		}
HXDLIN( 177)		int _hx_tmp5 = ((int)_hx_tmp3 | (int)((int)::Std_obj::_hx_int(_hx_tmp4) << (int)(int)8));
HXDLIN( 177)		Float x3 = (this->b * (int)255);
HXDLIN( 177)		Float _hx_tmp6;
HXDLIN( 177)		if ((x3 > (int)0)) {
HXDLIN( 177)			_hx_tmp6 = (x3 + ((Float).5));
            		}
            		else {
HXDLIN( 177)			if ((x3 < (int)0)) {
HXDLIN( 177)				_hx_tmp6 = (x3 - ((Float).5));
            			}
            			else {
HXDLIN( 177)				_hx_tmp6 = (int)0;
            			}
            		}
HXDLIN( 177)		return ((int)_hx_tmp5 | (int)::Std_obj::_hx_int(_hx_tmp6));
            	}


HX_DEFINE_DYNAMIC_FUNC0(ARGB_obj,get32,return )

void ARGB_obj::set32(int a,int r,int g,int b){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_179_set32)
HXDLIN( 179)		this->a = (((int)a & (int)(int)255) * ((Float)0.00392156862745098));
HXDLIN( 179)		this->r = (((int)r & (int)(int)255) * ((Float)0.00392156862745098));
HXDLIN( 179)		this->g = (((int)g & (int)(int)255) * ((Float)0.00392156862745098));
HXDLIN( 179)		this->b = (((int)b & (int)(int)255) * ((Float)0.00392156862745098));
            	}


HX_DEFINE_DYNAMIC_FUNC4(ARGB_obj,set32,(void))

 ::com::stencyl::utils::ARGB ARGB_obj::copy( ::com::stencyl::utils::ARGB target){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_183_copy)
HXLINE( 184)		target->a = this->a;
HXLINE( 185)		target->r = this->r;
HXLINE( 186)		target->g = this->g;
HXLINE( 187)		target->b = this->b;
HXLINE( 188)		return target;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ARGB_obj,copy,return )

int ARGB_obj::BLACK;

int ARGB_obj::WHITE;

int ARGB_obj::RED;

int ARGB_obj::GREEN;

int ARGB_obj::BLUE;

int ARGB_obj::CYAN;

int ARGB_obj::MAGENTA;

int ARGB_obj::YELLOW;

int ARGB_obj::setARGBi(int a,int r,int g,int b){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_63_setARGBi)
HXDLIN(  63)		return ((int)((int)((int)((int)((int)a & (int)(int)255) << (int)(int)24) | (int)((int)((int)r & (int)(int)255) << (int)(int)16)) | (int)((int)((int)g & (int)(int)255) << (int)(int)8)) | (int)((int)b & (int)(int)255));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(ARGB_obj,setARGBi,return )

int ARGB_obj::setARGBf(Float a,Float r,Float g,Float b){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_72_setARGBf)
HXLINE(  74)		Float x;
HXDLIN(  74)		if ((a < (int)0)) {
HXLINE(  74)			x = (int)0;
            		}
            		else {
HXLINE(  74)			if ((a > (int)1)) {
HXLINE(  74)				x = (int)1;
            			}
            			else {
HXLINE(  74)				x = a;
            			}
            		}
HXDLIN(  74)		Float x1 = (x * (int)255);
HXDLIN(  74)		Float a1;
HXDLIN(  74)		if ((x1 > (int)0)) {
HXLINE(  74)			a1 = (x1 + ((Float).5));
            		}
            		else {
HXLINE(  74)			if ((x1 < (int)0)) {
HXLINE(  74)				a1 = (x1 - ((Float).5));
            			}
            			else {
HXLINE(  74)				a1 = (int)0;
            			}
            		}
HXLINE(  72)		int a2 = ::Std_obj::_hx_int(a1);
HXLINE(  75)		Float x2;
HXDLIN(  75)		if ((r < (int)0)) {
HXLINE(  75)			x2 = (int)0;
            		}
            		else {
HXLINE(  75)			if ((r > (int)1)) {
HXLINE(  75)				x2 = (int)1;
            			}
            			else {
HXLINE(  75)				x2 = r;
            			}
            		}
HXDLIN(  75)		Float x3 = (x2 * (int)255);
HXDLIN(  75)		Float r1;
HXDLIN(  75)		if ((x3 > (int)0)) {
HXLINE(  75)			r1 = (x3 + ((Float).5));
            		}
            		else {
HXLINE(  75)			if ((x3 < (int)0)) {
HXLINE(  75)				r1 = (x3 - ((Float).5));
            			}
            			else {
HXLINE(  75)				r1 = (int)0;
            			}
            		}
HXLINE(  72)		int r2 = ::Std_obj::_hx_int(r1);
HXLINE(  76)		Float x4;
HXDLIN(  76)		if ((g < (int)0)) {
HXLINE(  76)			x4 = (int)0;
            		}
            		else {
HXLINE(  76)			if ((g > (int)1)) {
HXLINE(  76)				x4 = (int)1;
            			}
            			else {
HXLINE(  76)				x4 = g;
            			}
            		}
HXDLIN(  76)		Float x5 = (x4 * (int)255);
HXDLIN(  76)		Float g1;
HXDLIN(  76)		if ((x5 > (int)0)) {
HXLINE(  76)			g1 = (x5 + ((Float).5));
            		}
            		else {
HXLINE(  76)			if ((x5 < (int)0)) {
HXLINE(  76)				g1 = (x5 - ((Float).5));
            			}
            			else {
HXLINE(  76)				g1 = (int)0;
            			}
            		}
HXLINE(  72)		int g2 = ::Std_obj::_hx_int(g1);
HXLINE(  77)		Float x6;
HXDLIN(  77)		if ((b < (int)0)) {
HXLINE(  77)			x6 = (int)0;
            		}
            		else {
HXLINE(  77)			if ((b > (int)1)) {
HXLINE(  77)				x6 = (int)1;
            			}
            			else {
HXLINE(  77)				x6 = b;
            			}
            		}
HXDLIN(  77)		Float x7 = (x6 * (int)255);
HXDLIN(  77)		Float b1;
HXDLIN(  77)		if ((x7 > (int)0)) {
HXLINE(  77)			b1 = (x7 + ((Float).5));
            		}
            		else {
HXLINE(  77)			if ((x7 < (int)0)) {
HXLINE(  77)				b1 = (x7 - ((Float).5));
            			}
            			else {
HXLINE(  77)				b1 = (int)0;
            			}
            		}
HXLINE(  72)		return ((int)((int)((int)((int)((int)a2 & (int)(int)255) << (int)(int)24) | (int)((int)((int)r2 & (int)(int)255) << (int)(int)16)) | (int)((int)((int)g2 & (int)(int)255) << (int)(int)8)) | (int)((int)::Std_obj::_hx_int(b1) & (int)(int)255));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(ARGB_obj,setARGBf,return )

 ::com::stencyl::utils::ARGB ARGB_obj::toARGB(int x){
            	HX_GC_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_83_toARGB)
HXDLIN(  83)		return  ::com::stencyl::utils::ARGB_obj::__alloc( HX_CTX ,(hx::UShr(x,(int)24) * ((Float)0.00392156862745098)),(((int)hx::UShr(x,(int)16) & (int)(int)255) * ((Float)0.00392156862745098)),(((int)hx::UShr(x,(int)8) & (int)(int)255) * ((Float)0.00392156862745098)),(((int)x & (int)(int)255) * ((Float)0.00392156862745098)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ARGB_obj,toARGB,return )

int ARGB_obj::getRGB(int x){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_87_getRGB)
HXDLIN(  87)		return ((int)x & (int)(int)16777215);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ARGB_obj,getRGB,return )

int ARGB_obj::setRGB(int x,int r,int g,int b){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_89_setRGB)
HXDLIN(  89)		return ((int)((int)((int)((int)r << (int)(int)16) | (int)((int)g << (int)(int)8)) | (int)b) | (int)((int)x & (int)(int)-16777216));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(ARGB_obj,setRGB,return )

int ARGB_obj::getA(int x){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_92_getA)
HXDLIN(  92)		return hx::UShr(x,(int)24);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ARGB_obj,getA,return )

Float ARGB_obj::getAf(int x){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_94_getAf)
HXDLIN(  94)		return (hx::UShr(x,(int)24) * ((Float)0.00392156862745098));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ARGB_obj,getAf,return )

int ARGB_obj::getR(int x){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_97_getR)
HXDLIN(  97)		return ((int)hx::UShr(x,(int)16) & (int)(int)255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ARGB_obj,getR,return )

Float ARGB_obj::getRf(int x){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_99_getRf)
HXDLIN(  99)		return (((int)hx::UShr(x,(int)16) & (int)(int)255) * ((Float)0.00392156862745098));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ARGB_obj,getRf,return )

int ARGB_obj::getG(int x){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_102_getG)
HXDLIN( 102)		return ((int)hx::UShr(x,(int)8) & (int)(int)255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ARGB_obj,getG,return )

Float ARGB_obj::getGf(int x){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_104_getGf)
HXDLIN( 104)		return (((int)hx::UShr(x,(int)8) & (int)(int)255) * ((Float)0.00392156862745098));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ARGB_obj,getGf,return )

int ARGB_obj::getB(int x){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_107_getB)
HXDLIN( 107)		return ((int)x & (int)(int)255);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ARGB_obj,getB,return )

Float ARGB_obj::getBf(int x){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_109_getBf)
HXDLIN( 109)		return (((int)x & (int)(int)255) * ((Float)0.00392156862745098));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ARGB_obj,getBf,return )

int ARGB_obj::setA(int x,int a){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_112_setA)
HXDLIN( 112)		return ((int)((int)a << (int)(int)24) | (int)((int)x & (int)(int)16777215));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ARGB_obj,setA,return )

int ARGB_obj::setAf(int x,Float a){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_114_setAf)
HXDLIN( 114)		Float x1;
HXDLIN( 114)		if ((a < ((Float)0.0))) {
HXDLIN( 114)			x1 = ((Float)0.0);
            		}
            		else {
HXDLIN( 114)			if ((a > ((Float)1.0))) {
HXDLIN( 114)				x1 = ((Float)1.0);
            			}
            			else {
HXDLIN( 114)				x1 = a;
            			}
            		}
HXDLIN( 114)		Float x2 = (x1 * (int)255);
HXDLIN( 114)		Float a1;
HXDLIN( 114)		if ((x2 > (int)0)) {
HXDLIN( 114)			a1 = (x2 + ((Float).5));
            		}
            		else {
HXDLIN( 114)			if ((x2 < (int)0)) {
HXDLIN( 114)				a1 = (x2 - ((Float).5));
            			}
            			else {
HXDLIN( 114)				a1 = (int)0;
            			}
            		}
HXDLIN( 114)		return ((int)((int)::Std_obj::_hx_int(a1) << (int)(int)24) | (int)((int)x & (int)(int)16777215));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ARGB_obj,setAf,return )

int ARGB_obj::setR(int x,int r){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_117_setR)
HXDLIN( 117)		return ((int)((int)((int)r & (int)(int)255) << (int)(int)16) | (int)((int)x & (int)(int)-16711681));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ARGB_obj,setR,return )

int ARGB_obj::setRf(int x,Float r){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_119_setRf)
HXDLIN( 119)		Float x1;
HXDLIN( 119)		if ((r < ((Float)0.0))) {
HXDLIN( 119)			x1 = ((Float)0.0);
            		}
            		else {
HXDLIN( 119)			if ((r > ((Float)1.0))) {
HXDLIN( 119)				x1 = ((Float)1.0);
            			}
            			else {
HXDLIN( 119)				x1 = r;
            			}
            		}
HXDLIN( 119)		Float x2 = (x1 * (int)255);
HXDLIN( 119)		Float r1;
HXDLIN( 119)		if ((x2 > (int)0)) {
HXDLIN( 119)			r1 = (x2 + ((Float).5));
            		}
            		else {
HXDLIN( 119)			if ((x2 < (int)0)) {
HXDLIN( 119)				r1 = (x2 - ((Float).5));
            			}
            			else {
HXDLIN( 119)				r1 = (int)0;
            			}
            		}
HXDLIN( 119)		return ((int)((int)((int)::Std_obj::_hx_int(r1) & (int)(int)255) << (int)(int)16) | (int)((int)x & (int)(int)-16711681));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ARGB_obj,setRf,return )

int ARGB_obj::setG(int x,int g){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_122_setG)
HXDLIN( 122)		return ((int)((int)g << (int)(int)8) | (int)((int)x & (int)(int)-65281));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ARGB_obj,setG,return )

int ARGB_obj::setGf(int x,Float g){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_124_setGf)
HXDLIN( 124)		Float x1;
HXDLIN( 124)		if ((g < ((Float)0.0))) {
HXDLIN( 124)			x1 = ((Float)0.0);
            		}
            		else {
HXDLIN( 124)			if ((g > ((Float)1.0))) {
HXDLIN( 124)				x1 = ((Float)1.0);
            			}
            			else {
HXDLIN( 124)				x1 = g;
            			}
            		}
HXDLIN( 124)		Float x2 = (x1 * (int)255);
HXDLIN( 124)		Float g1;
HXDLIN( 124)		if ((x2 > (int)0)) {
HXDLIN( 124)			g1 = (x2 + ((Float).5));
            		}
            		else {
HXDLIN( 124)			if ((x2 < (int)0)) {
HXDLIN( 124)				g1 = (x2 - ((Float).5));
            			}
            			else {
HXDLIN( 124)				g1 = (int)0;
            			}
            		}
HXDLIN( 124)		return ((int)((int)::Std_obj::_hx_int(g1) << (int)(int)8) | (int)((int)x & (int)(int)-65281));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ARGB_obj,setGf,return )

int ARGB_obj::setB(int x,int b){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_127_setB)
HXDLIN( 127)		return ((int)b | (int)((int)x & (int)(int)-256));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ARGB_obj,setB,return )

int ARGB_obj::setBf(int x,Float b){
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_129_setBf)
HXDLIN( 129)		Float x1;
HXDLIN( 129)		if ((b < ((Float)0.0))) {
HXDLIN( 129)			x1 = ((Float)0.0);
            		}
            		else {
HXDLIN( 129)			if ((b > ((Float)1.0))) {
HXDLIN( 129)				x1 = ((Float)1.0);
            			}
            			else {
HXDLIN( 129)				x1 = b;
            			}
            		}
HXDLIN( 129)		Float x2 = (x1 * (int)255);
HXDLIN( 129)		Float b1;
HXDLIN( 129)		if ((x2 > (int)0)) {
HXDLIN( 129)			b1 = (x2 + ((Float).5));
            		}
            		else {
HXDLIN( 129)			if ((x2 < (int)0)) {
HXDLIN( 129)				b1 = (x2 - ((Float).5));
            			}
            			else {
HXDLIN( 129)				b1 = (int)0;
            			}
            		}
HXDLIN( 129)		return ((int)::Std_obj::_hx_int(b1) | (int)((int)x & (int)(int)-256));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ARGB_obj,setBf,return )


hx::ObjectPtr< ARGB_obj > ARGB_obj::__new( ::Dynamic __o_a, ::Dynamic __o_r, ::Dynamic __o_g, ::Dynamic __o_b) {
	hx::ObjectPtr< ARGB_obj > __this = new ARGB_obj();
	__this->__construct(__o_a,__o_r,__o_g,__o_b);
	return __this;
}

hx::ObjectPtr< ARGB_obj > ARGB_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic __o_a, ::Dynamic __o_r, ::Dynamic __o_g, ::Dynamic __o_b) {
	ARGB_obj *__this = (ARGB_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ARGB_obj), false, "com.stencyl.utils.ARGB"));
	*(void **)__this = ARGB_obj::_hx_vtable;
	__this->__construct(__o_a,__o_r,__o_g,__o_b);
	return __this;
}

ARGB_obj::ARGB_obj()
{
}

hx::Val ARGB_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { return hx::Val( a ); }
		if (HX_FIELD_EQ(inName,"r") ) { return hx::Val( r ); }
		if (HX_FIELD_EQ(inName,"g") ) { return hx::Val( g ); }
		if (HX_FIELD_EQ(inName,"b") ) { return hx::Val( b ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"lerp") ) { return hx::Val( lerp_dyn() ); }
		if (HX_FIELD_EQ(inName,"copy") ) { return hx::Val( copy_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"getA8") ) { return hx::Val( getA8_dyn() ); }
		if (HX_FIELD_EQ(inName,"getR8") ) { return hx::Val( getR8_dyn() ); }
		if (HX_FIELD_EQ(inName,"getG8") ) { return hx::Val( getG8_dyn() ); }
		if (HX_FIELD_EQ(inName,"getB8") ) { return hx::Val( getB8_dyn() ); }
		if (HX_FIELD_EQ(inName,"get24") ) { return hx::Val( get24_dyn() ); }
		if (HX_FIELD_EQ(inName,"set24") ) { return hx::Val( set24_dyn() ); }
		if (HX_FIELD_EQ(inName,"get32") ) { return hx::Val( get32_dyn() ); }
		if (HX_FIELD_EQ(inName,"set32") ) { return hx::Val( set32_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool ARGB_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"getA") ) { outValue = getA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getR") ) { outValue = getR_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getG") ) { outValue = getG_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getB") ) { outValue = getB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setA") ) { outValue = setA_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setR") ) { outValue = setR_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setG") ) { outValue = setG_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setB") ) { outValue = setB_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"getAf") ) { outValue = getAf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getRf") ) { outValue = getRf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getGf") ) { outValue = getGf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBf") ) { outValue = getBf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setAf") ) { outValue = setAf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setRf") ) { outValue = setRf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setGf") ) { outValue = setGf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setBf") ) { outValue = setBf_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"toARGB") ) { outValue = toARGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getRGB") ) { outValue = getRGB_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setRGB") ) { outValue = setRGB_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"setARGBi") ) { outValue = setARGBi_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setARGBf") ) { outValue = setARGBf_dyn(); return true; }
	}
	return false;
}

hx::Val ARGB_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"a") ) { a=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"r") ) { r=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"g") ) { g=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"b") ) { b=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ARGB_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("a","\x61","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("r","\x72","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("g","\x67","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("b","\x62","\x00","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ARGB_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(ARGB_obj,a),HX_HCSTRING("a","\x61","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(ARGB_obj,r),HX_HCSTRING("r","\x72","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(ARGB_obj,g),HX_HCSTRING("g","\x67","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(ARGB_obj,b),HX_HCSTRING("b","\x62","\x00","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo ARGB_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &ARGB_obj::BLACK,HX_HCSTRING("BLACK","\x9f","\x0d","\xe0","\x32")},
	{hx::fsInt,(void *) &ARGB_obj::WHITE,HX_HCSTRING("WHITE","\x89","\x82","\xab","\x47")},
	{hx::fsInt,(void *) &ARGB_obj::RED,HX_HCSTRING("RED","\x31","\x75","\x3e","\x00")},
	{hx::fsInt,(void *) &ARGB_obj::GREEN,HX_HCSTRING("GREEN","\xa3","\x46","\xdb","\x17")},
	{hx::fsInt,(void *) &ARGB_obj::BLUE,HX_HCSTRING("BLUE","\x9a","\x0a","\xda","\x2b")},
	{hx::fsInt,(void *) &ARGB_obj::CYAN,HX_HCSTRING("CYAN","\x23","\x0d","\x8d","\x2c")},
	{hx::fsInt,(void *) &ARGB_obj::MAGENTA,HX_HCSTRING("MAGENTA","\x09","\x8e","\x71","\x8e")},
	{hx::fsInt,(void *) &ARGB_obj::YELLOW,HX_HCSTRING("YELLOW","\x74","\x4b","\xdf","\x82")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String ARGB_obj_sMemberFields[] = {
	HX_HCSTRING("a","\x61","\x00","\x00","\x00"),
	HX_HCSTRING("r","\x72","\x00","\x00","\x00"),
	HX_HCSTRING("g","\x67","\x00","\x00","\x00"),
	HX_HCSTRING("b","\x62","\x00","\x00","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("lerp","\x77","\x12","\xb0","\x47"),
	HX_HCSTRING("getA8","\xed","\x8a","\x60","\x91"),
	HX_HCSTRING("getR8","\xbc","\x99","\x60","\x91"),
	HX_HCSTRING("getG8","\x27","\x90","\x60","\x91"),
	HX_HCSTRING("getB8","\xcc","\x8b","\x60","\x91"),
	HX_HCSTRING("get24","\xd8","\x7d","\x60","\x91"),
	HX_HCSTRING("set24","\xe4","\x73","\x2f","\x7a"),
	HX_HCSTRING("get32","\xb5","\x7e","\x60","\x91"),
	HX_HCSTRING("set32","\xc1","\x74","\x2f","\x7a"),
	HX_HCSTRING("copy","\xb5","\xbb","\xc4","\x41"),
	::String(null()) };

static void ARGB_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ARGB_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(ARGB_obj::BLACK,"BLACK");
	HX_MARK_MEMBER_NAME(ARGB_obj::WHITE,"WHITE");
	HX_MARK_MEMBER_NAME(ARGB_obj::RED,"RED");
	HX_MARK_MEMBER_NAME(ARGB_obj::GREEN,"GREEN");
	HX_MARK_MEMBER_NAME(ARGB_obj::BLUE,"BLUE");
	HX_MARK_MEMBER_NAME(ARGB_obj::CYAN,"CYAN");
	HX_MARK_MEMBER_NAME(ARGB_obj::MAGENTA,"MAGENTA");
	HX_MARK_MEMBER_NAME(ARGB_obj::YELLOW,"YELLOW");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ARGB_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ARGB_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ARGB_obj::BLACK,"BLACK");
	HX_VISIT_MEMBER_NAME(ARGB_obj::WHITE,"WHITE");
	HX_VISIT_MEMBER_NAME(ARGB_obj::RED,"RED");
	HX_VISIT_MEMBER_NAME(ARGB_obj::GREEN,"GREEN");
	HX_VISIT_MEMBER_NAME(ARGB_obj::BLUE,"BLUE");
	HX_VISIT_MEMBER_NAME(ARGB_obj::CYAN,"CYAN");
	HX_VISIT_MEMBER_NAME(ARGB_obj::MAGENTA,"MAGENTA");
	HX_VISIT_MEMBER_NAME(ARGB_obj::YELLOW,"YELLOW");
};

#endif

hx::Class ARGB_obj::__mClass;

static ::String ARGB_obj_sStaticFields[] = {
	HX_HCSTRING("BLACK","\x9f","\x0d","\xe0","\x32"),
	HX_HCSTRING("WHITE","\x89","\x82","\xab","\x47"),
	HX_HCSTRING("RED","\x31","\x75","\x3e","\x00"),
	HX_HCSTRING("GREEN","\xa3","\x46","\xdb","\x17"),
	HX_HCSTRING("BLUE","\x9a","\x0a","\xda","\x2b"),
	HX_HCSTRING("CYAN","\x23","\x0d","\x8d","\x2c"),
	HX_HCSTRING("MAGENTA","\x09","\x8e","\x71","\x8e"),
	HX_HCSTRING("YELLOW","\x74","\x4b","\xdf","\x82"),
	HX_HCSTRING("setARGBi","\xbb","\x46","\x7c","\x1e"),
	HX_HCSTRING("setARGBf","\xb8","\x46","\x7c","\x1e"),
	HX_HCSTRING("toARGB","\x47","\x94","\x15","\x76"),
	HX_HCSTRING("getRGB","\x17","\xf8","\x25","\xa3"),
	HX_HCSTRING("setRGB","\x8b","\x4c","\x6e","\x6f"),
	HX_HCSTRING("getA","\xeb","\x02","\x62","\x44"),
	HX_HCSTRING("getAf","\x1b","\x8b","\x60","\x91"),
	HX_HCSTRING("getR","\xfc","\x02","\x62","\x44"),
	HX_HCSTRING("getRf","\xea","\x99","\x60","\x91"),
	HX_HCSTRING("getG","\xf1","\x02","\x62","\x44"),
	HX_HCSTRING("getGf","\x55","\x90","\x60","\x91"),
	HX_HCSTRING("getB","\xec","\x02","\x62","\x44"),
	HX_HCSTRING("getBf","\xfa","\x8b","\x60","\x91"),
	HX_HCSTRING("setA","\x5f","\x92","\x50","\x4c"),
	HX_HCSTRING("setAf","\x27","\x81","\x2f","\x7a"),
	HX_HCSTRING("setR","\x70","\x92","\x50","\x4c"),
	HX_HCSTRING("setRf","\xf6","\x8f","\x2f","\x7a"),
	HX_HCSTRING("setG","\x65","\x92","\x50","\x4c"),
	HX_HCSTRING("setGf","\x61","\x86","\x2f","\x7a"),
	HX_HCSTRING("setB","\x60","\x92","\x50","\x4c"),
	HX_HCSTRING("setBf","\x06","\x82","\x2f","\x7a"),
	::String(null())
};

void ARGB_obj::__register()
{
	hx::Object *dummy = new ARGB_obj;
	ARGB_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.utils.ARGB","\xf8","\x21","\xe0","\xe8");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ARGB_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ARGB_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ARGB_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ARGB_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ARGB_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ARGB_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ARGB_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ARGB_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ARGB_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_48_boot)
HXDLIN(  48)		BLACK = (int)-16777216;
            	}
{
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_49_boot)
HXDLIN(  49)		WHITE = (int)-1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_50_boot)
HXDLIN(  50)		RED = (int)-65536;
            	}
{
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_51_boot)
HXDLIN(  51)		GREEN = (int)-16711936;
            	}
{
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_52_boot)
HXDLIN(  52)		BLUE = (int)-16776961;
            	}
{
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_53_boot)
HXDLIN(  53)		CYAN = (int)-16711681;
            	}
{
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_54_boot)
HXDLIN(  54)		MAGENTA = (int)-65281;
            	}
{
            	HX_STACKFRAME(&_hx_pos_84a2df0e6dbe6948_55_boot)
HXDLIN(  55)		YELLOW = (int)-256;
            	}
}

} // end namespace com
} // end namespace stencyl
} // end namespace utils
