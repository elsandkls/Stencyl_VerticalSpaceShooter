// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_com_stencyl_models_scene_Corners
#include <com/stencyl/models/scene/Corners.h>
#endif
#ifndef INCLUDED_openfl_geom_Point
#include <openfl/geom/Point.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_f4b213dcec79c6e1_63_new,"com.stencyl.models.scene.Corners","new",0x07894d79,"com.stencyl.models.scene.Corners.new","com/stencyl/models/scene/AutotileFormat.hx",63,0xe1d498d3)
HX_LOCAL_STACK_FRAME(_hx_pos_f4b213dcec79c6e1_97_toString,"com.stencyl.models.scene.Corners","toString",0x8c2038f3,"com.stencyl.models.scene.Corners.toString","com/stencyl/models/scene/AutotileFormat.hx",97,0xe1d498d3)
namespace com{
namespace stencyl{
namespace models{
namespace scene{

void Corners_obj::__construct( ::openfl::geom::Point tl, ::openfl::geom::Point tr, ::openfl::geom::Point bl, ::openfl::geom::Point br){
            	HX_STACKFRAME(&_hx_pos_f4b213dcec79c6e1_63_new)
HXLINE(  64)		this->tl = tl;
HXLINE(  65)		this->tr = tr;
HXLINE(  66)		this->bl = bl;
HXLINE(  67)		this->br = br;
            	}

Dynamic Corners_obj::__CreateEmpty() { return new Corners_obj; }

void *Corners_obj::_hx_vtable = 0;

Dynamic Corners_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Corners_obj > _hx_result = new Corners_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool Corners_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6c867947;
}

::String Corners_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_f4b213dcec79c6e1_97_toString)
HXDLIN(  97)		::String _hx_tmp = ((HX_("TL: ",1e,ca,bf,37) + ::Std_obj::string(this->tl)) + HX_(", TR: ",18,c8,4a,3c));
HXDLIN(  97)		::String _hx_tmp1 = ((_hx_tmp + ::Std_obj::string(this->tr)) + HX_(", BL: ",64,63,60,30));
HXDLIN(  97)		::String _hx_tmp2 = ((_hx_tmp1 + ::Std_obj::string(this->bl)) + HX_(", BR: ",ea,f0,64,30));
HXDLIN(  97)		return (_hx_tmp2 + ::Std_obj::string(this->br));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Corners_obj,toString,return )


hx::ObjectPtr< Corners_obj > Corners_obj::__new( ::openfl::geom::Point tl, ::openfl::geom::Point tr, ::openfl::geom::Point bl, ::openfl::geom::Point br) {
	hx::ObjectPtr< Corners_obj > __this = new Corners_obj();
	__this->__construct(tl,tr,bl,br);
	return __this;
}

hx::ObjectPtr< Corners_obj > Corners_obj::__alloc(hx::Ctx *_hx_ctx, ::openfl::geom::Point tl, ::openfl::geom::Point tr, ::openfl::geom::Point bl, ::openfl::geom::Point br) {
	Corners_obj *__this = (Corners_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Corners_obj), true, "com.stencyl.models.scene.Corners"));
	*(void **)__this = Corners_obj::_hx_vtable;
	__this->__construct(tl,tr,bl,br);
	return __this;
}

Corners_obj::Corners_obj()
{
}

void Corners_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Corners);
	HX_MARK_MEMBER_NAME(tl,"tl");
	HX_MARK_MEMBER_NAME(tr,"tr");
	HX_MARK_MEMBER_NAME(bl,"bl");
	HX_MARK_MEMBER_NAME(br,"br");
	HX_MARK_END_CLASS();
}

void Corners_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(tl,"tl");
	HX_VISIT_MEMBER_NAME(tr,"tr");
	HX_VISIT_MEMBER_NAME(bl,"bl");
	HX_VISIT_MEMBER_NAME(br,"br");
}

hx::Val Corners_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"tl") ) { return hx::Val( tl ); }
		if (HX_FIELD_EQ(inName,"tr") ) { return hx::Val( tr ); }
		if (HX_FIELD_EQ(inName,"bl") ) { return hx::Val( bl ); }
		if (HX_FIELD_EQ(inName,"br") ) { return hx::Val( br ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Corners_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"tl") ) { tl=inValue.Cast<  ::openfl::geom::Point >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tr") ) { tr=inValue.Cast<  ::openfl::geom::Point >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bl") ) { bl=inValue.Cast<  ::openfl::geom::Point >(); return inValue; }
		if (HX_FIELD_EQ(inName,"br") ) { br=inValue.Cast<  ::openfl::geom::Point >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Corners_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("tl","\x78","\x65","\x00","\x00"));
	outFields->push(HX_HCSTRING("tr","\x7e","\x65","\x00","\x00"));
	outFields->push(HX_HCSTRING("bl","\xca","\x55","\x00","\x00"));
	outFields->push(HX_HCSTRING("br","\xd0","\x55","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Corners_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::openfl::geom::Point*/ ,(int)offsetof(Corners_obj,tl),HX_HCSTRING("tl","\x78","\x65","\x00","\x00")},
	{hx::fsObject /*::openfl::geom::Point*/ ,(int)offsetof(Corners_obj,tr),HX_HCSTRING("tr","\x7e","\x65","\x00","\x00")},
	{hx::fsObject /*::openfl::geom::Point*/ ,(int)offsetof(Corners_obj,bl),HX_HCSTRING("bl","\xca","\x55","\x00","\x00")},
	{hx::fsObject /*::openfl::geom::Point*/ ,(int)offsetof(Corners_obj,br),HX_HCSTRING("br","\xd0","\x55","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Corners_obj_sStaticStorageInfo = 0;
#endif

static ::String Corners_obj_sMemberFields[] = {
	HX_HCSTRING("tl","\x78","\x65","\x00","\x00"),
	HX_HCSTRING("tr","\x7e","\x65","\x00","\x00"),
	HX_HCSTRING("bl","\xca","\x55","\x00","\x00"),
	HX_HCSTRING("br","\xd0","\x55","\x00","\x00"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void Corners_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Corners_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Corners_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Corners_obj::__mClass,"__mClass");
};

#endif

hx::Class Corners_obj::__mClass;

void Corners_obj::__register()
{
	hx::Object *dummy = new Corners_obj;
	Corners_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.models.scene.Corners","\x07","\x1d","\xad","\x67");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Corners_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Corners_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Corners_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Corners_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Corners_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Corners_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace models
} // end namespace scene
