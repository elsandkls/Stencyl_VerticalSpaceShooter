// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_utils_motion_EasingFunction
#include <com/stencyl/utils/motion/EasingFunction.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_TweenFloat2
#include <com/stencyl/utils/motion/TweenFloat2.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_TweenObject
#include <com/stencyl/utils/motion/TweenObject.h>
#endif
#ifndef INCLUDED_tweenxcore_FloatTools
#include <tweenxcore/FloatTools.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_94bd01d649fbcf23_17_new,"com.stencyl.utils.motion.TweenFloat2","new",0x0183aea7,"com.stencyl.utils.motion.TweenFloat2.new","com/stencyl/utils/motion/TweenFloat2.hx",17,0xeafdfb07)
HX_LOCAL_STACK_FRAME(_hx_pos_94bd01d649fbcf23_21_tween,"com.stencyl.utils.motion.TweenFloat2","tween",0xad09e872,"com.stencyl.utils.motion.TweenFloat2.tween","com/stencyl/utils/motion/TweenFloat2.hx",21,0xeafdfb07)
HX_LOCAL_STACK_FRAME(_hx_pos_94bd01d649fbcf23_36_updateValue,"com.stencyl.utils.motion.TweenFloat2","updateValue",0x3982e5ef,"com.stencyl.utils.motion.TweenFloat2.updateValue","com/stencyl/utils/motion/TweenFloat2.hx",36,0xeafdfb07)
namespace com{
namespace stencyl{
namespace utils{
namespace motion{

void TweenFloat2_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_94bd01d649fbcf23_17_new)
HXDLIN(  17)		super::__construct();
            	}

Dynamic TweenFloat2_obj::__CreateEmpty() { return new TweenFloat2_obj; }

void *TweenFloat2_obj::_hx_vtable = 0;

Dynamic TweenFloat2_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TweenFloat2_obj > _hx_result = new TweenFloat2_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TweenFloat2_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0ab1d22e) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0ab1d22e;
	} else {
		return inClassId==(int)0x36c87685;
	}
}

 ::com::stencyl::utils::motion::TweenFloat2 TweenFloat2_obj::tween(Float startValue1,Float endValue1,Float startValue2,Float endValue2, ::com::stencyl::utils::motion::EasingFunction easing,int duration){
            	HX_STACKFRAME(&_hx_pos_94bd01d649fbcf23_21_tween)
HXLINE(  22)		this->startValue1 = startValue1;
HXLINE(  23)		this->endValue1 = endValue1;
HXLINE(  24)		this->value1 = startValue1;
HXLINE(  26)		this->startValue2 = startValue2;
HXLINE(  27)		this->endValue2 = endValue2;
HXLINE(  28)		this->value2 = startValue2;
HXLINE(  30)		this->_tween(easing,duration);
HXLINE(  32)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC6(TweenFloat2_obj,tween,return )

void TweenFloat2_obj::updateValue(){
            	HX_STACKFRAME(&_hx_pos_94bd01d649fbcf23_36_updateValue)
HXLINE(  37)		 ::com::stencyl::utils::motion::EasingFunction rate = this->easing;
HXDLIN(  37)		Float rate1 = rate->apply(((Float)this->time / (Float)this->duration));
HXLINE(  38)		this->value1 = ::tweenxcore::FloatTools_obj::lerp(rate1,this->startValue1,this->endValue1);
HXLINE(  39)		this->value2 = ::tweenxcore::FloatTools_obj::lerp(rate1,this->startValue2,this->endValue2);
            	}



hx::ObjectPtr< TweenFloat2_obj > TweenFloat2_obj::__new() {
	hx::ObjectPtr< TweenFloat2_obj > __this = new TweenFloat2_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< TweenFloat2_obj > TweenFloat2_obj::__alloc(hx::Ctx *_hx_ctx) {
	TweenFloat2_obj *__this = (TweenFloat2_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TweenFloat2_obj), true, "com.stencyl.utils.motion.TweenFloat2"));
	*(void **)__this = TweenFloat2_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TweenFloat2_obj::TweenFloat2_obj()
{
}

hx::Val TweenFloat2_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"tween") ) { return hx::Val( tween_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"value1") ) { return hx::Val( value1 ); }
		if (HX_FIELD_EQ(inName,"value2") ) { return hx::Val( value2 ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"endValue1") ) { return hx::Val( endValue1 ); }
		if (HX_FIELD_EQ(inName,"endValue2") ) { return hx::Val( endValue2 ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"startValue1") ) { return hx::Val( startValue1 ); }
		if (HX_FIELD_EQ(inName,"startValue2") ) { return hx::Val( startValue2 ); }
		if (HX_FIELD_EQ(inName,"updateValue") ) { return hx::Val( updateValue_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TweenFloat2_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"value1") ) { value1=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"value2") ) { value2=inValue.Cast< Float >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"endValue1") ) { endValue1=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"endValue2") ) { endValue2=inValue.Cast< Float >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"startValue1") ) { startValue1=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"startValue2") ) { startValue2=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TweenFloat2_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("startValue1","\xa2","\x61","\x9d","\xc7"));
	outFields->push(HX_HCSTRING("endValue1","\xdb","\x51","\x99","\x8f"));
	outFields->push(HX_HCSTRING("value1","\xa0","\x03","\xb7","\x4f"));
	outFields->push(HX_HCSTRING("startValue2","\xa3","\x61","\x9d","\xc7"));
	outFields->push(HX_HCSTRING("endValue2","\xdc","\x51","\x99","\x8f"));
	outFields->push(HX_HCSTRING("value2","\xa1","\x03","\xb7","\x4f"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo TweenFloat2_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(TweenFloat2_obj,startValue1),HX_HCSTRING("startValue1","\xa2","\x61","\x9d","\xc7")},
	{hx::fsFloat,(int)offsetof(TweenFloat2_obj,endValue1),HX_HCSTRING("endValue1","\xdb","\x51","\x99","\x8f")},
	{hx::fsFloat,(int)offsetof(TweenFloat2_obj,value1),HX_HCSTRING("value1","\xa0","\x03","\xb7","\x4f")},
	{hx::fsFloat,(int)offsetof(TweenFloat2_obj,startValue2),HX_HCSTRING("startValue2","\xa3","\x61","\x9d","\xc7")},
	{hx::fsFloat,(int)offsetof(TweenFloat2_obj,endValue2),HX_HCSTRING("endValue2","\xdc","\x51","\x99","\x8f")},
	{hx::fsFloat,(int)offsetof(TweenFloat2_obj,value2),HX_HCSTRING("value2","\xa1","\x03","\xb7","\x4f")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TweenFloat2_obj_sStaticStorageInfo = 0;
#endif

static ::String TweenFloat2_obj_sMemberFields[] = {
	HX_HCSTRING("startValue1","\xa2","\x61","\x9d","\xc7"),
	HX_HCSTRING("endValue1","\xdb","\x51","\x99","\x8f"),
	HX_HCSTRING("value1","\xa0","\x03","\xb7","\x4f"),
	HX_HCSTRING("startValue2","\xa3","\x61","\x9d","\xc7"),
	HX_HCSTRING("endValue2","\xdc","\x51","\x99","\x8f"),
	HX_HCSTRING("value2","\xa1","\x03","\xb7","\x4f"),
	HX_HCSTRING("tween","\x6b","\xaa","\x70","\x19"),
	HX_HCSTRING("updateValue","\xa8","\xe8","\x50","\x17"),
	::String(null()) };

static void TweenFloat2_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TweenFloat2_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TweenFloat2_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TweenFloat2_obj::__mClass,"__mClass");
};

#endif

hx::Class TweenFloat2_obj::__mClass;

void TweenFloat2_obj::__register()
{
	hx::Object *dummy = new TweenFloat2_obj;
	TweenFloat2_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.utils.motion.TweenFloat2","\x35","\xcf","\xf7","\x24");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TweenFloat2_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TweenFloat2_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TweenFloat2_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TweenFloat2_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TweenFloat2_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TweenFloat2_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace utils
} // end namespace motion
