// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_MbsResource
#include <com/stencyl/io/mbs/MbsResource.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_actortype_MbsAnimation
#include <com/stencyl/io/mbs/actortype/MbsAnimation.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_actortype_MbsSprite
#include <com/stencyl/io/mbs/actortype/MbsSprite.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsField
#include <mbs/core/MbsField.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e743986ff5b6be4e_51_new,"com.stencyl.io.mbs.actortype.MbsSprite","new",0xf3d70d4d,"com.stencyl.io.mbs.actortype.MbsSprite.new","com/stencyl/io/mbs/actortype/MbsSprite.hx",51,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_45_getMbsType,"com.stencyl.io.mbs.actortype.MbsSprite","getMbsType",0x3b453215,"com.stencyl.io.mbs.actortype.MbsSprite.getMbsType","com/stencyl/io/mbs/actortype/MbsSprite.hx",45,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_58_allocateNew,"com.stencyl.io.mbs.actortype.MbsSprite","allocateNew",0x35eabb90,"com.stencyl.io.mbs.actortype.MbsSprite.allocateNew","com/stencyl/io/mbs/actortype/MbsSprite.hx",58,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_63_getDefaultAnimation,"com.stencyl.io.mbs.actortype.MbsSprite","getDefaultAnimation",0x92c865a6,"com.stencyl.io.mbs.actortype.MbsSprite.getDefaultAnimation","com/stencyl/io/mbs/actortype/MbsSprite.hx",63,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_68_setDefaultAnimation,"com.stencyl.io.mbs.actortype.MbsSprite","setDefaultAnimation",0xcf6558b2,"com.stencyl.io.mbs.actortype.MbsSprite.setDefaultAnimation","com/stencyl/io/mbs/actortype/MbsSprite.hx",68,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_73_getReadableImages,"com.stencyl.io.mbs.actortype.MbsSprite","getReadableImages",0x1b2e45ab,"com.stencyl.io.mbs.actortype.MbsSprite.getReadableImages","com/stencyl/io/mbs/actortype/MbsSprite.hx",73,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_78_setReadableImages,"com.stencyl.io.mbs.actortype.MbsSprite","setReadableImages",0x3e9c1db7,"com.stencyl.io.mbs.actortype.MbsSprite.setReadableImages","com/stencyl/io/mbs/actortype/MbsSprite.hx",78,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_83_getHeight,"com.stencyl.io.mbs.actortype.MbsSprite","getHeight",0xfd99bdca,"com.stencyl.io.mbs.actortype.MbsSprite.getHeight","com/stencyl/io/mbs/actortype/MbsSprite.hx",83,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_88_setHeight,"com.stencyl.io.mbs.actortype.MbsSprite","setHeight",0xe0eaa9d6,"com.stencyl.io.mbs.actortype.MbsSprite.setHeight","com/stencyl/io/mbs/actortype/MbsSprite.hx",88,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_93_getWidth,"com.stencyl.io.mbs.actortype.MbsSprite","getWidth",0xc8118d83,"com.stencyl.io.mbs.actortype.MbsSprite.getWidth","com/stencyl/io/mbs/actortype/MbsSprite.hx",93,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_98_setWidth,"com.stencyl.io.mbs.actortype.MbsSprite","setWidth",0x766ee6f7,"com.stencyl.io.mbs.actortype.MbsSprite.setWidth","com/stencyl/io/mbs/actortype/MbsSprite.hx",98,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_102_getAnimations,"com.stencyl.io.mbs.actortype.MbsSprite","getAnimations",0xe3de1852,"com.stencyl.io.mbs.actortype.MbsSprite.getAnimations","com/stencyl/io/mbs/actortype/MbsSprite.hx",102,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_108_createAnimations,"com.stencyl.io.mbs.actortype.MbsSprite","createAnimations",0x68e725fe,"com.stencyl.io.mbs.actortype.MbsSprite.createAnimations","com/stencyl/io/mbs/actortype/MbsSprite.hx",108,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_27_initializeType,"com.stencyl.io.mbs.actortype.MbsSprite","initializeType",0x11def85d,"com.stencyl.io.mbs.actortype.MbsSprite.initializeType","com/stencyl/io/mbs/actortype/MbsSprite.hx",27,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_22_initializeType,"com.stencyl.io.mbs.actortype.MbsSprite","initializeType",0x11def85d,"com.stencyl.io.mbs.actortype.MbsSprite.initializeType","com/stencyl/io/mbs/actortype/MbsSprite.hx",22,0x3ca85804)
HX_LOCAL_STACK_FRAME(_hx_pos_e743986ff5b6be4e_40_new_MbsSprite_list,"com.stencyl.io.mbs.actortype.MbsSprite","new_MbsSprite_list",0xe838d94c,"com.stencyl.io.mbs.actortype.MbsSprite.new_MbsSprite_list","com/stencyl/io/mbs/actortype/MbsSprite.hx",40,0x3ca85804)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace actortype{

void MbsSprite_obj::__construct(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_e743986ff5b6be4e_51_new)
HXLINE(  52)		super::__construct(data);
HXLINE(  53)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::actortype::MbsAnimation_obj::MBS_ANIMATION;
HXDLIN(  53)		this->_animations =  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::actortype::MbsAnimation_obj::__alloc( HX_CTX ,data));
            	}

Dynamic MbsSprite_obj::__CreateEmpty() { return new MbsSprite_obj; }

void *MbsSprite_obj::_hx_vtable = 0;

Dynamic MbsSprite_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsSprite_obj > _hx_result = new MbsSprite_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsSprite_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x5052ec3d) {
		if (inClassId<=(int)0x17b72d64) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x17b72d64;
		} else {
			return inClassId==(int)0x5052ec3d;
		}
	} else {
		return inClassId==(int)0x6a1d713f;
	}
}

 ::mbs::core::MbsType MbsSprite_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_45_getMbsType)
HXDLIN(  45)		return ::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE;
            	}


void MbsSprite_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_58_allocateNew)
HXDLIN(  58)		::Dynamic _hx_tmp = this->data;
HXDLIN(  58)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE->getSize()));
            	}


int MbsSprite_obj::getDefaultAnimation(){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_63_getDefaultAnimation)
HXDLIN(  63)		::Dynamic _hx_tmp = this->data;
HXDLIN(  63)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsSprite_obj::defaultAnimation->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSprite_obj,getDefaultAnimation,return )

void MbsSprite_obj::setDefaultAnimation(int _val){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_68_setDefaultAnimation)
HXDLIN(  68)		::Dynamic _hx_tmp = this->data;
HXDLIN(  68)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsSprite_obj::defaultAnimation->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSprite_obj,setDefaultAnimation,(void))

bool MbsSprite_obj::getReadableImages(){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_73_getReadableImages)
HXDLIN(  73)		::Dynamic _hx_tmp = this->data;
HXDLIN(  73)		return ::mbs::io::MbsIO_obj::readBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsSprite_obj::readableImages->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSprite_obj,getReadableImages,return )

void MbsSprite_obj::setReadableImages(bool _val){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_78_setReadableImages)
HXDLIN(  78)		::Dynamic _hx_tmp = this->data;
HXDLIN(  78)		::mbs::io::MbsIO_obj::writeBool(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsSprite_obj::readableImages->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSprite_obj,setReadableImages,(void))

int MbsSprite_obj::getHeight(){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_83_getHeight)
HXDLIN(  83)		::Dynamic _hx_tmp = this->data;
HXDLIN(  83)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsSprite_obj::height->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSprite_obj,getHeight,return )

void MbsSprite_obj::setHeight(int _val){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_88_setHeight)
HXDLIN(  88)		::Dynamic _hx_tmp = this->data;
HXDLIN(  88)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsSprite_obj::height->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSprite_obj,setHeight,(void))

int MbsSprite_obj::getWidth(){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_93_getWidth)
HXDLIN(  93)		::Dynamic _hx_tmp = this->data;
HXDLIN(  93)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsSprite_obj::width->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSprite_obj,getWidth,return )

void MbsSprite_obj::setWidth(int _val){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_98_setWidth)
HXDLIN(  98)		::Dynamic _hx_tmp = this->data;
HXDLIN(  98)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::actortype::MbsSprite_obj::width->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSprite_obj,setWidth,(void))

 ::mbs::io::MbsList MbsSprite_obj::getAnimations(){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_102_getAnimations)
HXLINE( 103)		 ::mbs::io::MbsList _hx_tmp = this->_animations;
HXDLIN( 103)		::Dynamic _hx_tmp1 = this->data;
HXDLIN( 103)		_hx_tmp->setAddress(::mbs::io::MbsIO_obj::readInt(_hx_tmp1,(this->address + ::com::stencyl::io::mbs::actortype::MbsSprite_obj::animations->address)));
HXLINE( 104)		return this->_animations;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsSprite_obj,getAnimations,return )

 ::mbs::io::MbsList MbsSprite_obj::createAnimations(int _length){
            	HX_STACKFRAME(&_hx_pos_e743986ff5b6be4e_108_createAnimations)
HXLINE( 109)		this->_animations->allocateNew(_length);
HXLINE( 110)		::Dynamic _hx_tmp = this->data;
HXDLIN( 110)		int _hx_tmp1 = (this->address + ::com::stencyl::io::mbs::actortype::MbsSprite_obj::animations->address);
HXDLIN( 110)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,_hx_tmp1,this->_animations->getAddress());
HXLINE( 111)		return this->_animations;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsSprite_obj,createAnimations,return )

 ::mbs::core::MbsField MbsSprite_obj::defaultAnimation;

 ::mbs::core::MbsField MbsSprite_obj::readableImages;

 ::mbs::core::MbsField MbsSprite_obj::height;

 ::mbs::core::MbsField MbsSprite_obj::width;

 ::mbs::core::MbsField MbsSprite_obj::animations;

 ::mbs::core::ComposedType MbsSprite_obj::MBS_SPRITE;

void MbsSprite_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_e743986ff5b6be4e_27_initializeType)
HXLINE(  27)			return  ::com::stencyl::io::mbs::actortype::MbsSprite_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_e743986ff5b6be4e_22_initializeType)
HXLINE(  23)		if (hx::IsNotNull( ::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE )) {
HXLINE(  23)			return;
            		}
HXLINE(  24)		::com::stencyl::io::mbs::MbsResource_obj::initializeType();
HXLINE(  26)		::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsSprite",03,ee,3a,fe));
HXLINE(  27)		::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE->setInstantiator( ::Dynamic(new _hx_Closure_0()));
HXLINE(  28)		::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE->inherit(::com::stencyl::io::mbs::MbsResource_obj::MBS_RESOURCE);
HXLINE(  30)		::com::stencyl::io::mbs::actortype::MbsSprite_obj::defaultAnimation = ::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE->createField(HX_("defaultAnimation",03,56,2d,0e),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  31)		::com::stencyl::io::mbs::actortype::MbsSprite_obj::readableImages = ::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE->createField(HX_("readableImages",c8,74,93,cf),::mbs::core::MbsTypes_obj::BOOLEAN);
HXLINE(  32)		::com::stencyl::io::mbs::actortype::MbsSprite_obj::height = ::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE->createField(HX_("height",e7,07,4c,02),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  33)		::com::stencyl::io::mbs::actortype::MbsSprite_obj::width = ::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE->createField(HX_("width",06,b6,62,ca),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  34)		::com::stencyl::io::mbs::actortype::MbsSprite_obj::animations = ::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE->createField(HX_("animations",ef,34,1c,83),::mbs::core::MbsTypes_obj::LIST);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsSprite_obj,initializeType,(void))

 ::mbs::io::MbsList MbsSprite_obj::new_MbsSprite_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_e743986ff5b6be4e_40_new_MbsSprite_list)
HXDLIN(  40)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE;
HXDLIN(  40)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::actortype::MbsSprite_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsSprite_obj,new_MbsSprite_list,return )


hx::ObjectPtr< MbsSprite_obj > MbsSprite_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsSprite_obj > __this = new MbsSprite_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsSprite_obj > MbsSprite_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsSprite_obj *__this = (MbsSprite_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsSprite_obj), true, "com.stencyl.io.mbs.actortype.MbsSprite"));
	*(void **)__this = MbsSprite_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsSprite_obj::MbsSprite_obj()
{
}

void MbsSprite_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MbsSprite);
	HX_MARK_MEMBER_NAME(_animations,"_animations");
	 ::mbs::core::MbsObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MbsSprite_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_animations,"_animations");
	 ::mbs::core::MbsObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val MbsSprite_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"getWidth") ) { return hx::Val( getWidth_dyn() ); }
		if (HX_FIELD_EQ(inName,"setWidth") ) { return hx::Val( setWidth_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getHeight") ) { return hx::Val( getHeight_dyn() ); }
		if (HX_FIELD_EQ(inName,"setHeight") ) { return hx::Val( setHeight_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"_animations") ) { return hx::Val( _animations ); }
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"getAnimations") ) { return hx::Val( getAnimations_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"createAnimations") ) { return hx::Val( createAnimations_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"getReadableImages") ) { return hx::Val( getReadableImages_dyn() ); }
		if (HX_FIELD_EQ(inName,"setReadableImages") ) { return hx::Val( setReadableImages_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"getDefaultAnimation") ) { return hx::Val( getDefaultAnimation_dyn() ); }
		if (HX_FIELD_EQ(inName,"setDefaultAnimation") ) { return hx::Val( setDefaultAnimation_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsSprite_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"width") ) { outValue = ( width ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { outValue = ( height ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"animations") ) { outValue = ( animations ); return true; }
		if (HX_FIELD_EQ(inName,"MBS_SPRITE") ) { outValue = ( MBS_SPRITE ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"readableImages") ) { outValue = ( readableImages ); return true; }
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"defaultAnimation") ) { outValue = ( defaultAnimation ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"new_MbsSprite_list") ) { outValue = new_MbsSprite_list_dyn(); return true; }
	}
	return false;
}

hx::Val MbsSprite_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"_animations") ) { _animations=inValue.Cast<  ::mbs::io::MbsList >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool MbsSprite_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"width") ) { width=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"height") ) { height=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"animations") ) { animations=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"MBS_SPRITE") ) { MBS_SPRITE=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"readableImages") ) { readableImages=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"defaultAnimation") ) { defaultAnimation=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
	}
	return false;
}

void MbsSprite_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("_animations","\x0e","\x02","\xa6","\x55"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo MbsSprite_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::mbs::io::MbsList*/ ,(int)offsetof(MbsSprite_obj,_animations),HX_HCSTRING("_animations","\x0e","\x02","\xa6","\x55")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo MbsSprite_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSprite_obj::defaultAnimation,HX_HCSTRING("defaultAnimation","\x03","\x56","\x2d","\x0e")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSprite_obj::readableImages,HX_HCSTRING("readableImages","\xc8","\x74","\x93","\xcf")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSprite_obj::height,HX_HCSTRING("height","\xe7","\x07","\x4c","\x02")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSprite_obj::width,HX_HCSTRING("width","\x06","\xb6","\x62","\xca")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsSprite_obj::animations,HX_HCSTRING("animations","\xef","\x34","\x1c","\x83")},
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsSprite_obj::MBS_SPRITE,HX_HCSTRING("MBS_SPRITE","\x06","\xba","\x8d","\xa8")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsSprite_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("_animations","\x0e","\x02","\xa6","\x55"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	HX_HCSTRING("getDefaultAnimation","\xb9","\xbe","\x53","\xc8"),
	HX_HCSTRING("setDefaultAnimation","\xc5","\xb1","\xf0","\x04"),
	HX_HCSTRING("getReadableImages","\xfe","\x23","\x07","\x42"),
	HX_HCSTRING("setReadableImages","\x0a","\xfc","\x74","\x65"),
	HX_HCSTRING("getHeight","\x1d","\x91","\xa2","\x7e"),
	HX_HCSTRING("setHeight","\x29","\x7d","\xf3","\x61"),
	HX_HCSTRING("getWidth","\x90","\xc5","\x39","\x2a"),
	HX_HCSTRING("setWidth","\x04","\x1f","\x97","\xd8"),
	HX_HCSTRING("getAnimations","\x25","\x91","\x8e","\xdf"),
	HX_HCSTRING("createAnimations","\x0b","\xb3","\x49","\xb8"),
	::String(null()) };

static void MbsSprite_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsSprite_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsSprite_obj::defaultAnimation,"defaultAnimation");
	HX_MARK_MEMBER_NAME(MbsSprite_obj::readableImages,"readableImages");
	HX_MARK_MEMBER_NAME(MbsSprite_obj::height,"height");
	HX_MARK_MEMBER_NAME(MbsSprite_obj::width,"width");
	HX_MARK_MEMBER_NAME(MbsSprite_obj::animations,"animations");
	HX_MARK_MEMBER_NAME(MbsSprite_obj::MBS_SPRITE,"MBS_SPRITE");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsSprite_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsSprite_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsSprite_obj::defaultAnimation,"defaultAnimation");
	HX_VISIT_MEMBER_NAME(MbsSprite_obj::readableImages,"readableImages");
	HX_VISIT_MEMBER_NAME(MbsSprite_obj::height,"height");
	HX_VISIT_MEMBER_NAME(MbsSprite_obj::width,"width");
	HX_VISIT_MEMBER_NAME(MbsSprite_obj::animations,"animations");
	HX_VISIT_MEMBER_NAME(MbsSprite_obj::MBS_SPRITE,"MBS_SPRITE");
};

#endif

hx::Class MbsSprite_obj::__mClass;

static ::String MbsSprite_obj_sStaticFields[] = {
	HX_HCSTRING("defaultAnimation","\x03","\x56","\x2d","\x0e"),
	HX_HCSTRING("readableImages","\xc8","\x74","\x93","\xcf"),
	HX_HCSTRING("height","\xe7","\x07","\x4c","\x02"),
	HX_HCSTRING("width","\x06","\xb6","\x62","\xca"),
	HX_HCSTRING("animations","\xef","\x34","\x1c","\x83"),
	HX_HCSTRING("MBS_SPRITE","\x06","\xba","\x8d","\xa8"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsSprite_list","\x99","\x83","\x22","\xbf"),
	::String(null())
};

void MbsSprite_obj::__register()
{
	hx::Object *dummy = new MbsSprite_obj;
	MbsSprite_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.actortype.MbsSprite","\xdb","\x62","\x01","\x63");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsSprite_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsSprite_obj::__SetStatic;
	__mClass->mMarkFunc = MbsSprite_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsSprite_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsSprite_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsSprite_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsSprite_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsSprite_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsSprite_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace actortype
