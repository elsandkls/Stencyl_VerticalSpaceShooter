// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_com_stencyl_graphics_shaders_Shader
#include <com/stencyl/graphics/shaders/Shader.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_lime__internal_backend_native_NativeOpenGLRenderContext
#include <lime/_internal/backend/native/NativeOpenGLRenderContext.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GL
#include <lime/graphics/opengl/GL.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl_GLObject
#include <lime/graphics/opengl/GLObject.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_17e282a68801cc77_45_new,"com.stencyl.graphics.shaders.Shader","new",0x436eb50b,"com.stencyl.graphics.shaders.Shader.new","com/stencyl/graphics/shaders/Shader.hx",45,0x7aa47f05)
HX_LOCAL_STACK_FRAME(_hx_pos_17e282a68801cc77_73_compile,"com.stencyl.graphics.shaders.Shader","compile",0x2d513b9e,"com.stencyl.graphics.shaders.Shader.compile","com/stencyl/graphics/shaders/Shader.hx",73,0x7aa47f05)
HX_LOCAL_STACK_FRAME(_hx_pos_17e282a68801cc77_94_attribute,"com.stencyl.graphics.shaders.Shader","attribute",0x7224a707,"com.stencyl.graphics.shaders.Shader.attribute","com/stencyl/graphics/shaders/Shader.hx",94,0x7aa47f05)
HX_LOCAL_STACK_FRAME(_hx_pos_17e282a68801cc77_103_uniform,"com.stencyl.graphics.shaders.Shader","uniform",0x5f46575f,"com.stencyl.graphics.shaders.Shader.uniform","com/stencyl/graphics/shaders/Shader.hx",103,0x7aa47f05)
HX_LOCAL_STACK_FRAME(_hx_pos_17e282a68801cc77_111_bind,"com.stencyl.graphics.shaders.Shader","bind",0xb58426b2,"com.stencyl.graphics.shaders.Shader.bind","com/stencyl/graphics/shaders/Shader.hx",111,0x7aa47f05)
namespace com{
namespace stencyl{
namespace graphics{
namespace shaders{

void Shader_obj::__construct(::Array< ::Dynamic> sources){
            	HX_STACKFRAME(&_hx_pos_17e282a68801cc77_45_new)
HXLINE(  46)		this->program = ::lime::graphics::opengl::GL_obj::context->createProgram();
HXLINE(  48)		{
HXLINE(  48)			int _g = (int)0;
HXDLIN(  48)			while((_g < sources->length)){
HXLINE(  48)				 ::Dynamic source = sources->__get(_g);
HXDLIN(  48)				_g = (_g + (int)1);
HXLINE(  50)				int shader;
HXDLIN(  50)				if (( (bool)(source->__Field(HX_("fragment",d0,5f,e5,ad),hx::paccDynamic)) )) {
HXLINE(  50)					shader = (int)35632;
            				}
            				else {
HXLINE(  50)					shader = (int)35633;
            				}
HXDLIN(  50)				 ::lime::graphics::opengl::GLObject shader1 = this->compile(( (::String)(source->__Field(HX_("src",e4,a6,57,00),hx::paccDynamic)) ),shader);
HXLINE(  51)				if (hx::IsNull( shader1 )) {
HXLINE(  51)					return;
            				}
HXLINE(  52)				::lime::graphics::opengl::GL_obj::context->attachShader(this->program,shader1);
HXLINE(  53)				::lime::graphics::opengl::GL_obj::context->deleteShader(shader1);
            			}
            		}
HXLINE(  56)		::lime::graphics::opengl::GL_obj::context->linkProgram(this->program);
HXLINE(  58)		if (hx::IsEq( ::lime::graphics::opengl::GL_obj::context->getProgramParameter(this->program,(int)35714),(int)0 )) {
HXLINE(  60)			 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  60)			::String _hx_tmp1 = ::lime::graphics::opengl::GL_obj::context->getProgramInfoLog(this->program);
HXDLIN(  60)			_hx_tmp(_hx_tmp1,hx::SourceInfo(HX_("Shader.hx",99,a8,0b,d1),60,HX_("com.stencyl.graphics.shaders.Shader",99,d3,fe,28),HX_("new",60,d0,53,00)));
HXLINE(  61)			 ::Dynamic _hx_tmp2 = ::haxe::Log_obj::trace;
HXDLIN(  61)			::String _hx_tmp3 = (HX_("VALIDATE_STATUS: ",61,4a,52,b0) + ::Std_obj::string(::lime::graphics::opengl::GL_obj::context->getProgramParameter(this->program,(int)35715)));
HXDLIN(  61)			_hx_tmp2(_hx_tmp3,hx::SourceInfo(HX_("Shader.hx",99,a8,0b,d1),61,HX_("com.stencyl.graphics.shaders.Shader",99,d3,fe,28),HX_("new",60,d0,53,00)));
HXLINE(  62)			 ::Dynamic _hx_tmp4 = ::haxe::Log_obj::trace;
HXDLIN(  62)			::String _hx_tmp5 = (HX_("ERROR: ",4e,70,de,69) + ::lime::graphics::opengl::GL_obj::context->getError());
HXDLIN(  62)			_hx_tmp4(_hx_tmp5,hx::SourceInfo(HX_("Shader.hx",99,a8,0b,d1),62,HX_("com.stencyl.graphics.shaders.Shader",99,d3,fe,28),HX_("new",60,d0,53,00)));
HXLINE(  63)			return;
            		}
            	}

Dynamic Shader_obj::__CreateEmpty() { return new Shader_obj; }

void *Shader_obj::_hx_vtable = 0;

Dynamic Shader_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Shader_obj > _hx_result = new Shader_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Shader_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1413f255;
}

 ::lime::graphics::opengl::GLObject Shader_obj::compile(::String source,int type){
            	HX_STACKFRAME(&_hx_pos_17e282a68801cc77_73_compile)
HXLINE(  74)		 ::lime::graphics::opengl::GLObject shader = ::lime::graphics::opengl::GL_obj::context->createShader(type);
HXLINE(  75)		::lime::graphics::opengl::GL_obj::context->shaderSource(shader,source);
HXLINE(  76)		::lime::graphics::opengl::GL_obj::context->compileShader(shader);
HXLINE(  78)		if (hx::IsEq( ::lime::graphics::opengl::GL_obj::context->getShaderParameter(shader,(int)35713),(int)0 )) {
HXLINE(  80)			 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  80)			::String _hx_tmp1 = ::lime::graphics::opengl::GL_obj::context->getShaderInfoLog(shader);
HXDLIN(  80)			_hx_tmp(_hx_tmp1,hx::SourceInfo(HX_("Shader.hx",99,a8,0b,d1),80,HX_("com.stencyl.graphics.shaders.Shader",99,d3,fe,28),HX_("compile",73,25,6f,83)));
HXLINE(  81)			 ::Dynamic _hx_tmp2 = ::haxe::Log_obj::trace;
HXDLIN(  81)			_hx_tmp2((HX_("From source:\n",81,dd,d7,de) + source),hx::SourceInfo(HX_("Shader.hx",99,a8,0b,d1),81,HX_("com.stencyl.graphics.shaders.Shader",99,d3,fe,28),HX_("compile",73,25,6f,83)));
HXLINE(  82)			return null();
            		}
HXLINE(  85)		return shader;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Shader_obj,compile,return )

int Shader_obj::attribute(::String a){
            	HX_STACKFRAME(&_hx_pos_17e282a68801cc77_94_attribute)
HXDLIN(  94)		return ::lime::graphics::opengl::GL_obj::context->getAttribLocation(this->program,a);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Shader_obj,attribute,return )

int Shader_obj::uniform(::String u){
            	HX_STACKFRAME(&_hx_pos_17e282a68801cc77_103_uniform)
HXDLIN( 103)		return ::lime::graphics::opengl::GL_obj::context->getUniformLocation(this->program,u);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Shader_obj,uniform,return )

void Shader_obj::bind(){
            	HX_STACKFRAME(&_hx_pos_17e282a68801cc77_111_bind)
HXDLIN( 111)		::lime::graphics::opengl::GL_obj::context->useProgram(this->program);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Shader_obj,bind,(void))


hx::ObjectPtr< Shader_obj > Shader_obj::__new(::Array< ::Dynamic> sources) {
	hx::ObjectPtr< Shader_obj > __this = new Shader_obj();
	__this->__construct(sources);
	return __this;
}

hx::ObjectPtr< Shader_obj > Shader_obj::__alloc(hx::Ctx *_hx_ctx,::Array< ::Dynamic> sources) {
	Shader_obj *__this = (Shader_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Shader_obj), true, "com.stencyl.graphics.shaders.Shader"));
	*(void **)__this = Shader_obj::_hx_vtable;
	__this->__construct(sources);
	return __this;
}

Shader_obj::Shader_obj()
{
}

void Shader_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Shader);
	HX_MARK_MEMBER_NAME(program,"program");
	HX_MARK_END_CLASS();
}

void Shader_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(program,"program");
}

hx::Val Shader_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"bind") ) { return hx::Val( bind_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"compile") ) { return hx::Val( compile_dyn() ); }
		if (HX_FIELD_EQ(inName,"uniform") ) { return hx::Val( uniform_dyn() ); }
		if (HX_FIELD_EQ(inName,"program") ) { return hx::Val( program ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"attribute") ) { return hx::Val( attribute_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Shader_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"program") ) { program=inValue.Cast<  ::lime::graphics::opengl::GLObject >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Shader_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("program","\x84","\x4a","\xf9","\xf3"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Shader_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::lime::graphics::opengl::GLObject*/ ,(int)offsetof(Shader_obj,program),HX_HCSTRING("program","\x84","\x4a","\xf9","\xf3")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Shader_obj_sStaticStorageInfo = 0;
#endif

static ::String Shader_obj_sMemberFields[] = {
	HX_HCSTRING("compile","\x73","\x25","\x6f","\x83"),
	HX_HCSTRING("attribute","\x1c","\x70","\xf0","\xfa"),
	HX_HCSTRING("uniform","\x34","\x41","\x64","\xb5"),
	HX_HCSTRING("bind","\xbd","\xf5","\x16","\x41"),
	HX_HCSTRING("program","\x84","\x4a","\xf9","\xf3"),
	::String(null()) };

static void Shader_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Shader_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Shader_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Shader_obj::__mClass,"__mClass");
};

#endif

hx::Class Shader_obj::__mClass;

void Shader_obj::__register()
{
	hx::Object *dummy = new Shader_obj;
	Shader_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.graphics.shaders.Shader","\x99","\xd3","\xfe","\x28");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Shader_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Shader_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Shader_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Shader_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Shader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Shader_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace graphics
} // end namespace shaders
