// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_EasingFunction
#include <com/stencyl/utils/motion/EasingFunction.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_ExpoOutIn
#include <com/stencyl/utils/motion/ExpoOutIn.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e60c17519b9bf595_239_new,"com.stencyl.utils.motion.ExpoOutIn","new",0xc422db47,"com.stencyl.utils.motion.ExpoOutIn.new","com/stencyl/utils/motion/EasingFunctions.hx",239,0xda1c1718)
HX_LOCAL_STACK_FRAME(_hx_pos_e60c17519b9bf595_241_apply,"com.stencyl.utils.motion.ExpoOutIn","apply",0xc2105815,"com.stencyl.utils.motion.ExpoOutIn.apply","com/stencyl/utils/motion/EasingFunctions.hx",241,0xda1c1718)
namespace com{
namespace stencyl{
namespace utils{
namespace motion{

void ExpoOutIn_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_e60c17519b9bf595_239_new)
HXDLIN( 239)		super::__construct();
            	}

Dynamic ExpoOutIn_obj::__CreateEmpty() { return new ExpoOutIn_obj; }

void *ExpoOutIn_obj::_hx_vtable = 0;

Dynamic ExpoOutIn_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ExpoOutIn_obj > _hx_result = new ExpoOutIn_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ExpoOutIn_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x047402bf) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x047402bf;
	} else {
		return inClassId==(int)0x48bd5f25;
	}
}

Float ExpoOutIn_obj::apply(Float t){
            	HX_STACKFRAME(&_hx_pos_e60c17519b9bf595_241_apply)
HXDLIN( 241)		if ((t < ((Float)0.5))) {
HXLINE( 242)			return (((Float)0.5) * ((int)1 - ::Math_obj::exp((((Float)-13.862943611198906) * t))));
            		}
            		else {
HXLINE( 243)			if ((t == ((Float)0.5))) {
HXLINE( 244)				return ((Float)0.5);
            			}
            			else {
HXLINE( 246)				return (((Float)0.5) * (::Math_obj::exp((((Float)13.862943611198906) * (t - (int)1))) + (int)1));
            			}
            		}
HXLINE( 241)		return ((Float)0.);
            	}



ExpoOutIn_obj::ExpoOutIn_obj()
{
}

hx::Val ExpoOutIn_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"apply") ) { return hx::Val( apply_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ExpoOutIn_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ExpoOutIn_obj_sStaticStorageInfo = 0;
#endif

static ::String ExpoOutIn_obj_sMemberFields[] = {
	HX_HCSTRING("apply","\x6e","\x85","\x3b","\x24"),
	::String(null()) };

static void ExpoOutIn_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ExpoOutIn_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ExpoOutIn_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ExpoOutIn_obj::__mClass,"__mClass");
};

#endif

hx::Class ExpoOutIn_obj::__mClass;

void ExpoOutIn_obj::__register()
{
	hx::Object *dummy = new ExpoOutIn_obj;
	ExpoOutIn_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.utils.motion.ExpoOutIn","\xd5","\x2b","\x1c","\x88");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ExpoOutIn_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ExpoOutIn_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ExpoOutIn_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ExpoOutIn_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ExpoOutIn_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ExpoOutIn_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace utils
} // end namespace motion
