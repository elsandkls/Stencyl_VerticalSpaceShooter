// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_models__PhysicsMode_PhysicsMode_Impl_
#include <com/stencyl/models/_PhysicsMode/PhysicsMode_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_c3991dfeead60601_9__new,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_","_new",0x64770e73,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_._new","com/stencyl/models/PhysicsMode.hx",9,0xcd29e328)
HX_LOCAL_STACK_FRAME(_hx_pos_c3991dfeead60601_13_fromInt,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_","fromInt",0x850a5bd3,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_.fromInt","com/stencyl/models/PhysicsMode.hx",13,0xcd29e328)
HX_LOCAL_STACK_FRAME(_hx_pos_c3991dfeead60601_18_fromString,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_","fromString",0xe20f406d,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_.fromString","com/stencyl/models/PhysicsMode.hx",18,0xcd29e328)
HX_LOCAL_STACK_FRAME(_hx_pos_c3991dfeead60601_29_toString,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_","toString",0x78edbabe,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_.toString","com/stencyl/models/PhysicsMode.hx",29,0xcd29e328)
HX_LOCAL_STACK_FRAME(_hx_pos_c3991dfeead60601_5_boot,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_","boot",0x66737d44,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_.boot","com/stencyl/models/PhysicsMode.hx",5,0xcd29e328)
HX_LOCAL_STACK_FRAME(_hx_pos_c3991dfeead60601_6_boot,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_","boot",0x66737d44,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_.boot","com/stencyl/models/PhysicsMode.hx",6,0xcd29e328)
HX_LOCAL_STACK_FRAME(_hx_pos_c3991dfeead60601_7_boot,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_","boot",0x66737d44,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_.boot","com/stencyl/models/PhysicsMode.hx",7,0xcd29e328)
namespace com{
namespace stencyl{
namespace models{
namespace _PhysicsMode{

void PhysicsMode_Impl__obj::__construct() { }

Dynamic PhysicsMode_Impl__obj::__CreateEmpty() { return new PhysicsMode_Impl__obj; }

void *PhysicsMode_Impl__obj::_hx_vtable = 0;

Dynamic PhysicsMode_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< PhysicsMode_Impl__obj > _hx_result = new PhysicsMode_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PhysicsMode_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x12b43eaa;
}

int PhysicsMode_Impl__obj::NORMAL_PHYSICS;

int PhysicsMode_Impl__obj::SIMPLE_PHYSICS;

int PhysicsMode_Impl__obj::MINIMAL_PHYSICS;

int PhysicsMode_Impl__obj::_new(int value){
            	HX_STACKFRAME(&_hx_pos_c3991dfeead60601_9__new)
HXDLIN(   9)		int this1 = value;
HXDLIN(   9)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PhysicsMode_Impl__obj,_new,return )

int PhysicsMode_Impl__obj::fromInt(int value){
            	HX_STACKFRAME(&_hx_pos_c3991dfeead60601_13_fromInt)
HXDLIN(  13)		return ::com::stencyl::models::_PhysicsMode::PhysicsMode_Impl__obj::_new(value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PhysicsMode_Impl__obj,fromInt,return )

int PhysicsMode_Impl__obj::fromString(::String value){
            	HX_STACKFRAME(&_hx_pos_c3991dfeead60601_18_fromString)
HXDLIN(  18)		::String _hx_switch_0 = value;
            		if (  (_hx_switch_0==HX_("MINIMAL_PHYSICS",69,97,af,00)) ){
HXLINE(  22)			return (int)2;
HXDLIN(  22)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("NORMAL_PHYSICS",4f,83,de,93)) ){
HXLINE(  20)			return (int)0;
HXDLIN(  20)			goto _hx_goto_2;
            		}
            		if (  (_hx_switch_0==HX_("SIMPLE_PHYSICS",5a,98,35,77)) ){
HXLINE(  21)			return (int)1;
HXDLIN(  21)			goto _hx_goto_2;
            		}
            		/* default */{
HXLINE(  23)			return (int)0;
            		}
            		_hx_goto_2:;
HXLINE(  18)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PhysicsMode_Impl__obj,fromString,return )

::String PhysicsMode_Impl__obj::toString(int this1){
            	HX_STACKFRAME(&_hx_pos_c3991dfeead60601_29_toString)
HXDLIN(  29)		switch((int)(this1)){
            			case (int)0: {
HXLINE(  31)				return HX_("NORMAL_PHYSICS",4f,83,de,93);
            			}
            			break;
            			case (int)1: {
HXLINE(  32)				return HX_("SIMPLE_PHYSICS",5a,98,35,77);
            			}
            			break;
            			case (int)2: {
HXLINE(  33)				return HX_("MINIMAL_PHYSICS",69,97,af,00);
            			}
            			break;
            			default:{
HXLINE(  34)				return HX_("NORMAL_PHYSICS",4f,83,de,93);
            			}
            		}
HXLINE(  29)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(PhysicsMode_Impl__obj,toString,return )


PhysicsMode_Impl__obj::PhysicsMode_Impl__obj()
{
}

bool PhysicsMode_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fromInt") ) { outValue = fromInt_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *PhysicsMode_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo PhysicsMode_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &PhysicsMode_Impl__obj::NORMAL_PHYSICS,HX_HCSTRING("NORMAL_PHYSICS","\x4f","\x83","\xde","\x93")},
	{hx::fsInt,(void *) &PhysicsMode_Impl__obj::SIMPLE_PHYSICS,HX_HCSTRING("SIMPLE_PHYSICS","\x5a","\x98","\x35","\x77")},
	{hx::fsInt,(void *) &PhysicsMode_Impl__obj::MINIMAL_PHYSICS,HX_HCSTRING("MINIMAL_PHYSICS","\x69","\x97","\xaf","\x00")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void PhysicsMode_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(PhysicsMode_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(PhysicsMode_Impl__obj::NORMAL_PHYSICS,"NORMAL_PHYSICS");
	HX_MARK_MEMBER_NAME(PhysicsMode_Impl__obj::SIMPLE_PHYSICS,"SIMPLE_PHYSICS");
	HX_MARK_MEMBER_NAME(PhysicsMode_Impl__obj::MINIMAL_PHYSICS,"MINIMAL_PHYSICS");
};

#ifdef HXCPP_VISIT_ALLOCS
static void PhysicsMode_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(PhysicsMode_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(PhysicsMode_Impl__obj::NORMAL_PHYSICS,"NORMAL_PHYSICS");
	HX_VISIT_MEMBER_NAME(PhysicsMode_Impl__obj::SIMPLE_PHYSICS,"SIMPLE_PHYSICS");
	HX_VISIT_MEMBER_NAME(PhysicsMode_Impl__obj::MINIMAL_PHYSICS,"MINIMAL_PHYSICS");
};

#endif

hx::Class PhysicsMode_Impl__obj::__mClass;

static ::String PhysicsMode_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("NORMAL_PHYSICS","\x4f","\x83","\xde","\x93"),
	HX_HCSTRING("SIMPLE_PHYSICS","\x5a","\x98","\x35","\x77"),
	HX_HCSTRING("MINIMAL_PHYSICS","\x69","\x97","\xaf","\x00"),
	HX_HCSTRING("_new","\x61","\x15","\x1f","\x3f"),
	HX_HCSTRING("fromInt","\xa5","\xdd","\xfa","\x57"),
	HX_HCSTRING("fromString","\xdb","\x2d","\x74","\x54"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null())
};

void PhysicsMode_Impl__obj::__register()
{
	hx::Object *dummy = new PhysicsMode_Impl__obj;
	PhysicsMode_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.models._PhysicsMode.PhysicsMode_Impl_","\x9c","\x00","\xe3","\x3f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &PhysicsMode_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = PhysicsMode_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(PhysicsMode_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< PhysicsMode_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = PhysicsMode_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PhysicsMode_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PhysicsMode_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void PhysicsMode_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_c3991dfeead60601_5_boot)
HXDLIN(   5)		NORMAL_PHYSICS = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c3991dfeead60601_6_boot)
HXDLIN(   6)		SIMPLE_PHYSICS = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_c3991dfeead60601_7_boot)
HXDLIN(   7)		MINIMAL_PHYSICS = (int)2;
            	}
}

} // end namespace com
} // end namespace stencyl
} // end namespace models
} // end namespace _PhysicsMode
