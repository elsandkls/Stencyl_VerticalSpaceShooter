// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_Engine
#include <com/stencyl/Engine.h>
#endif
#ifndef INCLUDED_com_stencyl_behavior_Attribute
#include <com/stencyl/behavior/Attribute.h>
#endif
#ifndef INCLUDED_com_stencyl_behavior_Behavior
#include <com/stencyl/behavior/Behavior.h>
#endif
#ifndef INCLUDED_com_stencyl_io_AttributeValues
#include <com/stencyl/io/AttributeValues.h>
#endif
#ifndef INCLUDED_com_stencyl_io_BehaviorReader
#include <com/stencyl/io/BehaviorReader.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_snippet_MbsAttributeDef
#include <com/stencyl/io/mbs/snippet/MbsAttributeDef.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_snippet_MbsSnippetDef
#include <com/stencyl/io/mbs/snippet/MbsSnippetDef.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0160adf71bde6f71_11_new,"com.stencyl.io.BehaviorReader","new",0xec02b1a0,"com.stencyl.io.BehaviorReader.new","com/stencyl/io/BehaviorReader.hx",11,0x10ae06b1)
HX_LOCAL_STACK_FRAME(_hx_pos_0160adf71bde6f71_15_readBehavior,"com.stencyl.io.BehaviorReader","readBehavior",0xfa52d4c8,"com.stencyl.io.BehaviorReader.readBehavior","com/stencyl/io/BehaviorReader.hx",15,0x10ae06b1)
HX_LOCAL_STACK_FRAME(_hx_pos_0160adf71bde6f71_49_readAttribute,"com.stencyl.io.BehaviorReader","readAttribute",0xd36bdb26,"com.stencyl.io.BehaviorReader.readAttribute","com/stencyl/io/BehaviorReader.hx",49,0x10ae06b1)
namespace com{
namespace stencyl{
namespace io{

void BehaviorReader_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_0160adf71bde6f71_11_new)
            	}

Dynamic BehaviorReader_obj::__CreateEmpty() { return new BehaviorReader_obj; }

void *BehaviorReader_obj::_hx_vtable = 0;

Dynamic BehaviorReader_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< BehaviorReader_obj > _hx_result = new BehaviorReader_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool BehaviorReader_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x14a70d46;
}

 ::com::stencyl::behavior::Behavior BehaviorReader_obj::readBehavior( ::com::stencyl::io::mbs::snippet::MbsSnippetDef r){
            	HX_GC_STACKFRAME(&_hx_pos_0160adf71bde6f71_15_readBehavior)
HXLINE(  16)		int elementID = r->getId();
HXLINE(  17)		::String name = r->getName();
HXLINE(  18)		::String classname = r->getClassname();
HXLINE(  19)		bool isEvent = r->getAttachedEvent();
HXLINE(  21)		 ::haxe::ds::StringMap attributes =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  22)		::String type = r->getType();
HXLINE(  24)		 ::mbs::io::MbsList attrList = r->getAttributes();
HXLINE(  25)		{
HXLINE(  25)			int _g1 = (int)0;
HXDLIN(  25)			int _g = attrList->length();
HXDLIN(  25)			while((_g1 < _g)){
HXLINE(  25)				_g1 = (_g1 + (int)1);
HXDLIN(  25)				int i = (_g1 - (int)1);
HXLINE(  27)				 ::com::stencyl::io::mbs::snippet::MbsAttributeDef attrReader = attrList->getNextObject().StaticCast<  ::com::stencyl::io::mbs::snippet::MbsAttributeDef >();
HXLINE(  28)				{
HXLINE(  28)					::String key = (HX_("",00,00,00,00) + attrReader->getId());
HXDLIN(  28)					attributes->set(key,::com::stencyl::io::BehaviorReader_obj::readAttribute(attrReader,isEvent));
            				}
            			}
            		}
HXLINE(  31)		 ::com::stencyl::behavior::Behavior b =  ::com::stencyl::behavior::Behavior_obj::__alloc( HX_CTX ,null(),null(),elementID,name,classname,true,true,attributes,type,isEvent);
HXLINE(  45)		return b;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(BehaviorReader_obj,readBehavior,return )

 ::com::stencyl::behavior::Attribute BehaviorReader_obj::readAttribute( ::com::stencyl::io::mbs::snippet::MbsAttributeDef r,bool isEvent){
            	HX_GC_STACKFRAME(&_hx_pos_0160adf71bde6f71_49_readAttribute)
HXLINE(  50)		int ID = r->getId();
HXLINE(  51)		::String fieldName = r->getName();
HXLINE(  52)		::String fullName = r->getFullname();
HXLINE(  53)		bool hidden;
HXDLIN(  53)		if (!(isEvent)) {
HXLINE(  53)			hidden = r->getHidden();
            		}
            		else {
HXLINE(  53)			hidden = true;
            		}
HXLINE(  54)		::String type = r->getType();
HXLINE(  55)		 ::Dynamic defaultValue = ::com::stencyl::io::AttributeValues_obj::readAttributeDef(type,r);
HXLINE(  57)		return  ::com::stencyl::behavior::Attribute_obj::__alloc( HX_CTX ,ID,fieldName,fullName,defaultValue,type,null(),hidden);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(BehaviorReader_obj,readAttribute,return )


BehaviorReader_obj::BehaviorReader_obj()
{
}

bool BehaviorReader_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"readBehavior") ) { outValue = readBehavior_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"readAttribute") ) { outValue = readAttribute_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *BehaviorReader_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *BehaviorReader_obj_sStaticStorageInfo = 0;
#endif

static void BehaviorReader_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(BehaviorReader_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void BehaviorReader_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(BehaviorReader_obj::__mClass,"__mClass");
};

#endif

hx::Class BehaviorReader_obj::__mClass;

static ::String BehaviorReader_obj_sStaticFields[] = {
	HX_HCSTRING("readBehavior","\x08","\xde","\xc7","\x45"),
	HX_HCSTRING("readAttribute","\xe6","\xe9","\x5e","\x8e"),
	::String(null())
};

void BehaviorReader_obj::__register()
{
	hx::Object *dummy = new BehaviorReader_obj;
	BehaviorReader_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.BehaviorReader","\xae","\xa1","\xa9","\x91");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &BehaviorReader_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = BehaviorReader_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(BehaviorReader_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< BehaviorReader_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = BehaviorReader_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BehaviorReader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BehaviorReader_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
