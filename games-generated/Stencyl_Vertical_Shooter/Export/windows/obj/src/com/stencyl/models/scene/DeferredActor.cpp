// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_models_Resource
#include <com/stencyl/models/Resource.h>
#endif
#ifndef INCLUDED_com_stencyl_models_actor_ActorType
#include <com/stencyl/models/actor/ActorType.h>
#endif
#ifndef INCLUDED_com_stencyl_models_scene_DeferredActor
#include <com/stencyl/models/scene/DeferredActor.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0939752451e6eb2e_16_new,"com.stencyl.models.scene.DeferredActor","new",0x8698d691,"com.stencyl.models.scene.DeferredActor.new","com/stencyl/models/scene/DeferredActor.hx",16,0xe096fa7f)
namespace com{
namespace stencyl{
namespace models{
namespace scene{

void DeferredActor_obj::__construct( ::com::stencyl::models::actor::ActorType type,Float x,Float y,int layer){
            	HX_STACKFRAME(&_hx_pos_0939752451e6eb2e_16_new)
HXLINE(  17)		this->type = type;
HXLINE(  18)		this->x = x;
HXLINE(  19)		this->y = y;
HXLINE(  20)		this->layer = layer;
            	}

Dynamic DeferredActor_obj::__CreateEmpty() { return new DeferredActor_obj; }

void *DeferredActor_obj::_hx_vtable = 0;

Dynamic DeferredActor_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DeferredActor_obj > _hx_result = new DeferredActor_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool DeferredActor_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x12123bc3;
}


hx::ObjectPtr< DeferredActor_obj > DeferredActor_obj::__new( ::com::stencyl::models::actor::ActorType type,Float x,Float y,int layer) {
	hx::ObjectPtr< DeferredActor_obj > __this = new DeferredActor_obj();
	__this->__construct(type,x,y,layer);
	return __this;
}

hx::ObjectPtr< DeferredActor_obj > DeferredActor_obj::__alloc(hx::Ctx *_hx_ctx, ::com::stencyl::models::actor::ActorType type,Float x,Float y,int layer) {
	DeferredActor_obj *__this = (DeferredActor_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DeferredActor_obj), true, "com.stencyl.models.scene.DeferredActor"));
	*(void **)__this = DeferredActor_obj::_hx_vtable;
	__this->__construct(type,x,y,layer);
	return __this;
}

DeferredActor_obj::DeferredActor_obj()
{
}

void DeferredActor_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DeferredActor);
	HX_MARK_MEMBER_NAME(type,"type");
	HX_MARK_MEMBER_NAME(x,"x");
	HX_MARK_MEMBER_NAME(y,"y");
	HX_MARK_MEMBER_NAME(layer,"layer");
	HX_MARK_END_CLASS();
}

void DeferredActor_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(type,"type");
	HX_VISIT_MEMBER_NAME(x,"x");
	HX_VISIT_MEMBER_NAME(y,"y");
	HX_VISIT_MEMBER_NAME(layer,"layer");
}

hx::Val DeferredActor_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return hx::Val( x ); }
		if (HX_FIELD_EQ(inName,"y") ) { return hx::Val( y ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { return hx::Val( type ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"layer") ) { return hx::Val( layer ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val DeferredActor_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { y=inValue.Cast< Float >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { type=inValue.Cast<  ::com::stencyl::models::actor::ActorType >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"layer") ) { layer=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DeferredActor_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("type","\xba","\xf2","\x08","\x4d"));
	outFields->push(HX_HCSTRING("x","\x78","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("y","\x79","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("layer","\xd1","\x81","\xc0","\x6f"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo DeferredActor_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::com::stencyl::models::actor::ActorType*/ ,(int)offsetof(DeferredActor_obj,type),HX_HCSTRING("type","\xba","\xf2","\x08","\x4d")},
	{hx::fsFloat,(int)offsetof(DeferredActor_obj,x),HX_HCSTRING("x","\x78","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(DeferredActor_obj,y),HX_HCSTRING("y","\x79","\x00","\x00","\x00")},
	{hx::fsInt,(int)offsetof(DeferredActor_obj,layer),HX_HCSTRING("layer","\xd1","\x81","\xc0","\x6f")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *DeferredActor_obj_sStaticStorageInfo = 0;
#endif

static ::String DeferredActor_obj_sMemberFields[] = {
	HX_HCSTRING("type","\xba","\xf2","\x08","\x4d"),
	HX_HCSTRING("x","\x78","\x00","\x00","\x00"),
	HX_HCSTRING("y","\x79","\x00","\x00","\x00"),
	HX_HCSTRING("layer","\xd1","\x81","\xc0","\x6f"),
	::String(null()) };

static void DeferredActor_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DeferredActor_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DeferredActor_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DeferredActor_obj::__mClass,"__mClass");
};

#endif

hx::Class DeferredActor_obj::__mClass;

void DeferredActor_obj::__register()
{
	hx::Object *dummy = new DeferredActor_obj;
	DeferredActor_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.models.scene.DeferredActor","\x1f","\x3a","\xcc","\xfa");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = DeferredActor_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(DeferredActor_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< DeferredActor_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DeferredActor_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DeferredActor_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DeferredActor_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace models
} // end namespace scene
