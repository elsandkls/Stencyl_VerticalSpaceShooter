// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_AbstractReader
#include <com/stencyl/io/AbstractReader.h>
#endif
#ifndef INCLUDED_com_stencyl_io_SoundReader
#include <com/stencyl/io/SoundReader.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_MbsMusic
#include <com/stencyl/io/mbs/MbsMusic.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_MbsResource
#include <com/stencyl/io/mbs/MbsResource.h>
#endif
#ifndef INCLUDED_com_stencyl_models_Resource
#include <com/stencyl/models/Resource.h>
#endif
#ifndef INCLUDED_com_stencyl_models_Sound
#include <com/stencyl/models/Sound.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2fe12eec86d7b345_13_new,"com.stencyl.io.SoundReader","new",0x7649210b,"com.stencyl.io.SoundReader.new","com/stencyl/io/SoundReader.hx",13,0x650efd44)
HX_LOCAL_STACK_FRAME(_hx_pos_2fe12eec86d7b345_18_accepts,"com.stencyl.io.SoundReader","accepts",0x331c9696,"com.stencyl.io.SoundReader.accepts","com/stencyl/io/SoundReader.hx",18,0x650efd44)
HX_LOCAL_STACK_FRAME(_hx_pos_2fe12eec86d7b345_22_read,"com.stencyl.io.SoundReader","read",0x0c58904b,"com.stencyl.io.SoundReader.read","com/stencyl/io/SoundReader.hx",22,0x650efd44)
namespace com{
namespace stencyl{
namespace io{

void SoundReader_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_2fe12eec86d7b345_13_new)
            	}

Dynamic SoundReader_obj::__CreateEmpty() { return new SoundReader_obj; }

void *SoundReader_obj::_hx_vtable = 0;

Dynamic SoundReader_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SoundReader_obj > _hx_result = new SoundReader_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SoundReader_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3ef12501;
}

static ::com::stencyl::io::AbstractReader_obj _hx_com_stencyl_io_SoundReader__hx_com_stencyl_io_AbstractReader= {
	( bool (hx::Object::*)(::String))&::com::stencyl::io::SoundReader_obj::accepts,
	(  ::com::stencyl::models::Resource (hx::Object::*)( ::Dynamic))&::com::stencyl::io::SoundReader_obj::read,
};

void *SoundReader_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0xf08c5996: return &_hx_com_stencyl_io_SoundReader__hx_com_stencyl_io_AbstractReader;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

bool SoundReader_obj::accepts(::String type){
            	HX_STACKFRAME(&_hx_pos_2fe12eec86d7b345_18_accepts)
HXDLIN(  18)		return (type == ::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC->getName());
            	}


HX_DEFINE_DYNAMIC_FUNC1(SoundReader_obj,accepts,return )

 ::com::stencyl::models::Resource SoundReader_obj::read( ::Dynamic obj){
            	HX_GC_STACKFRAME(&_hx_pos_2fe12eec86d7b345_22_read)
HXLINE(  25)		 ::com::stencyl::io::mbs::MbsMusic r = ( ( ::com::stencyl::io::mbs::MbsMusic)(obj) );
HXLINE(  27)		bool streaming = r->getStream();
HXLINE(  28)		bool looping = r->getLoop();
HXLINE(  29)		Float panning = r->getPan();
HXLINE(  30)		Float volume = r->getVolume();
HXLINE(  31)		::String ext = r->getType();
HXLINE(  32)		int s = r->getId();
HXDLIN(  32)		::String s1 = r->getName();
HXDLIN(  32)		 ::com::stencyl::models::Sound s2 =  ::com::stencyl::models::Sound_obj::__alloc( HX_CTX ,s,s1,streaming,looping,panning,volume,ext,r->getAtlasID());
HXLINE(  34)		return s2;
            	}


HX_DEFINE_DYNAMIC_FUNC1(SoundReader_obj,read,return )


hx::ObjectPtr< SoundReader_obj > SoundReader_obj::__new() {
	hx::ObjectPtr< SoundReader_obj > __this = new SoundReader_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< SoundReader_obj > SoundReader_obj::__alloc(hx::Ctx *_hx_ctx) {
	SoundReader_obj *__this = (SoundReader_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SoundReader_obj), false, "com.stencyl.io.SoundReader"));
	*(void **)__this = SoundReader_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

SoundReader_obj::SoundReader_obj()
{
}

hx::Val SoundReader_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"read") ) { return hx::Val( read_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"accepts") ) { return hx::Val( accepts_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *SoundReader_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *SoundReader_obj_sStaticStorageInfo = 0;
#endif

static ::String SoundReader_obj_sMemberFields[] = {
	HX_HCSTRING("accepts","\x6b","\x14","\xba","\x9a"),
	HX_HCSTRING("read","\x56","\x4b","\xa7","\x4b"),
	::String(null()) };

static void SoundReader_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SoundReader_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SoundReader_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SoundReader_obj::__mClass,"__mClass");
};

#endif

hx::Class SoundReader_obj::__mClass;

void SoundReader_obj::__register()
{
	hx::Object *dummy = new SoundReader_obj;
	SoundReader_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.SoundReader","\x99","\x3f","\x33","\xeb");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = SoundReader_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SoundReader_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SoundReader_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SoundReader_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SoundReader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SoundReader_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
