// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_AbstractReader
#include <com/stencyl/io/AbstractReader.h>
#endif
#ifndef INCLUDED_com_stencyl_models_Resource
#include <com/stencyl/models/Resource.h>
#endif

namespace com{
namespace stencyl{
namespace io{


static ::String AbstractReader_obj_sMemberFields[] = {
	HX_HCSTRING("accepts","\x6b","\x14","\xba","\x9a"),
	HX_HCSTRING("read","\x56","\x4b","\xa7","\x4b"),
	::String(null()) };

static void AbstractReader_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(AbstractReader_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void AbstractReader_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(AbstractReader_obj::__mClass,"__mClass");
};

#endif

hx::Class AbstractReader_obj::__mClass;

void AbstractReader_obj::__register()
{
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.AbstractReader","\xfe","\xed","\x8e","\x6d");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mMarkFunc = AbstractReader_obj_sMarkStatics;
	__mClass->mMembers = hx::Class_obj::dupFunctions(AbstractReader_obj_sMemberFields);
	__mClass->mCanCast = hx::TIsInterface< (int)0xf08c5996 >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = AbstractReader_obj_sVisitStatics;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
