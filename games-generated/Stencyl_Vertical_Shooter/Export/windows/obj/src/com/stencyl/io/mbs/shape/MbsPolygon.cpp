// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsPoint
#include <com/stencyl/io/mbs/shape/MbsPoint.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsPolygon
#include <com/stencyl/io/mbs/shape/MbsPolygon.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsShape
#include <com/stencyl/io/mbs/shape/MbsShape.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsField
#include <mbs/core/MbsField.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6172513709e27d56_43_new,"com.stencyl.io.mbs.shape.MbsPolygon","new",0xc8b89aa4,"com.stencyl.io.mbs.shape.MbsPolygon.new","com/stencyl/io/mbs/shape/MbsPolygon.hx",43,0x95f980eb)
HX_LOCAL_STACK_FRAME(_hx_pos_6172513709e27d56_37_getMbsType,"com.stencyl.io.mbs.shape.MbsPolygon","getMbsType",0x6d840d9e,"com.stencyl.io.mbs.shape.MbsPolygon.getMbsType","com/stencyl/io/mbs/shape/MbsPolygon.hx",37,0x95f980eb)
HX_LOCAL_STACK_FRAME(_hx_pos_6172513709e27d56_50_allocateNew,"com.stencyl.io.mbs.shape.MbsPolygon","allocateNew",0xfaabf7e7,"com.stencyl.io.mbs.shape.MbsPolygon.allocateNew","com/stencyl/io/mbs/shape/MbsPolygon.hx",50,0x95f980eb)
HX_LOCAL_STACK_FRAME(_hx_pos_6172513709e27d56_54_getPoints,"com.stencyl.io.mbs.shape.MbsPolygon","getPoints",0x9a50709d,"com.stencyl.io.mbs.shape.MbsPolygon.getPoints","com/stencyl/io/mbs/shape/MbsPolygon.hx",54,0x95f980eb)
HX_LOCAL_STACK_FRAME(_hx_pos_6172513709e27d56_60_createPoints,"com.stencyl.io.mbs.shape.MbsPolygon","createPoints",0xfafd1f7b,"com.stencyl.io.mbs.shape.MbsPolygon.createPoints","com/stencyl/io/mbs/shape/MbsPolygon.hx",60,0x95f980eb)
HX_LOCAL_STACK_FRAME(_hx_pos_6172513709e27d56_23_initializeType,"com.stencyl.io.mbs.shape.MbsPolygon","initializeType",0xde0ccc66,"com.stencyl.io.mbs.shape.MbsPolygon.initializeType","com/stencyl/io/mbs/shape/MbsPolygon.hx",23,0x95f980eb)
HX_LOCAL_STACK_FRAME(_hx_pos_6172513709e27d56_18_initializeType,"com.stencyl.io.mbs.shape.MbsPolygon","initializeType",0xde0ccc66,"com.stencyl.io.mbs.shape.MbsPolygon.initializeType","com/stencyl/io/mbs/shape/MbsPolygon.hx",18,0x95f980eb)
HX_LOCAL_STACK_FRAME(_hx_pos_6172513709e27d56_32_new_MbsPolygon_list,"com.stencyl.io.mbs.shape.MbsPolygon","new_MbsPolygon_list",0x20880526,"com.stencyl.io.mbs.shape.MbsPolygon.new_MbsPolygon_list","com/stencyl/io/mbs/shape/MbsPolygon.hx",32,0x95f980eb)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace shape{

void MbsPolygon_obj::__construct(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_6172513709e27d56_43_new)
HXLINE(  44)		super::__construct(data);
HXLINE(  45)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::shape::MbsPoint_obj::MBS_POINT;
HXDLIN(  45)		this->_points =  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::shape::MbsPoint_obj::__alloc( HX_CTX ,data));
            	}

Dynamic MbsPolygon_obj::__CreateEmpty() { return new MbsPolygon_obj; }

void *MbsPolygon_obj::_hx_vtable = 0;

Dynamic MbsPolygon_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsPolygon_obj > _hx_result = new MbsPolygon_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsPolygon_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1968de7c) {
		if (inClassId<=(int)0x17b72d64) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x17b72d64;
		} else {
			return inClassId==(int)0x1968de7c;
		}
	} else {
		return inClassId==(int)0x3c5173db;
	}
}

 ::mbs::core::MbsType MbsPolygon_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_6172513709e27d56_37_getMbsType)
HXDLIN(  37)		return ::com::stencyl::io::mbs::shape::MbsPolygon_obj::MBS_POLYGON;
            	}


void MbsPolygon_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_6172513709e27d56_50_allocateNew)
HXDLIN(  50)		::Dynamic _hx_tmp = this->data;
HXDLIN(  50)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::com::stencyl::io::mbs::shape::MbsPolygon_obj::MBS_POLYGON->getSize()));
            	}


 ::mbs::io::MbsList MbsPolygon_obj::getPoints(){
            	HX_STACKFRAME(&_hx_pos_6172513709e27d56_54_getPoints)
HXLINE(  55)		 ::mbs::io::MbsList _hx_tmp = this->_points;
HXDLIN(  55)		::Dynamic _hx_tmp1 = this->data;
HXDLIN(  55)		_hx_tmp->setAddress(::mbs::io::MbsIO_obj::readInt(_hx_tmp1,(this->address + ::com::stencyl::io::mbs::shape::MbsPolygon_obj::points->address)));
HXLINE(  56)		return this->_points;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsPolygon_obj,getPoints,return )

 ::mbs::io::MbsList MbsPolygon_obj::createPoints(int _length){
            	HX_STACKFRAME(&_hx_pos_6172513709e27d56_60_createPoints)
HXLINE(  61)		this->_points->allocateNew(_length);
HXLINE(  62)		::Dynamic _hx_tmp = this->data;
HXDLIN(  62)		int _hx_tmp1 = (this->address + ::com::stencyl::io::mbs::shape::MbsPolygon_obj::points->address);
HXDLIN(  62)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,_hx_tmp1,this->_points->getAddress());
HXLINE(  63)		return this->_points;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsPolygon_obj,createPoints,return )

 ::mbs::core::MbsField MbsPolygon_obj::points;

 ::mbs::core::ComposedType MbsPolygon_obj::MBS_POLYGON;

void MbsPolygon_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_6172513709e27d56_23_initializeType)
HXLINE(  23)			return  ::com::stencyl::io::mbs::shape::MbsPolygon_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_6172513709e27d56_18_initializeType)
HXLINE(  19)		if (hx::IsNotNull( ::com::stencyl::io::mbs::shape::MbsPolygon_obj::MBS_POLYGON )) {
HXLINE(  19)			return;
            		}
HXLINE(  20)		::com::stencyl::io::mbs::shape::MbsShape_obj::initializeType();
HXLINE(  22)		::com::stencyl::io::mbs::shape::MbsPolygon_obj::MBS_POLYGON =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsPolygon",bc,ae,5b,28));
HXLINE(  23)		::com::stencyl::io::mbs::shape::MbsPolygon_obj::MBS_POLYGON->setInstantiator( ::Dynamic(new _hx_Closure_0()));
HXLINE(  24)		::com::stencyl::io::mbs::shape::MbsPolygon_obj::MBS_POLYGON->inherit(::com::stencyl::io::mbs::shape::MbsShape_obj::MBS_SHAPE);
HXLINE(  26)		::com::stencyl::io::mbs::shape::MbsPolygon_obj::points = ::com::stencyl::io::mbs::shape::MbsPolygon_obj::MBS_POLYGON->createField(HX_("points",23,12,2e,f7),::mbs::core::MbsTypes_obj::LIST);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsPolygon_obj,initializeType,(void))

 ::mbs::io::MbsList MbsPolygon_obj::new_MbsPolygon_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_6172513709e27d56_32_new_MbsPolygon_list)
HXDLIN(  32)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::shape::MbsPolygon_obj::MBS_POLYGON;
HXDLIN(  32)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::shape::MbsPolygon_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsPolygon_obj,new_MbsPolygon_list,return )


hx::ObjectPtr< MbsPolygon_obj > MbsPolygon_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsPolygon_obj > __this = new MbsPolygon_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsPolygon_obj > MbsPolygon_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsPolygon_obj *__this = (MbsPolygon_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsPolygon_obj), true, "com.stencyl.io.mbs.shape.MbsPolygon"));
	*(void **)__this = MbsPolygon_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsPolygon_obj::MbsPolygon_obj()
{
}

void MbsPolygon_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MbsPolygon);
	HX_MARK_MEMBER_NAME(_points,"_points");
	 ::mbs::core::MbsObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MbsPolygon_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_points,"_points");
	 ::mbs::core::MbsObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val MbsPolygon_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"_points") ) { return hx::Val( _points ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getPoints") ) { return hx::Val( getPoints_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"createPoints") ) { return hx::Val( createPoints_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsPolygon_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"points") ) { outValue = ( points ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"MBS_POLYGON") ) { outValue = ( MBS_POLYGON ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"new_MbsPolygon_list") ) { outValue = new_MbsPolygon_list_dyn(); return true; }
	}
	return false;
}

hx::Val MbsPolygon_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"_points") ) { _points=inValue.Cast<  ::mbs::io::MbsList >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool MbsPolygon_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"points") ) { points=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"MBS_POLYGON") ) { MBS_POLYGON=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
	}
	return false;
}

void MbsPolygon_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("_points","\xc2","\x23","\xa5","\x65"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo MbsPolygon_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::mbs::io::MbsList*/ ,(int)offsetof(MbsPolygon_obj,_points),HX_HCSTRING("_points","\xc2","\x23","\xa5","\x65")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo MbsPolygon_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsPolygon_obj::points,HX_HCSTRING("points","\x23","\x12","\x2e","\xf7")},
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsPolygon_obj::MBS_POLYGON,HX_HCSTRING("MBS_POLYGON","\x39","\x65","\x7b","\x86")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsPolygon_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("_points","\xc2","\x23","\xa5","\x65"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	HX_HCSTRING("getPoints","\x59","\x9b","\x84","\x73"),
	HX_HCSTRING("createPoints","\x3f","\x52","\x83","\x19"),
	::String(null()) };

static void MbsPolygon_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsPolygon_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsPolygon_obj::points,"points");
	HX_MARK_MEMBER_NAME(MbsPolygon_obj::MBS_POLYGON,"MBS_POLYGON");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsPolygon_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsPolygon_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsPolygon_obj::points,"points");
	HX_VISIT_MEMBER_NAME(MbsPolygon_obj::MBS_POLYGON,"MBS_POLYGON");
};

#endif

hx::Class MbsPolygon_obj::__mClass;

static ::String MbsPolygon_obj_sStaticFields[] = {
	HX_HCSTRING("points","\x23","\x12","\x2e","\xf7"),
	HX_HCSTRING("MBS_POLYGON","\x39","\x65","\x7b","\x86"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsPolygon_list","\xe2","\x72","\xab","\x23"),
	::String(null())
};

void MbsPolygon_obj::__register()
{
	hx::Object *dummy = new MbsPolygon_obj;
	MbsPolygon_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.shape.MbsPolygon","\xb2","\xb8","\x6d","\xb7");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsPolygon_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsPolygon_obj::__SetStatic;
	__mClass->mMarkFunc = MbsPolygon_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsPolygon_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsPolygon_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsPolygon_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsPolygon_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsPolygon_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsPolygon_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace shape
