// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_models_collision_Mask
#include <com/stencyl/models/collision/Mask.h>
#endif
#ifndef INCLUDED_com_stencyl_models_scene_Wireframe
#include <com/stencyl/models/scene/Wireframe.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6df8772c4b976bcf_18_new,"com.stencyl.models.scene.Wireframe","new",0xe06fbd83,"com.stencyl.models.scene.Wireframe.new","com/stencyl/models/scene/Wireframe.hx",18,0xbae177cd)
namespace com{
namespace stencyl{
namespace models{
namespace scene{

void Wireframe_obj::__construct(Float x,Float y,Float width,Float height, ::Dynamic shape, ::com::stencyl::models::collision::Mask shape2){
            	HX_STACKFRAME(&_hx_pos_6df8772c4b976bcf_18_new)
HXLINE(  19)		this->x = x;
HXLINE(  20)		this->y = y;
HXLINE(  21)		this->width = width;
HXLINE(  22)		this->height = height;
HXLINE(  23)		this->shape = shape;
HXLINE(  24)		this->shape2 = shape2;
            	}

Dynamic Wireframe_obj::__CreateEmpty() { return new Wireframe_obj; }

void *Wireframe_obj::_hx_vtable = 0;

Dynamic Wireframe_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Wireframe_obj > _hx_result = new Wireframe_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5]);
	return _hx_result;
}

bool Wireframe_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x43b79fb5;
}


hx::ObjectPtr< Wireframe_obj > Wireframe_obj::__new(Float x,Float y,Float width,Float height, ::Dynamic shape, ::com::stencyl::models::collision::Mask shape2) {
	hx::ObjectPtr< Wireframe_obj > __this = new Wireframe_obj();
	__this->__construct(x,y,width,height,shape,shape2);
	return __this;
}

hx::ObjectPtr< Wireframe_obj > Wireframe_obj::__alloc(hx::Ctx *_hx_ctx,Float x,Float y,Float width,Float height, ::Dynamic shape, ::com::stencyl::models::collision::Mask shape2) {
	Wireframe_obj *__this = (Wireframe_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Wireframe_obj), true, "com.stencyl.models.scene.Wireframe"));
	*(void **)__this = Wireframe_obj::_hx_vtable;
	__this->__construct(x,y,width,height,shape,shape2);
	return __this;
}

Wireframe_obj::Wireframe_obj()
{
}

void Wireframe_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Wireframe);
	HX_MARK_MEMBER_NAME(x,"x");
	HX_MARK_MEMBER_NAME(y,"y");
	HX_MARK_MEMBER_NAME(shape,"shape");
	HX_MARK_MEMBER_NAME(shape2,"shape2");
	HX_MARK_MEMBER_NAME(width,"width");
	HX_MARK_MEMBER_NAME(height,"height");
	HX_MARK_END_CLASS();
}

void Wireframe_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(x,"x");
	HX_VISIT_MEMBER_NAME(y,"y");
	HX_VISIT_MEMBER_NAME(shape,"shape");
	HX_VISIT_MEMBER_NAME(shape2,"shape2");
	HX_VISIT_MEMBER_NAME(width,"width");
	HX_VISIT_MEMBER_NAME(height,"height");
}

hx::Val Wireframe_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return hx::Val( x ); }
		if (HX_FIELD_EQ(inName,"y") ) { return hx::Val( y ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"shape") ) { return hx::Val( shape ); }
		if (HX_FIELD_EQ(inName,"width") ) { return hx::Val( width ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"shape2") ) { return hx::Val( shape2 ); }
		if (HX_FIELD_EQ(inName,"height") ) { return hx::Val( height ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val Wireframe_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { y=inValue.Cast< Float >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"shape") ) { shape=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"width") ) { width=inValue.Cast< Float >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"shape2") ) { shape2=inValue.Cast<  ::com::stencyl::models::collision::Mask >(); return inValue; }
		if (HX_FIELD_EQ(inName,"height") ) { height=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Wireframe_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("x","\x78","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("y","\x79","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("shape","\x21","\xe3","\x1c","\x7c"));
	outFields->push(HX_HCSTRING("shape2","\xf1","\xd9","\x29","\x1d"));
	outFields->push(HX_HCSTRING("width","\x06","\xb6","\x62","\xca"));
	outFields->push(HX_HCSTRING("height","\xe7","\x07","\x4c","\x02"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Wireframe_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(Wireframe_obj,x),HX_HCSTRING("x","\x78","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(Wireframe_obj,y),HX_HCSTRING("y","\x79","\x00","\x00","\x00")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Wireframe_obj,shape),HX_HCSTRING("shape","\x21","\xe3","\x1c","\x7c")},
	{hx::fsObject /*::com::stencyl::models::collision::Mask*/ ,(int)offsetof(Wireframe_obj,shape2),HX_HCSTRING("shape2","\xf1","\xd9","\x29","\x1d")},
	{hx::fsFloat,(int)offsetof(Wireframe_obj,width),HX_HCSTRING("width","\x06","\xb6","\x62","\xca")},
	{hx::fsFloat,(int)offsetof(Wireframe_obj,height),HX_HCSTRING("height","\xe7","\x07","\x4c","\x02")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Wireframe_obj_sStaticStorageInfo = 0;
#endif

static ::String Wireframe_obj_sMemberFields[] = {
	HX_HCSTRING("x","\x78","\x00","\x00","\x00"),
	HX_HCSTRING("y","\x79","\x00","\x00","\x00"),
	HX_HCSTRING("shape","\x21","\xe3","\x1c","\x7c"),
	HX_HCSTRING("shape2","\xf1","\xd9","\x29","\x1d"),
	HX_HCSTRING("width","\x06","\xb6","\x62","\xca"),
	HX_HCSTRING("height","\xe7","\x07","\x4c","\x02"),
	::String(null()) };

static void Wireframe_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Wireframe_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Wireframe_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Wireframe_obj::__mClass,"__mClass");
};

#endif

hx::Class Wireframe_obj::__mClass;

void Wireframe_obj::__register()
{
	hx::Object *dummy = new Wireframe_obj;
	Wireframe_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.models.scene.Wireframe","\x11","\x40","\xc4","\xa0");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Wireframe_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Wireframe_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Wireframe_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Wireframe_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Wireframe_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Wireframe_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace models
} // end namespace scene
