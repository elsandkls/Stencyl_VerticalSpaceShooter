// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_utils_motion_EasingFunction
#include <com/stencyl/utils/motion/EasingFunction.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_TweenFloat
#include <com/stencyl/utils/motion/TweenFloat.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_TweenObject
#include <com/stencyl/utils/motion/TweenObject.h>
#endif
#ifndef INCLUDED_tweenxcore_FloatTools
#include <tweenxcore/FloatTools.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_897c6bed4ebcf1fa_13_new,"com.stencyl.utils.motion.TweenFloat","new",0x034ad5cf,"com.stencyl.utils.motion.TweenFloat.new","com/stencyl/utils/motion/TweenFloat.hx",13,0xe331f5e3)
HX_LOCAL_STACK_FRAME(_hx_pos_897c6bed4ebcf1fa_17_tween,"com.stencyl.utils.motion.TweenFloat","tween",0x0c47299a,"com.stencyl.utils.motion.TweenFloat.tween","com/stencyl/utils/motion/TweenFloat.hx",17,0xe331f5e3)
HX_LOCAL_STACK_FRAME(_hx_pos_897c6bed4ebcf1fa_29_updateValue,"com.stencyl.utils.motion.TweenFloat","updateValue",0x97017517,"com.stencyl.utils.motion.TweenFloat.updateValue","com/stencyl/utils/motion/TweenFloat.hx",29,0xe331f5e3)
namespace com{
namespace stencyl{
namespace utils{
namespace motion{

void TweenFloat_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_897c6bed4ebcf1fa_13_new)
HXDLIN(  13)		super::__construct();
            	}

Dynamic TweenFloat_obj::__CreateEmpty() { return new TweenFloat_obj; }

void *TweenFloat_obj::_hx_vtable = 0;

Dynamic TweenFloat_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TweenFloat_obj > _hx_result = new TweenFloat_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TweenFloat_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x096df50d) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x096df50d;
	} else {
		return inClassId==(int)0x0ab1d22e;
	}
}

 ::com::stencyl::utils::motion::TweenFloat TweenFloat_obj::tween(Float startValue,Float endValue, ::com::stencyl::utils::motion::EasingFunction easing,int duration){
            	HX_STACKFRAME(&_hx_pos_897c6bed4ebcf1fa_17_tween)
HXLINE(  18)		this->startValue = startValue;
HXLINE(  19)		this->endValue = endValue;
HXLINE(  20)		this->value = startValue;
HXLINE(  22)		this->_tween(easing,duration);
HXLINE(  24)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC4(TweenFloat_obj,tween,return )

void TweenFloat_obj::updateValue(){
            	HX_STACKFRAME(&_hx_pos_897c6bed4ebcf1fa_29_updateValue)
HXDLIN(  29)		 ::com::stencyl::utils::motion::EasingFunction _hx_tmp = this->easing;
HXDLIN(  29)		Float _hx_tmp1 = _hx_tmp->apply(((Float)this->time / (Float)this->duration));
HXDLIN(  29)		this->value = ::tweenxcore::FloatTools_obj::lerp(_hx_tmp1,this->startValue,this->endValue);
            	}



hx::ObjectPtr< TweenFloat_obj > TweenFloat_obj::__new() {
	hx::ObjectPtr< TweenFloat_obj > __this = new TweenFloat_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< TweenFloat_obj > TweenFloat_obj::__alloc(hx::Ctx *_hx_ctx) {
	TweenFloat_obj *__this = (TweenFloat_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TweenFloat_obj), true, "com.stencyl.utils.motion.TweenFloat"));
	*(void **)__this = TweenFloat_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TweenFloat_obj::TweenFloat_obj()
{
}

hx::Val TweenFloat_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { return hx::Val( value ); }
		if (HX_FIELD_EQ(inName,"tween") ) { return hx::Val( tween_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"endValue") ) { return hx::Val( endValue ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"startValue") ) { return hx::Val( startValue ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"updateValue") ) { return hx::Val( updateValue_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TweenFloat_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { value=inValue.Cast< Float >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"endValue") ) { endValue=inValue.Cast< Float >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"startValue") ) { startValue=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TweenFloat_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("startValue","\xaf","\x57","\xcf","\x4d"));
	outFields->push(HX_HCSTRING("endValue","\x96","\x11","\xb6","\x2f"));
	outFields->push(HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo TweenFloat_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(TweenFloat_obj,startValue),HX_HCSTRING("startValue","\xaf","\x57","\xcf","\x4d")},
	{hx::fsFloat,(int)offsetof(TweenFloat_obj,endValue),HX_HCSTRING("endValue","\x96","\x11","\xb6","\x2f")},
	{hx::fsFloat,(int)offsetof(TweenFloat_obj,value),HX_HCSTRING("value","\x71","\x7f","\xb8","\x31")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TweenFloat_obj_sStaticStorageInfo = 0;
#endif

static ::String TweenFloat_obj_sMemberFields[] = {
	HX_HCSTRING("startValue","\xaf","\x57","\xcf","\x4d"),
	HX_HCSTRING("endValue","\x96","\x11","\xb6","\x2f"),
	HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"),
	HX_HCSTRING("tween","\x6b","\xaa","\x70","\x19"),
	HX_HCSTRING("updateValue","\xa8","\xe8","\x50","\x17"),
	::String(null()) };

static void TweenFloat_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TweenFloat_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TweenFloat_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TweenFloat_obj::__mClass,"__mClass");
};

#endif

hx::Class TweenFloat_obj::__mClass;

void TweenFloat_obj::__register()
{
	hx::Object *dummy = new TweenFloat_obj;
	TweenFloat_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.utils.motion.TweenFloat","\x5d","\x42","\x02","\x3d");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TweenFloat_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TweenFloat_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TweenFloat_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TweenFloat_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TweenFloat_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TweenFloat_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace utils
} // end namespace motion
