// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_com_stencyl_behavior_Behavior
#include <com/stencyl/behavior/Behavior.h>
#endif
#ifndef INCLUDED_com_stencyl_behavior_BehaviorManager
#include <com/stencyl/behavior/BehaviorManager.h>
#endif
#ifndef INCLUDED_com_stencyl_behavior_Script
#include <com/stencyl/behavior/Script.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0bda85b94ee6133b_14_new,"com.stencyl.behavior.BehaviorManager","new",0x9a19e580,"com.stencyl.behavior.BehaviorManager.new","com/stencyl/behavior/BehaviorManager.hx",14,0x48cd4c6f)
HX_LOCAL_STACK_FRAME(_hx_pos_0bda85b94ee6133b_20_destroy,"com.stencyl.behavior.BehaviorManager","destroy",0xf04d521a,"com.stencyl.behavior.BehaviorManager.destroy","com/stencyl/behavior/BehaviorManager.hx",20,0x48cd4c6f)
HX_LOCAL_STACK_FRAME(_hx_pos_0bda85b94ee6133b_30_add,"com.stencyl.behavior.BehaviorManager","add",0x9a100741,"com.stencyl.behavior.BehaviorManager.add","com/stencyl/behavior/BehaviorManager.hx",30,0x48cd4c6f)
HX_LOCAL_STACK_FRAME(_hx_pos_0bda85b94ee6133b_36_hasBehavior,"com.stencyl.behavior.BehaviorManager","hasBehavior",0xd8d9ab2c,"com.stencyl.behavior.BehaviorManager.hasBehavior","com/stencyl/behavior/BehaviorManager.hx",36,0x48cd4c6f)
HX_LOCAL_STACK_FRAME(_hx_pos_0bda85b94ee6133b_47_enableBehavior,"com.stencyl.behavior.BehaviorManager","enableBehavior",0xfe987515,"com.stencyl.behavior.BehaviorManager.enableBehavior","com/stencyl/behavior/BehaviorManager.hx",47,0x48cd4c6f)
HX_LOCAL_STACK_FRAME(_hx_pos_0bda85b94ee6133b_72_disableBehavior,"com.stencyl.behavior.BehaviorManager","disableBehavior",0x899623ba,"com.stencyl.behavior.BehaviorManager.disableBehavior","com/stencyl/behavior/BehaviorManager.hx",72,0x48cd4c6f)
HX_LOCAL_STACK_FRAME(_hx_pos_0bda85b94ee6133b_79_isBehaviorEnabled,"com.stencyl.behavior.BehaviorManager","isBehaviorEnabled",0x532b2265,"com.stencyl.behavior.BehaviorManager.isBehaviorEnabled","com/stencyl/behavior/BehaviorManager.hx",79,0x48cd4c6f)
HX_LOCAL_STACK_FRAME(_hx_pos_0bda85b94ee6133b_94_initScripts,"com.stencyl.behavior.BehaviorManager","initScripts",0xe0de9ff8,"com.stencyl.behavior.BehaviorManager.initScripts","com/stencyl/behavior/BehaviorManager.hx",94,0x48cd4c6f)
HX_LOCAL_STACK_FRAME(_hx_pos_0bda85b94ee6133b_106_getAttribute,"com.stencyl.behavior.BehaviorManager","getAttribute",0x2ce55386,"com.stencyl.behavior.BehaviorManager.getAttribute","com/stencyl/behavior/BehaviorManager.hx",106,0x48cd4c6f)
HX_LOCAL_STACK_FRAME(_hx_pos_0bda85b94ee6133b_134_setAttribute,"com.stencyl.behavior.BehaviorManager","setAttribute",0x41de76fa,"com.stencyl.behavior.BehaviorManager.setAttribute","com/stencyl/behavior/BehaviorManager.hx",134,0x48cd4c6f)
HX_LOCAL_STACK_FRAME(_hx_pos_0bda85b94ee6133b_167_call,"com.stencyl.behavior.BehaviorManager","call",0x35467f7e,"com.stencyl.behavior.BehaviorManager.call","com/stencyl/behavior/BehaviorManager.hx",167,0x48cd4c6f)
HX_LOCAL_STACK_FRAME(_hx_pos_0bda85b94ee6133b_218_call2,"com.stencyl.behavior.BehaviorManager","call2",0x68690ef4,"com.stencyl.behavior.BehaviorManager.call2","com/stencyl/behavior/BehaviorManager.hx",218,0x48cd4c6f)
namespace com{
namespace stencyl{
namespace behavior{

void BehaviorManager_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_0bda85b94ee6133b_14_new)
HXLINE(  15)		this->behaviors = ::Array_obj< ::Dynamic>::__new();
HXLINE(  16)		this->cache =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            	}

Dynamic BehaviorManager_obj::__CreateEmpty() { return new BehaviorManager_obj; }

void *BehaviorManager_obj::_hx_vtable = 0;

Dynamic BehaviorManager_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< BehaviorManager_obj > _hx_result = new BehaviorManager_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool BehaviorManager_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x07fc9cd6;
}

void BehaviorManager_obj::destroy(){
            	HX_STACKFRAME(&_hx_pos_0bda85b94ee6133b_20_destroy)
HXLINE(  21)		this->behaviors = null();
HXLINE(  22)		this->cache = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(BehaviorManager_obj,destroy,(void))

void BehaviorManager_obj::add( ::com::stencyl::behavior::Behavior b){
            	HX_STACKFRAME(&_hx_pos_0bda85b94ee6133b_30_add)
HXLINE(  31)		this->cache->set(b->name,b);
HXLINE(  32)		this->behaviors->push(b);
            	}


HX_DEFINE_DYNAMIC_FUNC1(BehaviorManager_obj,add,(void))

bool BehaviorManager_obj::hasBehavior(::String b){
            	HX_STACKFRAME(&_hx_pos_0bda85b94ee6133b_36_hasBehavior)
HXLINE(  37)		if (hx::IsNull( this->cache )) {
HXLINE(  39)			return false;
            		}
HXLINE(  42)		return hx::IsNotNull( this->cache->get(b).StaticCast<  ::com::stencyl::behavior::Behavior >() );
            	}


HX_DEFINE_DYNAMIC_FUNC1(BehaviorManager_obj,hasBehavior,return )

void BehaviorManager_obj::enableBehavior(::String b){
            	HX_STACKFRAME(&_hx_pos_0bda85b94ee6133b_47_enableBehavior)
HXDLIN(  47)		if (this->hasBehavior(b)) {
HXLINE(  49)			 ::com::stencyl::behavior::Behavior bObj = this->cache->get(b).StaticCast<  ::com::stencyl::behavior::Behavior >();
HXLINE(  51)			bool _hx_tmp;
HXDLIN(  51)			if (hx::IsNotNull( bObj->script )) {
HXLINE(  51)				_hx_tmp = !(bObj->script->scriptInit);
            			}
            			else {
HXLINE(  51)				_hx_tmp = false;
            			}
HXDLIN(  51)			if (_hx_tmp) {
HXLINE(  53)				try {
            					HX_STACK_CATCHABLE(::String, 0);
HXLINE(  55)					bObj->script->init();
HXLINE(  56)					bObj->script->scriptInit = true;
            				}
            				catch( ::Dynamic _hx_e){
            					if (_hx_e.IsClass< ::String >() ){
            						HX_STACK_BEGIN_CATCH
            						::String e = _hx_e;
HXLINE(  61)						 ::Dynamic _hx_tmp1 = ::haxe::Log_obj::trace;
HXDLIN(  61)						_hx_tmp1((HX_("Error in when created for behavior: ",0a,8e,91,86) + bObj->name),hx::SourceInfo(HX_("BehaviorManager.hx",c3,15,a8,be),61,HX_("com.stencyl.behavior.BehaviorManager",8e,65,61,7b),HX_("enableBehavior",35,b6,b2,42)));
HXLINE(  62)						::haxe::Log_obj::trace(e,hx::SourceInfo(HX_("BehaviorManager.hx",c3,15,a8,be),62,HX_("com.stencyl.behavior.BehaviorManager",8e,65,61,7b),HX_("enableBehavior",35,b6,b2,42)));
            					}
            					else {
            						HX_STACK_DO_THROW(_hx_e);
            					}
            				}
            			}
HXLINE(  66)			bObj->enabled = true;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(BehaviorManager_obj,enableBehavior,(void))

void BehaviorManager_obj::disableBehavior(::String b){
            	HX_STACKFRAME(&_hx_pos_0bda85b94ee6133b_72_disableBehavior)
HXDLIN(  72)		if (this->hasBehavior(b)) {
HXLINE(  74)			this->cache->get(b).StaticCast<  ::com::stencyl::behavior::Behavior >()->enabled = false;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(BehaviorManager_obj,disableBehavior,(void))

bool BehaviorManager_obj::isBehaviorEnabled(::String b){
            	HX_STACKFRAME(&_hx_pos_0bda85b94ee6133b_79_isBehaviorEnabled)
HXLINE(  80)		if (this->hasBehavior(b)) {
HXLINE(  82)			return this->cache->get(b).StaticCast<  ::com::stencyl::behavior::Behavior >()->enabled;
            		}
HXLINE(  85)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(BehaviorManager_obj,isBehaviorEnabled,return )

void BehaviorManager_obj::initScripts(){
            	HX_STACKFRAME(&_hx_pos_0bda85b94ee6133b_94_initScripts)
HXDLIN(  94)		int _g1 = (int)0;
HXDLIN(  94)		int _g = this->behaviors->length;
HXDLIN(  94)		while((_g1 < _g)){
HXDLIN(  94)			_g1 = (_g1 + (int)1);
HXDLIN(  94)			int i = (_g1 - (int)1);
HXLINE(  96)			 ::com::stencyl::behavior::Behavior b = this->behaviors->__get(i).StaticCast<  ::com::stencyl::behavior::Behavior >();
HXLINE(  97)			b->initScript(!(b->enabled));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(BehaviorManager_obj,initScripts,(void))

 ::Dynamic BehaviorManager_obj::getAttribute(::String behaviorName,::String attributeName){
            	HX_STACKFRAME(&_hx_pos_0bda85b94ee6133b_106_getAttribute)
HXLINE( 107)		 ::com::stencyl::behavior::Behavior b = this->cache->get(behaviorName).StaticCast<  ::com::stencyl::behavior::Behavior >();
HXLINE( 109)		bool _hx_tmp;
HXDLIN( 109)		if (hx::IsNotNull( b )) {
HXLINE( 109)			_hx_tmp = hx::IsNotNull( b->script );
            		}
            		else {
HXLINE( 109)			_hx_tmp = false;
            		}
HXDLIN( 109)		if (_hx_tmp) {
HXLINE( 111)			attributeName = b->script->toInternalName(attributeName);
HXLINE( 113)			 ::Dynamic field = ::Reflect_obj::field(b->script,attributeName);
HXLINE( 122)			return field;
            		}
            		else {
HXLINE( 127)			 ::Dynamic _hx_tmp1 = ::haxe::Log_obj::trace;
HXDLIN( 127)			_hx_tmp1((HX_("Warning: Behavior does not exist - ",04,d9,c1,a4) + behaviorName),hx::SourceInfo(HX_("BehaviorManager.hx",c3,15,a8,be),127,HX_("com.stencyl.behavior.BehaviorManager",8e,65,61,7b),HX_("getAttribute",a6,0c,47,0a)));
            		}
HXLINE( 130)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(BehaviorManager_obj,getAttribute,return )

void BehaviorManager_obj::setAttribute(::String behaviorName,::String attributeName, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_0bda85b94ee6133b_134_setAttribute)
HXLINE( 135)		 ::com::stencyl::behavior::Behavior b = this->cache->get(behaviorName).StaticCast<  ::com::stencyl::behavior::Behavior >();
HXLINE( 137)		bool _hx_tmp;
HXDLIN( 137)		if (hx::IsNotNull( b )) {
HXLINE( 137)			_hx_tmp = hx::IsNotNull( b->script );
            		}
            		else {
HXLINE( 137)			_hx_tmp = false;
            		}
HXDLIN( 137)		if (_hx_tmp) {
HXLINE( 139)			 ::Dynamic field = ::Reflect_obj::field(b->script,attributeName);
HXLINE( 141)			bool _hx_tmp1;
HXDLIN( 141)			if (hx::IsNull( field )) {
HXLINE( 141)				_hx_tmp1 = ::Reflect_obj::hasField(b->script,attributeName);
            			}
            			else {
HXLINE( 141)				_hx_tmp1 = true;
            			}
HXDLIN( 141)			if (_hx_tmp1) {
HXLINE( 144)				::Reflect_obj::setField(b->script,attributeName,value);
HXLINE( 145)				b->script->propertyChanged(attributeName,value);
            			}
            			else {
HXLINE( 152)				::Reflect_obj::setField(b->script,attributeName,value);
HXLINE( 153)				b->script->propertyChanged(attributeName,value);
            			}
            		}
            		else {
HXLINE( 162)			 ::Dynamic _hx_tmp2 = ::haxe::Log_obj::trace;
HXDLIN( 162)			_hx_tmp2((HX_("Warning: Behavior does not exist - ",04,d9,c1,a4) + behaviorName),hx::SourceInfo(HX_("BehaviorManager.hx",c3,15,a8,be),162,HX_("com.stencyl.behavior.BehaviorManager",8e,65,61,7b),HX_("setAttribute",1a,30,40,1f)));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(BehaviorManager_obj,setAttribute,(void))

 ::Dynamic BehaviorManager_obj::call(::String msg,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_0bda85b94ee6133b_167_call)
HXLINE( 168)		if (hx::IsNull( this->cache )) {
HXLINE( 170)			return null();
            		}
HXLINE( 173)		 ::Dynamic toReturn = null();
HXLINE( 175)		{
HXLINE( 175)			int _g1 = (int)0;
HXDLIN( 175)			int _g = this->behaviors->length;
HXDLIN( 175)			while((_g1 < _g)){
HXLINE( 175)				_g1 = (_g1 + (int)1);
HXDLIN( 175)				int i = (_g1 - (int)1);
HXLINE( 177)				 ::com::stencyl::behavior::Behavior item = this->behaviors->__get(i).StaticCast<  ::com::stencyl::behavior::Behavior >();
HXLINE( 179)				bool _hx_tmp;
HXDLIN( 179)				if (!(!(item->enabled))) {
HXLINE( 179)					_hx_tmp = hx::IsNull( item->script );
            				}
            				else {
HXLINE( 179)					_hx_tmp = true;
            				}
HXDLIN( 179)				if (_hx_tmp) {
HXLINE( 181)					continue;
            				}
HXLINE( 188)				try {
            					HX_STACK_CATCHABLE(::String, 0);
HXLINE( 191)					 ::Dynamic f = ::Reflect_obj::field(item->script,msg);
HXLINE( 193)					if (hx::IsNotNull( f )) {
HXLINE( 195)						toReturn = ::Reflect_obj::callMethod(item->script,f,args);
            					}
            					else {
HXLINE( 200)						item->script->forwardMessage(msg);
            					}
            				}
            				catch( ::Dynamic _hx_e){
            					if (_hx_e.IsClass< ::String >() ){
            						HX_STACK_BEGIN_CATCH
            						::String e = _hx_e;
HXLINE( 210)						item->script->forwardMessage(msg);
            					}
            					else {
            						HX_STACK_DO_THROW(_hx_e);
            					}
            				}
            			}
            		}
HXLINE( 214)		return toReturn;
            	}


HX_DEFINE_DYNAMIC_FUNC2(BehaviorManager_obj,call,return )

 ::Dynamic BehaviorManager_obj::call2(::String behaviorName,::String msg,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_0bda85b94ee6133b_218_call2)
HXLINE( 219)		if (hx::IsNull( this->cache )) {
HXLINE( 221)			return null();
            		}
HXLINE( 224)		 ::Dynamic toReturn = null();
HXLINE( 225)		 ::com::stencyl::behavior::Behavior item = this->cache->get(behaviorName).StaticCast<  ::com::stencyl::behavior::Behavior >();
HXLINE( 227)		if (hx::IsNotNull( item )) {
HXLINE( 229)			bool _hx_tmp;
HXDLIN( 229)			if (!(!(item->enabled))) {
HXLINE( 229)				_hx_tmp = hx::IsNull( item->script );
            			}
            			else {
HXLINE( 229)				_hx_tmp = true;
            			}
HXDLIN( 229)			if (_hx_tmp) {
HXLINE( 231)				return toReturn;
            			}
HXLINE( 238)			try {
            				HX_STACK_CATCHABLE(::String, 0);
HXLINE( 241)				 ::Dynamic f = ::Reflect_obj::field(item->script,msg);
HXLINE( 243)				if (hx::IsNotNull( f )) {
HXLINE( 245)					toReturn = ::Reflect_obj::callMethod(item->script,f,args);
            				}
            				else {
HXLINE( 250)					item->script->forwardMessage(msg);
            				}
            			}
            			catch( ::Dynamic _hx_e){
            				if (_hx_e.IsClass< ::String >() ){
            					HX_STACK_BEGIN_CATCH
            					::String e = _hx_e;
HXLINE( 260)					item->script->forwardMessage(msg);
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
HXLINE( 264)		return toReturn;
            	}


HX_DEFINE_DYNAMIC_FUNC3(BehaviorManager_obj,call2,return )


hx::ObjectPtr< BehaviorManager_obj > BehaviorManager_obj::__new() {
	hx::ObjectPtr< BehaviorManager_obj > __this = new BehaviorManager_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< BehaviorManager_obj > BehaviorManager_obj::__alloc(hx::Ctx *_hx_ctx) {
	BehaviorManager_obj *__this = (BehaviorManager_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BehaviorManager_obj), true, "com.stencyl.behavior.BehaviorManager"));
	*(void **)__this = BehaviorManager_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

BehaviorManager_obj::BehaviorManager_obj()
{
}

void BehaviorManager_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(BehaviorManager);
	HX_MARK_MEMBER_NAME(behaviors,"behaviors");
	HX_MARK_MEMBER_NAME(cache,"cache");
	HX_MARK_END_CLASS();
}

void BehaviorManager_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(behaviors,"behaviors");
	HX_VISIT_MEMBER_NAME(cache,"cache");
}

hx::Val BehaviorManager_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"call") ) { return hx::Val( call_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"cache") ) { return hx::Val( cache ); }
		if (HX_FIELD_EQ(inName,"call2") ) { return hx::Val( call2_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { return hx::Val( destroy_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"behaviors") ) { return hx::Val( behaviors ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"hasBehavior") ) { return hx::Val( hasBehavior_dyn() ); }
		if (HX_FIELD_EQ(inName,"initScripts") ) { return hx::Val( initScripts_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"getAttribute") ) { return hx::Val( getAttribute_dyn() ); }
		if (HX_FIELD_EQ(inName,"setAttribute") ) { return hx::Val( setAttribute_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"enableBehavior") ) { return hx::Val( enableBehavior_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"disableBehavior") ) { return hx::Val( disableBehavior_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"isBehaviorEnabled") ) { return hx::Val( isBehaviorEnabled_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val BehaviorManager_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"cache") ) { cache=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"behaviors") ) { behaviors=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void BehaviorManager_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("behaviors","\xa1","\xef","\xab","\x35"));
	outFields->push(HX_HCSTRING("cache","\x42","\x9a","\x14","\x41"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo BehaviorManager_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(BehaviorManager_obj,behaviors),HX_HCSTRING("behaviors","\xa1","\xef","\xab","\x35")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(BehaviorManager_obj,cache),HX_HCSTRING("cache","\x42","\x9a","\x14","\x41")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *BehaviorManager_obj_sStaticStorageInfo = 0;
#endif

static ::String BehaviorManager_obj_sMemberFields[] = {
	HX_HCSTRING("behaviors","\xa1","\xef","\xab","\x35"),
	HX_HCSTRING("cache","\x42","\x9a","\x14","\x41"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("hasBehavior","\x0c","\x76","\x49","\xdd"),
	HX_HCSTRING("enableBehavior","\x35","\xb6","\xb2","\x42"),
	HX_HCSTRING("disableBehavior","\x9a","\xde","\x74","\xdc"),
	HX_HCSTRING("isBehaviorEnabled","\x45","\x55","\x56","\x27"),
	HX_HCSTRING("initScripts","\xd8","\x6a","\x4e","\xe5"),
	HX_HCSTRING("getAttribute","\xa6","\x0c","\x47","\x0a"),
	HX_HCSTRING("setAttribute","\x1a","\x30","\x40","\x1f"),
	HX_HCSTRING("call","\x9e","\x18","\xba","\x41"),
	HX_HCSTRING("call2","\xd4","\x71","\x1b","\x41"),
	::String(null()) };

static void BehaviorManager_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(BehaviorManager_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void BehaviorManager_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(BehaviorManager_obj::__mClass,"__mClass");
};

#endif

hx::Class BehaviorManager_obj::__mClass;

void BehaviorManager_obj::__register()
{
	hx::Object *dummy = new BehaviorManager_obj;
	BehaviorManager_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.behavior.BehaviorManager","\x8e","\x65","\x61","\x7b");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = BehaviorManager_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(BehaviorManager_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< BehaviorManager_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = BehaviorManager_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BehaviorManager_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BehaviorManager_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace behavior
