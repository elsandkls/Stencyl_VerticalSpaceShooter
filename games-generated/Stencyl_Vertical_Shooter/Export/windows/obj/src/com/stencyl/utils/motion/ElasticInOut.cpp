// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_EasingFunction
#include <com/stencyl/utils/motion/EasingFunction.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_ElasticInOut
#include <com/stencyl/utils/motion/ElasticInOut.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_47e7c248875a6322_463_new,"com.stencyl.utils.motion.ElasticInOut","new",0xedfa62b2,"com.stencyl.utils.motion.ElasticInOut.new","com/stencyl/utils/motion/EasingFunctions.hx",463,0xda1c1718)
HX_LOCAL_STACK_FRAME(_hx_pos_47e7c248875a6322_465_apply,"com.stencyl.utils.motion.ElasticInOut","apply",0xb668d040,"com.stencyl.utils.motion.ElasticInOut.apply","com/stencyl/utils/motion/EasingFunctions.hx",465,0xda1c1718)
namespace com{
namespace stencyl{
namespace utils{
namespace motion{

void ElasticInOut_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_47e7c248875a6322_463_new)
HXDLIN( 463)		super::__construct();
            	}

Dynamic ElasticInOut_obj::__CreateEmpty() { return new ElasticInOut_obj; }

void *ElasticInOut_obj::_hx_vtable = 0;

Dynamic ElasticInOut_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ElasticInOut_obj > _hx_result = new ElasticInOut_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ElasticInOut_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x047402bf) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x047402bf;
	} else {
		return inClassId==(int)0x718ca070;
	}
}

Float ElasticInOut_obj::apply(Float t){
            	HX_STACKFRAME(&_hx_pos_47e7c248875a6322_465_apply)
HXDLIN( 465)		if ((t == (int)0)) {
HXLINE( 466)			return (int)0;
            		}
            		else {
HXLINE( 467)			if ((t == (int)1)) {
HXLINE( 468)				return (int)1;
            			}
            			else {
HXLINE( 470)				Float s = ((Float)7.5e-005);
HXLINE( 472)				t = (t * (int)2);
HXDLIN( 472)				if ((t < (int)1)) {
HXLINE( 473)					t = (t - (int)1);
HXDLIN( 473)					Float _hx_tmp = ::Math_obj::exp((((Float)6.931471805599453) * t));
HXDLIN( 473)					return (((Float)-0.5) * (_hx_tmp * ::Math_obj::sin(((Float)(((t * ((Float)0.001)) - s) * ((Float)6.2831853071795862)) / (Float)((Float)0.0003)))));
            				}
            				else {
HXLINE( 475)					t = (t - (int)1);
HXDLIN( 475)					Float _hx_tmp1 = ::Math_obj::exp((((Float)-6.9314718055994531) * t));
HXDLIN( 475)					return (((_hx_tmp1 * ::Math_obj::sin(((Float)(((t * ((Float)0.001)) - s) * ((Float)6.2831853071795862)) / (Float)((Float)0.0003)))) * ((Float)0.5)) + (int)1);
            				}
            			}
            		}
HXLINE( 465)		return ((Float)0.);
            	}



ElasticInOut_obj::ElasticInOut_obj()
{
}

hx::Val ElasticInOut_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"apply") ) { return hx::Val( apply_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ElasticInOut_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ElasticInOut_obj_sStaticStorageInfo = 0;
#endif

static ::String ElasticInOut_obj_sMemberFields[] = {
	HX_HCSTRING("apply","\x6e","\x85","\x3b","\x24"),
	::String(null()) };

static void ElasticInOut_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ElasticInOut_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ElasticInOut_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ElasticInOut_obj::__mClass,"__mClass");
};

#endif

hx::Class ElasticInOut_obj::__mClass;

void ElasticInOut_obj::__register()
{
	hx::Object *dummy = new ElasticInOut_obj;
	ElasticInOut_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.utils.motion.ElasticInOut","\xc0","\xe1","\xca","\xec");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ElasticInOut_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ElasticInOut_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ElasticInOut_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ElasticInOut_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ElasticInOut_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ElasticInOut_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace utils
} // end namespace motion
