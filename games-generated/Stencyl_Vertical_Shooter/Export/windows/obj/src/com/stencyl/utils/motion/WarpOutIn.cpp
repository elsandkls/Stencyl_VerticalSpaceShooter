// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_utils_motion_EasingFunction
#include <com/stencyl/utils/motion/EasingFunction.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_WarpOutIn
#include <com/stencyl/utils/motion/WarpOutIn.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_1c3e12a7804a53a7_532_new,"com.stencyl.utils.motion.WarpOutIn","new",0x85802371,"com.stencyl.utils.motion.WarpOutIn.new","com/stencyl/utils/motion/EasingFunctions.hx",532,0xda1c1718)
HX_LOCAL_STACK_FRAME(_hx_pos_1c3e12a7804a53a7_534_apply,"com.stencyl.utils.motion.WarpOutIn","apply",0x8b6f7ebf,"com.stencyl.utils.motion.WarpOutIn.apply","com/stencyl/utils/motion/EasingFunctions.hx",534,0xda1c1718)
namespace com{
namespace stencyl{
namespace utils{
namespace motion{

void WarpOutIn_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_1c3e12a7804a53a7_532_new)
HXDLIN( 532)		super::__construct();
            	}

Dynamic WarpOutIn_obj::__CreateEmpty() { return new WarpOutIn_obj; }

void *WarpOutIn_obj::_hx_vtable = 0;

Dynamic WarpOutIn_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< WarpOutIn_obj > _hx_result = new WarpOutIn_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool WarpOutIn_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x047402bf) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x047402bf;
	} else {
		return inClassId==(int)0x638f3db3;
	}
}

Float WarpOutIn_obj::apply(Float t){
            	HX_STACKFRAME(&_hx_pos_1c3e12a7804a53a7_534_apply)
HXDLIN( 534)		if ((t <= (int)0)) {
HXDLIN( 534)			return (int)0;
            		}
            		else {
HXDLIN( 534)			if ((t < (int)1)) {
HXDLIN( 534)				return ((Float)0.5);
            			}
            			else {
HXDLIN( 534)				return (int)1;
            			}
            		}
HXDLIN( 534)		return ((Float)0.);
            	}



WarpOutIn_obj::WarpOutIn_obj()
{
}

hx::Val WarpOutIn_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"apply") ) { return hx::Val( apply_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *WarpOutIn_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *WarpOutIn_obj_sStaticStorageInfo = 0;
#endif

static ::String WarpOutIn_obj_sMemberFields[] = {
	HX_HCSTRING("apply","\x6e","\x85","\x3b","\x24"),
	::String(null()) };

static void WarpOutIn_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(WarpOutIn_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void WarpOutIn_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(WarpOutIn_obj::__mClass,"__mClass");
};

#endif

hx::Class WarpOutIn_obj::__mClass;

void WarpOutIn_obj::__register()
{
	hx::Object *dummy = new WarpOutIn_obj;
	WarpOutIn_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.utils.motion.WarpOutIn","\xff","\x96","\x13","\xf3");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = WarpOutIn_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(WarpOutIn_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< WarpOutIn_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = WarpOutIn_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = WarpOutIn_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = WarpOutIn_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace utils
} // end namespace motion
