// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_utils_LazyStringMap
#include <com/stencyl/utils/LazyStringMap.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_d2a4e4bc639fefd6_40_new,"com.stencyl.utils.LazyStringMap","new",0xff65d35d,"com.stencyl.utils.LazyStringMap.new","com/stencyl/utils/LazyStringMap.hx",40,0xe9f61336)
HX_LOCAL_STACK_FRAME(_hx_pos_d2a4e4bc639fefd6_46_get,"com.stencyl.utils.LazyStringMap","get",0xff608393,"com.stencyl.utils.LazyStringMap.get","com/stencyl/utils/LazyStringMap.hx",46,0xe9f61336)
HX_LOCAL_STACK_FRAME(_hx_pos_d2a4e4bc639fefd6_58_set,"com.stencyl.utils.LazyStringMap","set",0xff699e9f,"com.stencyl.utils.LazyStringMap.set","com/stencyl/utils/LazyStringMap.hx",58,0xe9f61336)
HX_LOCAL_STACK_FRAME(_hx_pos_d2a4e4bc639fefd6_59_exists,"com.stencyl.utils.LazyStringMap","exists",0xf1b656ff,"com.stencyl.utils.LazyStringMap.exists","com/stencyl/utils/LazyStringMap.hx",59,0xe9f61336)
HX_LOCAL_STACK_FRAME(_hx_pos_d2a4e4bc639fefd6_60_remove,"com.stencyl.utils.LazyStringMap","remove",0x365ed567,"com.stencyl.utils.LazyStringMap.remove","com/stencyl/utils/LazyStringMap.hx",60,0xe9f61336)
HX_LOCAL_STACK_FRAME(_hx_pos_d2a4e4bc639fefd6_61_keys,"com.stencyl.utils.LazyStringMap","keys",0x77b77c57,"com.stencyl.utils.LazyStringMap.keys","com/stencyl/utils/LazyStringMap.hx",61,0xe9f61336)
HX_LOCAL_STACK_FRAME(_hx_pos_d2a4e4bc639fefd6_62_iterator,"com.stencyl.utils.LazyStringMap","iterator",0x924b51d1,"com.stencyl.utils.LazyStringMap.iterator","com/stencyl/utils/LazyStringMap.hx",62,0xe9f61336)
namespace com{
namespace stencyl{
namespace utils{

void LazyStringMap_obj::__construct( ::haxe::ds::StringMap map, ::Dynamic initializer){
            	HX_STACKFRAME(&_hx_pos_d2a4e4bc639fefd6_40_new)
HXLINE(  41)		this->map = map;
HXLINE(  42)		this->initializer = initializer;
            	}

Dynamic LazyStringMap_obj::__CreateEmpty() { return new LazyStringMap_obj; }

void *LazyStringMap_obj::_hx_vtable = 0;

Dynamic LazyStringMap_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< LazyStringMap_obj > _hx_result = new LazyStringMap_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool LazyStringMap_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1406c275;
}

 ::Dynamic LazyStringMap_obj::get(::String key){
            	HX_STACKFRAME(&_hx_pos_d2a4e4bc639fefd6_46_get)
HXLINE(  47)		 ::Dynamic obj = this->map->get(key);
HXLINE(  49)		if (hx::IsNull( obj )) {
HXLINE(  51)			obj = this->initializer(key);
HXLINE(  52)			this->map->set(key,obj);
            		}
HXLINE(  55)		return obj;
            	}


HX_DEFINE_DYNAMIC_FUNC1(LazyStringMap_obj,get,return )

void LazyStringMap_obj::set(::String key, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_d2a4e4bc639fefd6_58_set)
HXDLIN(  58)		this->map->set(key,value);
            	}


HX_DEFINE_DYNAMIC_FUNC2(LazyStringMap_obj,set,(void))

bool LazyStringMap_obj::exists(::String key){
            	HX_STACKFRAME(&_hx_pos_d2a4e4bc639fefd6_59_exists)
HXDLIN(  59)		return this->map->exists(key);
            	}


HX_DEFINE_DYNAMIC_FUNC1(LazyStringMap_obj,exists,return )

bool LazyStringMap_obj::remove(::String key){
            	HX_STACKFRAME(&_hx_pos_d2a4e4bc639fefd6_60_remove)
HXDLIN(  60)		return this->map->remove(key);
            	}


HX_DEFINE_DYNAMIC_FUNC1(LazyStringMap_obj,remove,return )

 ::Dynamic LazyStringMap_obj::keys(){
            	HX_STACKFRAME(&_hx_pos_d2a4e4bc639fefd6_61_keys)
HXDLIN(  61)		return this->map->keys();
            	}


HX_DEFINE_DYNAMIC_FUNC0(LazyStringMap_obj,keys,return )

 ::Dynamic LazyStringMap_obj::iterator(){
            	HX_STACKFRAME(&_hx_pos_d2a4e4bc639fefd6_62_iterator)
HXDLIN(  62)		return this->map->iterator();
            	}


HX_DEFINE_DYNAMIC_FUNC0(LazyStringMap_obj,iterator,return )


hx::ObjectPtr< LazyStringMap_obj > LazyStringMap_obj::__new( ::haxe::ds::StringMap map, ::Dynamic initializer) {
	hx::ObjectPtr< LazyStringMap_obj > __this = new LazyStringMap_obj();
	__this->__construct(map,initializer);
	return __this;
}

hx::ObjectPtr< LazyStringMap_obj > LazyStringMap_obj::__alloc(hx::Ctx *_hx_ctx, ::haxe::ds::StringMap map, ::Dynamic initializer) {
	LazyStringMap_obj *__this = (LazyStringMap_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(LazyStringMap_obj), true, "com.stencyl.utils.LazyStringMap"));
	*(void **)__this = LazyStringMap_obj::_hx_vtable;
	__this->__construct(map,initializer);
	return __this;
}

LazyStringMap_obj::LazyStringMap_obj()
{
}

void LazyStringMap_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(LazyStringMap);
	HX_MARK_MEMBER_NAME(map,"map");
	HX_MARK_MEMBER_NAME(initializer,"initializer");
	HX_MARK_END_CLASS();
}

void LazyStringMap_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(map,"map");
	HX_VISIT_MEMBER_NAME(initializer,"initializer");
}

hx::Val LazyStringMap_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { return hx::Val( map ); }
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"keys") ) { return hx::Val( keys_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"exists") ) { return hx::Val( exists_dyn() ); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { return hx::Val( iterator_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"initializer") ) { return hx::Val( initializer ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val LazyStringMap_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"map") ) { map=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"initializer") ) { initializer=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void LazyStringMap_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo LazyStringMap_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(LazyStringMap_obj,map),HX_HCSTRING("map","\x9c","\x0a","\x53","\x00")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(LazyStringMap_obj,initializer),HX_HCSTRING("initializer","\x22","\xf5","\x0f","\x37")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *LazyStringMap_obj_sStaticStorageInfo = 0;
#endif

static ::String LazyStringMap_obj_sMemberFields[] = {
	HX_HCSTRING("map","\x9c","\x0a","\x53","\x00"),
	HX_HCSTRING("initializer","\x22","\xf5","\x0f","\x37"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("exists","\xdc","\x1d","\xe0","\xbf"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("keys","\xf4","\xe1","\x06","\x47"),
	HX_HCSTRING("iterator","\xee","\x49","\x9a","\x93"),
	::String(null()) };

static void LazyStringMap_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(LazyStringMap_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void LazyStringMap_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(LazyStringMap_obj::__mClass,"__mClass");
};

#endif

hx::Class LazyStringMap_obj::__mClass;

void LazyStringMap_obj::__register()
{
	hx::Object *dummy = new LazyStringMap_obj;
	LazyStringMap_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.utils.LazyStringMap","\xeb","\xe0","\x0f","\x1c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = LazyStringMap_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(LazyStringMap_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< LazyStringMap_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = LazyStringMap_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LazyStringMap_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LazyStringMap_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace utils
