// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_graphics_shaders_BasicShader
#include <com/stencyl/graphics/shaders/BasicShader.h>
#endif
#ifndef INCLUDED_com_stencyl_graphics_shaders_PostProcess
#include <com/stencyl/graphics/shaders/PostProcess.h>
#endif
#ifndef INCLUDED_com_stencyl_graphics_shaders_SharpenShader
#include <com/stencyl/graphics/shaders/SharpenShader.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_e2f7329b152fa0e3_6_new,"com.stencyl.graphics.shaders.SharpenShader","new",0x754a6456,"com.stencyl.graphics.shaders.SharpenShader.new","com/stencyl/graphics/shaders/SharpenShader.hx",6,0x80dc359a)
HX_LOCAL_STACK_FRAME(_hx_pos_e2f7329b152fa0e3_50_setAmount,"com.stencyl.graphics.shaders.SharpenShader","setAmount",0x8ef17790,"com.stencyl.graphics.shaders.SharpenShader.setAmount","com/stencyl/graphics/shaders/SharpenShader.hx",50,0x80dc359a)
namespace com{
namespace stencyl{
namespace graphics{
namespace shaders{

void SharpenShader_obj::__construct(hx::Null< Float >  __o_amount){
Float amount = __o_amount.Default(((Float)2.0));
            	HX_GC_STACKFRAME(&_hx_pos_e2f7329b152fa0e3_6_new)
HXLINE(   7)		super::__construct();
HXLINE(   9)		::String script = HX_("\n\t\t\t#ifdef GL_ES\n\t\t\t\tprecision mediump float;\n\t\t\t#endif\n\t\t\t\n\t\t\tvarying vec2 vTexCoord;\n\t\t\tuniform sampler2D uImage0;\n\t\t\tuniform vec2 uResolution;\n\t\t\t\n\t\t\tuniform float amount;\n\t\t\t\n\t\t\tvoid main()\n\t\t\t{\n\t\t\t\t//this will be our RGBA sum\n\t\t\t\tvec4 sum = vec4(0.0);\n\t\t\t\t\n\t\t\t\t//our original texcoord for this fragment\n\t\t\t\tvec2 tc = vTexCoord;\n\t\t\t\t\n\t\t\t\tfloat reach = 1.0 / uResolution.x;\n\n\t\t\t\t//current pixel\n\t\t\t\tsum += texture2D(uImage0, vec2(tc.x, tc.y));\n\t\t\t\t\n\t\t\t\t//sharpen\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x + 1.0 * reach, tc.y))) * amount;\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x - 1.0 * reach, tc.y))) * amount;\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x, tc.y + 1.0 * reach))) * amount;\n\t\t\t\tsum += (texture2D(uImage0, vec2(tc.x, tc.y)) - texture2D(uImage0, vec2(tc.x, tc.y - 1.0 * reach))) * amount;\n\t\t\t\t\n\t\t\t\tgl_FragColor = vec4(sum.rgb, 1.0);\n\t\t\t}\n\t\t",dd,77,a2,ef);
HXLINE(  43)		this->model =  ::com::stencyl::graphics::shaders::PostProcess_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),script,true);
HXLINE(  45)		this->setAmount(amount);
            	}

Dynamic SharpenShader_obj::__CreateEmpty() { return new SharpenShader_obj; }

void *SharpenShader_obj::_hx_vtable = 0;

Dynamic SharpenShader_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SharpenShader_obj > _hx_result = new SharpenShader_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool SharpenShader_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x488ca67b) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x488ca67b;
	} else {
		return inClassId==(int)0x7c6c3ac4;
	}
}

void SharpenShader_obj::setAmount(Float amount){
            	HX_STACKFRAME(&_hx_pos_e2f7329b152fa0e3_50_setAmount)
HXDLIN(  50)		this->setProperty(HX_("amount",d8,11,03,d5),amount);
            	}


HX_DEFINE_DYNAMIC_FUNC1(SharpenShader_obj,setAmount,(void))


hx::ObjectPtr< SharpenShader_obj > SharpenShader_obj::__new(hx::Null< Float >  __o_amount) {
	hx::ObjectPtr< SharpenShader_obj > __this = new SharpenShader_obj();
	__this->__construct(__o_amount);
	return __this;
}

hx::ObjectPtr< SharpenShader_obj > SharpenShader_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_amount) {
	SharpenShader_obj *__this = (SharpenShader_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SharpenShader_obj), true, "com.stencyl.graphics.shaders.SharpenShader"));
	*(void **)__this = SharpenShader_obj::_hx_vtable;
	__this->__construct(__o_amount);
	return __this;
}

SharpenShader_obj::SharpenShader_obj()
{
}

hx::Val SharpenShader_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"setAmount") ) { return hx::Val( setAmount_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *SharpenShader_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *SharpenShader_obj_sStaticStorageInfo = 0;
#endif

static ::String SharpenShader_obj_sMemberFields[] = {
	HX_HCSTRING("setAmount","\x1a","\x87","\xaa","\x34"),
	::String(null()) };

static void SharpenShader_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SharpenShader_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SharpenShader_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SharpenShader_obj::__mClass,"__mClass");
};

#endif

hx::Class SharpenShader_obj::__mClass;

void SharpenShader_obj::__register()
{
	hx::Object *dummy = new SharpenShader_obj;
	SharpenShader_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.graphics.shaders.SharpenShader","\x64","\x41","\xc8","\xb2");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = SharpenShader_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(SharpenShader_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< SharpenShader_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SharpenShader_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SharpenShader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SharpenShader_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace graphics
} // end namespace shaders
