// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_utils_motion_Easing
#include <com/stencyl/utils/motion/Easing.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_EasingFunction
#include <com/stencyl/utils/motion/EasingFunction.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_Linear
#include <com/stencyl/utils/motion/Linear.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_TweenManager
#include <com/stencyl/utils/motion/TweenManager.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_TweenObject
#include <com/stencyl/utils/motion/TweenObject.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3a4912a0b273b447_18_new,"com.stencyl.utils.motion.TweenObject","new",0x436e92d0,"com.stencyl.utils.motion.TweenObject.new","com/stencyl/utils/motion/TweenObject.hx",18,0x44d48efe)
HX_LOCAL_STACK_FRAME(_hx_pos_3a4912a0b273b447_25__tween,"com.stencyl.utils.motion.TweenObject","_tween",0xc3ea553c,"com.stencyl.utils.motion.TweenObject._tween","com/stencyl/utils/motion/TweenObject.hx",25,0x44d48efe)
HX_LOCAL_STACK_FRAME(_hx_pos_3a4912a0b273b447_51_update,"com.stencyl.utils.motion.TweenObject","update",0x3597e999,"com.stencyl.utils.motion.TweenObject.update","com/stencyl/utils/motion/TweenObject.hx",51,0x44d48efe)
HX_LOCAL_STACK_FRAME(_hx_pos_3a4912a0b273b447_74_updateValue,"com.stencyl.utils.motion.TweenObject","updateValue",0x3f9b9b18,"com.stencyl.utils.motion.TweenObject.updateValue","com/stencyl/utils/motion/TweenObject.hx",74,0x44d48efe)
HX_LOCAL_STACK_FRAME(_hx_pos_3a4912a0b273b447_77_doOnUpdate,"com.stencyl.utils.motion.TweenObject","doOnUpdate",0xc8dafec3,"com.stencyl.utils.motion.TweenObject.doOnUpdate","com/stencyl/utils/motion/TweenObject.hx",77,0x44d48efe)
HX_LOCAL_STACK_FRAME(_hx_pos_3a4912a0b273b447_83_doOnComplete,"com.stencyl.utils.motion.TweenObject","doOnComplete",0xfc789bf3,"com.stencyl.utils.motion.TweenObject.doOnComplete","com/stencyl/utils/motion/TweenObject.hx",83,0x44d48efe)
namespace com{
namespace stencyl{
namespace utils{
namespace motion{

void TweenObject_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_3a4912a0b273b447_18_new)
HXLINE(  19)		this->active = false;
HXLINE(  20)		this->finished = false;
HXLINE(  21)		this->paused = false;
            	}

Dynamic TweenObject_obj::__CreateEmpty() { return new TweenObject_obj; }

void *TweenObject_obj::_hx_vtable = 0;

Dynamic TweenObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< TweenObject_obj > _hx_result = new TweenObject_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TweenObject_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0ab1d22e;
}

void TweenObject_obj::_tween( ::com::stencyl::utils::motion::EasingFunction easing,int duration){
            	HX_STACKFRAME(&_hx_pos_3a4912a0b273b447_25__tween)
HXLINE(  26)		if (hx::IsNull( easing )) {
HXLINE(  27)			easing = ::com::stencyl::utils::motion::Easing_obj::linear;
            		}
HXLINE(  29)		this->easing = easing;
HXLINE(  30)		this->duration = duration;
HXLINE(  32)		if (!(this->active)) {
HXLINE(  34)			::com::stencyl::utils::motion::TweenManager_obj::markActive(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE(  37)		this->time = (int)0;
HXLINE(  38)		this->active = true;
HXLINE(  39)		this->updated = false;
HXLINE(  40)		this->finished = false;
HXLINE(  41)		this->paused = false;
HXLINE(  43)		if ((duration == (int)0)) {
HXLINE(  45)			this->duration = (int)1;
HXLINE(  46)			::com::stencyl::utils::motion::TweenManager_obj::finish(hx::ObjectPtr<OBJ_>(this));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(TweenObject_obj,_tween,(void))

void TweenObject_obj::update(int dt){
            	HX_STACKFRAME(&_hx_pos_3a4912a0b273b447_51_update)
HXLINE(  52)		if (this->paused) {
HXLINE(  52)			return;
            		}
HXLINE(  54)		 ::com::stencyl::utils::motion::TweenObject _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  54)		_hx_tmp->time = (_hx_tmp->time + dt);
HXLINE(  55)		if ((this->time > this->duration)) {
HXLINE(  56)			this->time = this->duration;
            		}
HXLINE(  58)		this->updateValue();
HXLINE(  59)		this->updated = true;
HXLINE(  61)		if ((this->time == this->duration)) {
HXLINE(  63)			this->active = false;
HXLINE(  64)			this->finished = true;
HXLINE(  65)			if (hx::IsNotNull( this->onUpdate )) {
HXLINE(  66)				this->onUpdate();
            			}
HXLINE(  67)			if (hx::IsNotNull( this->onComplete )) {
HXLINE(  68)				this->onComplete();
            			}
            		}
            		else {
HXLINE(  70)			if (hx::IsNotNull( this->onUpdate )) {
HXLINE(  71)				this->onUpdate();
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(TweenObject_obj,update,(void))

void TweenObject_obj::updateValue(){
            	HX_STACKFRAME(&_hx_pos_3a4912a0b273b447_74_updateValue)
            	}


HX_DEFINE_DYNAMIC_FUNC0(TweenObject_obj,updateValue,(void))

 ::com::stencyl::utils::motion::TweenObject TweenObject_obj::doOnUpdate( ::Dynamic onUpdate){
            	HX_STACKFRAME(&_hx_pos_3a4912a0b273b447_77_doOnUpdate)
HXLINE(  78)		this->onUpdate = onUpdate;
HXLINE(  79)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TweenObject_obj,doOnUpdate,return )

 ::com::stencyl::utils::motion::TweenObject TweenObject_obj::doOnComplete( ::Dynamic onComplete){
            	HX_STACKFRAME(&_hx_pos_3a4912a0b273b447_83_doOnComplete)
HXLINE(  84)		this->onComplete = onComplete;
HXLINE(  85)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(TweenObject_obj,doOnComplete,return )


hx::ObjectPtr< TweenObject_obj > TweenObject_obj::__new() {
	hx::ObjectPtr< TweenObject_obj > __this = new TweenObject_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< TweenObject_obj > TweenObject_obj::__alloc(hx::Ctx *_hx_ctx) {
	TweenObject_obj *__this = (TweenObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TweenObject_obj), true, "com.stencyl.utils.motion.TweenObject"));
	*(void **)__this = TweenObject_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

TweenObject_obj::TweenObject_obj()
{
}

void TweenObject_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(TweenObject);
	HX_MARK_MEMBER_NAME(easing,"easing");
	HX_MARK_MEMBER_NAME(time,"time");
	HX_MARK_MEMBER_NAME(duration,"duration");
	HX_MARK_MEMBER_NAME(active,"active");
	HX_MARK_MEMBER_NAME(paused,"paused");
	HX_MARK_MEMBER_NAME(updated,"updated");
	HX_MARK_MEMBER_NAME(finished,"finished");
	HX_MARK_MEMBER_NAME(onUpdate,"onUpdate");
	HX_MARK_MEMBER_NAME(onComplete,"onComplete");
	HX_MARK_END_CLASS();
}

void TweenObject_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(easing,"easing");
	HX_VISIT_MEMBER_NAME(time,"time");
	HX_VISIT_MEMBER_NAME(duration,"duration");
	HX_VISIT_MEMBER_NAME(active,"active");
	HX_VISIT_MEMBER_NAME(paused,"paused");
	HX_VISIT_MEMBER_NAME(updated,"updated");
	HX_VISIT_MEMBER_NAME(finished,"finished");
	HX_VISIT_MEMBER_NAME(onUpdate,"onUpdate");
	HX_VISIT_MEMBER_NAME(onComplete,"onComplete");
}

hx::Val TweenObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"time") ) { return hx::Val( time ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"easing") ) { return hx::Val( easing ); }
		if (HX_FIELD_EQ(inName,"active") ) { return hx::Val( active ); }
		if (HX_FIELD_EQ(inName,"paused") ) { return hx::Val( paused ); }
		if (HX_FIELD_EQ(inName,"_tween") ) { return hx::Val( _tween_dyn() ); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"updated") ) { return hx::Val( updated ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"duration") ) { return hx::Val( duration ); }
		if (HX_FIELD_EQ(inName,"finished") ) { return hx::Val( finished ); }
		if (HX_FIELD_EQ(inName,"onUpdate") ) { return hx::Val( onUpdate ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onComplete") ) { return hx::Val( onComplete ); }
		if (HX_FIELD_EQ(inName,"doOnUpdate") ) { return hx::Val( doOnUpdate_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"updateValue") ) { return hx::Val( updateValue_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"doOnComplete") ) { return hx::Val( doOnComplete_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val TweenObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"time") ) { time=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"easing") ) { easing=inValue.Cast<  ::com::stencyl::utils::motion::EasingFunction >(); return inValue; }
		if (HX_FIELD_EQ(inName,"active") ) { active=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"paused") ) { paused=inValue.Cast< bool >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"updated") ) { updated=inValue.Cast< bool >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"duration") ) { duration=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"finished") ) { finished=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onUpdate") ) { onUpdate=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onComplete") ) { onComplete=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void TweenObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("easing","\xab","\x4c","\x3d","\x88"));
	outFields->push(HX_HCSTRING("time","\x0d","\xcc","\xfc","\x4c"));
	outFields->push(HX_HCSTRING("duration","\x54","\x0f","\x8e","\x14"));
	outFields->push(HX_HCSTRING("active","\xc6","\x41","\x46","\x16"));
	outFields->push(HX_HCSTRING("paused","\xae","\x40","\x84","\xef"));
	outFields->push(HX_HCSTRING("updated","\x3b","\xc2","\xcf","\x9d"));
	outFields->push(HX_HCSTRING("finished","\x72","\x93","\x0e","\x95"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo TweenObject_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::com::stencyl::utils::motion::EasingFunction*/ ,(int)offsetof(TweenObject_obj,easing),HX_HCSTRING("easing","\xab","\x4c","\x3d","\x88")},
	{hx::fsInt,(int)offsetof(TweenObject_obj,time),HX_HCSTRING("time","\x0d","\xcc","\xfc","\x4c")},
	{hx::fsInt,(int)offsetof(TweenObject_obj,duration),HX_HCSTRING("duration","\x54","\x0f","\x8e","\x14")},
	{hx::fsBool,(int)offsetof(TweenObject_obj,active),HX_HCSTRING("active","\xc6","\x41","\x46","\x16")},
	{hx::fsBool,(int)offsetof(TweenObject_obj,paused),HX_HCSTRING("paused","\xae","\x40","\x84","\xef")},
	{hx::fsBool,(int)offsetof(TweenObject_obj,updated),HX_HCSTRING("updated","\x3b","\xc2","\xcf","\x9d")},
	{hx::fsBool,(int)offsetof(TweenObject_obj,finished),HX_HCSTRING("finished","\x72","\x93","\x0e","\x95")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(TweenObject_obj,onUpdate),HX_HCSTRING("onUpdate","\x88","\x7c","\xb2","\x66")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(TweenObject_obj,onComplete),HX_HCSTRING("onComplete","\xf8","\xd4","\x7e","\x5d")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *TweenObject_obj_sStaticStorageInfo = 0;
#endif

static ::String TweenObject_obj_sMemberFields[] = {
	HX_HCSTRING("easing","\xab","\x4c","\x3d","\x88"),
	HX_HCSTRING("time","\x0d","\xcc","\xfc","\x4c"),
	HX_HCSTRING("duration","\x54","\x0f","\x8e","\x14"),
	HX_HCSTRING("active","\xc6","\x41","\x46","\x16"),
	HX_HCSTRING("paused","\xae","\x40","\x84","\xef"),
	HX_HCSTRING("updated","\x3b","\xc2","\xcf","\x9d"),
	HX_HCSTRING("finished","\x72","\x93","\x0e","\x95"),
	HX_HCSTRING("onUpdate","\x88","\x7c","\xb2","\x66"),
	HX_HCSTRING("onComplete","\xf8","\xd4","\x7e","\x5d"),
	HX_HCSTRING("_tween","\xac","\xf1","\x57","\x15"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("updateValue","\xa8","\xe8","\x50","\x17"),
	HX_HCSTRING("doOnUpdate","\x33","\x93","\x27","\xd4"),
	HX_HCSTRING("doOnComplete","\x63","\x2c","\x67","\xe3"),
	::String(null()) };

static void TweenObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TweenObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TweenObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TweenObject_obj::__mClass,"__mClass");
};

#endif

hx::Class TweenObject_obj::__mClass;

void TweenObject_obj::__register()
{
	hx::Object *dummy = new TweenObject_obj;
	TweenObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.utils.motion.TweenObject","\xde","\x2a","\xe1","\xf8");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = TweenObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(TweenObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< TweenObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TweenObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TweenObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TweenObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace utils
} // end namespace motion
