// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_graphics_shaders_BasicShader
#include <com/stencyl/graphics/shaders/BasicShader.h>
#endif
#ifndef INCLUDED_com_stencyl_graphics_shaders_ExternalShader
#include <com/stencyl/graphics/shaders/ExternalShader.h>
#endif
#ifndef INCLUDED_com_stencyl_graphics_shaders_PostProcess
#include <com/stencyl/graphics/shaders/PostProcess.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_52535a3fcf65ee0e_6_new,"com.stencyl.graphics.shaders.ExternalShader","new",0xbd247b36,"com.stencyl.graphics.shaders.ExternalShader.new","com/stencyl/graphics/shaders/ExternalShader.hx",6,0xdc9e273a)
namespace com{
namespace stencyl{
namespace graphics{
namespace shaders{

void ExternalShader_obj::__construct(::String scriptPath){
            	HX_GC_STACKFRAME(&_hx_pos_52535a3fcf65ee0e_6_new)
HXLINE(   7)		super::__construct();
HXLINE(   8)		scriptPath = (HX_("assets/data/",f9,10,73,a0) + scriptPath);
HXLINE(   9)		this->model =  ::com::stencyl::graphics::shaders::PostProcess_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this),scriptPath,null());
            	}

Dynamic ExternalShader_obj::__CreateEmpty() { return new ExternalShader_obj; }

void *ExternalShader_obj::_hx_vtable = 0;

Dynamic ExternalShader_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ExternalShader_obj > _hx_result = new ExternalShader_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ExternalShader_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0c55a2c8) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0c55a2c8;
	} else {
		return inClassId==(int)0x488ca67b;
	}
}


hx::ObjectPtr< ExternalShader_obj > ExternalShader_obj::__new(::String scriptPath) {
	hx::ObjectPtr< ExternalShader_obj > __this = new ExternalShader_obj();
	__this->__construct(scriptPath);
	return __this;
}

hx::ObjectPtr< ExternalShader_obj > ExternalShader_obj::__alloc(hx::Ctx *_hx_ctx,::String scriptPath) {
	ExternalShader_obj *__this = (ExternalShader_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ExternalShader_obj), true, "com.stencyl.graphics.shaders.ExternalShader"));
	*(void **)__this = ExternalShader_obj::_hx_vtable;
	__this->__construct(scriptPath);
	return __this;
}

ExternalShader_obj::ExternalShader_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ExternalShader_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *ExternalShader_obj_sStaticStorageInfo = 0;
#endif

static void ExternalShader_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ExternalShader_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ExternalShader_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ExternalShader_obj::__mClass,"__mClass");
};

#endif

hx::Class ExternalShader_obj::__mClass;

void ExternalShader_obj::__register()
{
	hx::Object *dummy = new ExternalShader_obj;
	ExternalShader_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.graphics.shaders.ExternalShader","\x44","\x68","\x55","\x7c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ExternalShader_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ExternalShader_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ExternalShader_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ExternalShader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ExternalShader_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace graphics
} // end namespace shaders
