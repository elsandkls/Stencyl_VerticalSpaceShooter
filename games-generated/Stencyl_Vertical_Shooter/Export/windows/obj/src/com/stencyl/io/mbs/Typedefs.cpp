// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_MbsBackground
#include <com/stencyl/io/mbs/MbsBackground.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_MbsBlank
#include <com/stencyl/io/mbs/MbsBlank.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_MbsCustomBlock
#include <com/stencyl/io/mbs/MbsCustomBlock.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_MbsFont
#include <com/stencyl/io/mbs/MbsFont.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_MbsMusic
#include <com/stencyl/io/mbs/MbsMusic.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_MbsResource
#include <com/stencyl/io/mbs/MbsResource.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_Typedefs
#include <com/stencyl/io/mbs/Typedefs.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_actortype_MbsActorType
#include <com/stencyl/io/mbs/actortype/MbsActorType.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_actortype_MbsAnimShape
#include <com/stencyl/io/mbs/actortype/MbsAnimShape.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_actortype_MbsAnimation
#include <com/stencyl/io/mbs/actortype/MbsAnimation.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_actortype_MbsSprite
#include <com/stencyl/io/mbs/actortype/MbsSprite.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_game_MbsAtlas
#include <com/stencyl/io/mbs/game/MbsAtlas.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_game_MbsCollisionGroup
#include <com/stencyl/io/mbs/game/MbsCollisionGroup.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_game_MbsCollisionPair
#include <com/stencyl/io/mbs/game/MbsCollisionPair.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_game_MbsCollisionShape
#include <com/stencyl/io/mbs/game/MbsCollisionShape.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_game_MbsGame
#include <com/stencyl/io/mbs/game/MbsGame.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_game_autotile_MbsAutotileFormat
#include <com/stencyl/io/mbs/game/autotile/MbsAutotileFormat.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_game_autotile_MbsCorners
#include <com/stencyl/io/mbs/game/autotile/MbsCorners.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_MbsActorInstance
#include <com/stencyl/io/mbs/scene/MbsActorInstance.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_MbsScene
#include <com/stencyl/io/mbs/scene/MbsScene.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_MbsSceneHeader
#include <com/stencyl/io/mbs/scene/MbsSceneHeader.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_MbsTile
#include <com/stencyl/io/mbs/scene/MbsTile.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_MbsTileset
#include <com/stencyl/io/mbs/scene/MbsTileset.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_layers_MbsColorBackground
#include <com/stencyl/io/mbs/scene/layers/MbsColorBackground.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_layers_MbsGradientBackground
#include <com/stencyl/io/mbs/scene/layers/MbsGradientBackground.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_layers_MbsImageBackground
#include <com/stencyl/io/mbs/scene/layers/MbsImageBackground.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_layers_MbsInteractiveLayer
#include <com/stencyl/io/mbs/scene/layers/MbsInteractiveLayer.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_layers_MbsLayer
#include <com/stencyl/io/mbs/scene/layers/MbsLayer.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsHingeJoint
#include <com/stencyl/io/mbs/scene/physics/MbsHingeJoint.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsJoint
#include <com/stencyl/io/mbs/scene/physics/MbsJoint.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsRegion
#include <com/stencyl/io/mbs/scene/physics/MbsRegion.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsSlidingJoint
#include <com/stencyl/io/mbs/scene/physics/MbsSlidingJoint.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsStickJoint
#include <com/stencyl/io/mbs/scene/physics/MbsStickJoint.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_scene_physics_MbsTerrainRegion
#include <com/stencyl/io/mbs/scene/physics/MbsTerrainRegion.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsCircle
#include <com/stencyl/io/mbs/shape/MbsCircle.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsPoint
#include <com/stencyl/io/mbs/shape/MbsPoint.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsPolyRegion
#include <com/stencyl/io/mbs/shape/MbsPolyRegion.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsPolygon
#include <com/stencyl/io/mbs/shape/MbsPolygon.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsShape
#include <com/stencyl/io/mbs/shape/MbsShape.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsWireframe
#include <com/stencyl/io/mbs/shape/MbsWireframe.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_snippet_MbsAttribute
#include <com/stencyl/io/mbs/snippet/MbsAttribute.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_snippet_MbsAttributeDef
#include <com/stencyl/io/mbs/snippet/MbsAttributeDef.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_snippet_MbsBlock
#include <com/stencyl/io/mbs/snippet/MbsBlock.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_snippet_MbsEvent
#include <com/stencyl/io/mbs/snippet/MbsEvent.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_snippet_MbsMapElement
#include <com/stencyl/io/mbs/snippet/MbsMapElement.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_snippet_MbsSnippet
#include <com/stencyl/io/mbs/snippet/MbsSnippet.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_snippet_MbsSnippetDef
#include <com/stencyl/io/mbs/snippet/MbsSnippetDef.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypedefSet
#include <mbs/core/MbsTypedefSet.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a613c5a903c81bb6_5_new,"com.stencyl.io.mbs.Typedefs","new",0x9751e923,"com.stencyl.io.mbs.Typedefs.new","com/stencyl/io/mbs/Typedefs.hx",5,0x046e33ed)
HX_LOCAL_STACK_FRAME(_hx_pos_a613c5a903c81bb6_17_addTypes,"com.stencyl.io.mbs.Typedefs","addTypes",0x6caadaf5,"com.stencyl.io.mbs.Typedefs.addTypes","com/stencyl/io/mbs/Typedefs.hx",17,0x046e33ed)
HX_LOCAL_STACK_FRAME(_hx_pos_a613c5a903c81bb6_115_getHash,"com.stencyl.io.mbs.Typedefs","getHash",0xea9815c7,"com.stencyl.io.mbs.Typedefs.getHash","com/stencyl/io/mbs/Typedefs.hx",115,0x046e33ed)
HX_LOCAL_STACK_FRAME(_hx_pos_a613c5a903c81bb6_10_get,"com.stencyl.io.mbs.Typedefs","get",0x974c9959,"com.stencyl.io.mbs.Typedefs.get","com/stencyl/io/mbs/Typedefs.hx",10,0x046e33ed)
HX_LOCAL_STACK_FRAME(_hx_pos_a613c5a903c81bb6_7_boot,"com.stencyl.io.mbs.Typedefs","boot",0xc873160f,"com.stencyl.io.mbs.Typedefs.boot","com/stencyl/io/mbs/Typedefs.hx",7,0x046e33ed)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{

void Typedefs_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_a613c5a903c81bb6_5_new)
HXDLIN(   5)		super::__construct();
            	}

Dynamic Typedefs_obj::__CreateEmpty() { return new Typedefs_obj; }

void *Typedefs_obj::_hx_vtable = 0;

Dynamic Typedefs_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Typedefs_obj > _hx_result = new Typedefs_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Typedefs_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0fc15a15) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0fc15a15;
	} else {
		return inClassId==(int)0x6ebae23c;
	}
}

void Typedefs_obj::addTypes(){
            	HX_STACKFRAME(&_hx_pos_a613c5a903c81bb6_17_addTypes)
HXLINE(  18)		::com::stencyl::io::mbs::MbsResource_obj::initializeType();
HXLINE(  19)		this->types->push(::com::stencyl::io::mbs::MbsResource_obj::MBS_RESOURCE);
HXLINE(  20)		::com::stencyl::io::mbs::MbsBackground_obj::initializeType();
HXLINE(  21)		this->types->push(::com::stencyl::io::mbs::MbsBackground_obj::MBS_BACKGROUND);
HXLINE(  22)		::com::stencyl::io::mbs::MbsCustomBlock_obj::initializeType();
HXLINE(  23)		this->types->push(::com::stencyl::io::mbs::MbsCustomBlock_obj::MBS_CUSTOM_BLOCK);
HXLINE(  24)		::com::stencyl::io::mbs::MbsBlank_obj::initializeType();
HXLINE(  25)		this->types->push(::com::stencyl::io::mbs::MbsBlank_obj::MBS_BLANK);
HXLINE(  26)		::com::stencyl::io::mbs::MbsFont_obj::initializeType();
HXLINE(  27)		this->types->push(::com::stencyl::io::mbs::MbsFont_obj::MBS_FONT);
HXLINE(  28)		::com::stencyl::io::mbs::MbsMusic_obj::initializeType();
HXLINE(  29)		this->types->push(::com::stencyl::io::mbs::MbsMusic_obj::MBS_MUSIC);
HXLINE(  30)		::com::stencyl::io::mbs::actortype::MbsActorType_obj::initializeType();
HXLINE(  31)		this->types->push(::com::stencyl::io::mbs::actortype::MbsActorType_obj::MBS_ACTOR_TYPE);
HXLINE(  32)		::com::stencyl::io::mbs::actortype::MbsSprite_obj::initializeType();
HXLINE(  33)		this->types->push(::com::stencyl::io::mbs::actortype::MbsSprite_obj::MBS_SPRITE);
HXLINE(  34)		::com::stencyl::io::mbs::actortype::MbsAnimation_obj::initializeType();
HXLINE(  35)		this->types->push(::com::stencyl::io::mbs::actortype::MbsAnimation_obj::MBS_ANIMATION);
HXLINE(  36)		::com::stencyl::io::mbs::actortype::MbsAnimShape_obj::initializeType();
HXLINE(  37)		this->types->push(::com::stencyl::io::mbs::actortype::MbsAnimShape_obj::MBS_ANIM_SHAPE);
HXLINE(  38)		::com::stencyl::io::mbs::game::MbsGame_obj::initializeType();
HXLINE(  39)		this->types->push(::com::stencyl::io::mbs::game::MbsGame_obj::MBS_GAME);
HXLINE(  40)		::com::stencyl::io::mbs::game::MbsAtlas_obj::initializeType();
HXLINE(  41)		this->types->push(::com::stencyl::io::mbs::game::MbsAtlas_obj::MBS_ATLAS);
HXLINE(  42)		::com::stencyl::io::mbs::game::MbsCollisionShape_obj::initializeType();
HXLINE(  43)		this->types->push(::com::stencyl::io::mbs::game::MbsCollisionShape_obj::MBS_COLLISION_SHAPE);
HXLINE(  44)		::com::stencyl::io::mbs::game::MbsCollisionGroup_obj::initializeType();
HXLINE(  45)		this->types->push(::com::stencyl::io::mbs::game::MbsCollisionGroup_obj::MBS_COLLISION_GROUP);
HXLINE(  46)		::com::stencyl::io::mbs::game::MbsCollisionPair_obj::initializeType();
HXLINE(  47)		this->types->push(::com::stencyl::io::mbs::game::MbsCollisionPair_obj::MBS_COLLISION_PAIR);
HXLINE(  48)		::com::stencyl::io::mbs::scene::MbsSceneHeader_obj::initializeType();
HXLINE(  49)		this->types->push(::com::stencyl::io::mbs::scene::MbsSceneHeader_obj::MBS_SCENE_HEADER);
HXLINE(  50)		::com::stencyl::io::mbs::scene::MbsTileset_obj::initializeType();
HXLINE(  51)		this->types->push(::com::stencyl::io::mbs::scene::MbsTileset_obj::MBS_TILESET);
HXLINE(  52)		::com::stencyl::io::mbs::scene::MbsTile_obj::initializeType();
HXLINE(  53)		this->types->push(::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE);
HXLINE(  54)		::com::stencyl::io::mbs::scene::MbsScene_obj::initializeType();
HXLINE(  55)		this->types->push(::com::stencyl::io::mbs::scene::MbsScene_obj::MBS_SCENE);
HXLINE(  56)		::com::stencyl::io::mbs::scene::MbsActorInstance_obj::initializeType();
HXLINE(  57)		this->types->push(::com::stencyl::io::mbs::scene::MbsActorInstance_obj::MBS_ACTOR_INSTANCE);
HXLINE(  58)		::com::stencyl::io::mbs::scene::layers::MbsColorBackground_obj::initializeType();
HXLINE(  59)		this->types->push(::com::stencyl::io::mbs::scene::layers::MbsColorBackground_obj::MBS_COLOR_BACKGROUND);
HXLINE(  60)		::com::stencyl::io::mbs::scene::layers::MbsGradientBackground_obj::initializeType();
HXLINE(  61)		this->types->push(::com::stencyl::io::mbs::scene::layers::MbsGradientBackground_obj::MBS_GRADIENT_BACKGROUND);
HXLINE(  62)		::com::stencyl::io::mbs::scene::layers::MbsLayer_obj::initializeType();
HXLINE(  63)		this->types->push(::com::stencyl::io::mbs::scene::layers::MbsLayer_obj::MBS_LAYER);
HXLINE(  64)		::com::stencyl::io::mbs::scene::layers::MbsInteractiveLayer_obj::initializeType();
HXLINE(  65)		this->types->push(::com::stencyl::io::mbs::scene::layers::MbsInteractiveLayer_obj::MBS_INTERACTIVE_LAYER);
HXLINE(  66)		::com::stencyl::io::mbs::scene::layers::MbsImageBackground_obj::initializeType();
HXLINE(  67)		this->types->push(::com::stencyl::io::mbs::scene::layers::MbsImageBackground_obj::MBS_IMAGE_BACKGROUND);
HXLINE(  68)		::com::stencyl::io::mbs::scene::physics::MbsJoint_obj::initializeType();
HXLINE(  69)		this->types->push(::com::stencyl::io::mbs::scene::physics::MbsJoint_obj::MBS_JOINT);
HXLINE(  70)		::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::initializeType();
HXLINE(  71)		this->types->push(::com::stencyl::io::mbs::scene::physics::MbsStickJoint_obj::MBS_STICK_JOINT);
HXLINE(  72)		::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::initializeType();
HXLINE(  73)		this->types->push(::com::stencyl::io::mbs::scene::physics::MbsHingeJoint_obj::MBS_HINGE_JOINT);
HXLINE(  74)		::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::initializeType();
HXLINE(  75)		this->types->push(::com::stencyl::io::mbs::scene::physics::MbsSlidingJoint_obj::MBS_SLIDING_JOINT);
HXLINE(  76)		::com::stencyl::io::mbs::scene::physics::MbsRegion_obj::initializeType();
HXLINE(  77)		this->types->push(::com::stencyl::io::mbs::scene::physics::MbsRegion_obj::MBS_REGION);
HXLINE(  78)		::com::stencyl::io::mbs::scene::physics::MbsTerrainRegion_obj::initializeType();
HXLINE(  79)		this->types->push(::com::stencyl::io::mbs::scene::physics::MbsTerrainRegion_obj::MBS_TERRAIN_REGION);
HXLINE(  80)		::com::stencyl::io::mbs::shape::MbsPoint_obj::initializeType();
HXLINE(  81)		this->types->push(::com::stencyl::io::mbs::shape::MbsPoint_obj::MBS_POINT);
HXLINE(  82)		::com::stencyl::io::mbs::shape::MbsShape_obj::initializeType();
HXLINE(  83)		this->types->push(::com::stencyl::io::mbs::shape::MbsShape_obj::MBS_SHAPE);
HXLINE(  84)		::com::stencyl::io::mbs::shape::MbsCircle_obj::initializeType();
HXLINE(  85)		this->types->push(::com::stencyl::io::mbs::shape::MbsCircle_obj::MBS_CIRCLE);
HXLINE(  86)		::com::stencyl::io::mbs::shape::MbsPolygon_obj::initializeType();
HXLINE(  87)		this->types->push(::com::stencyl::io::mbs::shape::MbsPolygon_obj::MBS_POLYGON);
HXLINE(  88)		::com::stencyl::io::mbs::shape::MbsPolyRegion_obj::initializeType();
HXLINE(  89)		this->types->push(::com::stencyl::io::mbs::shape::MbsPolyRegion_obj::MBS_POLY_REGION);
HXLINE(  90)		::com::stencyl::io::mbs::shape::MbsWireframe_obj::initializeType();
HXLINE(  91)		this->types->push(::com::stencyl::io::mbs::shape::MbsWireframe_obj::MBS_WIREFRAME);
HXLINE(  92)		::com::stencyl::io::mbs::snippet::MbsSnippetDef_obj::initializeType();
HXLINE(  93)		this->types->push(::com::stencyl::io::mbs::snippet::MbsSnippetDef_obj::MBS_SNIPPET_DEF);
HXLINE(  94)		::com::stencyl::io::mbs::snippet::MbsAttributeDef_obj::initializeType();
HXLINE(  95)		this->types->push(::com::stencyl::io::mbs::snippet::MbsAttributeDef_obj::MBS_ATTRIBUTE_DEF);
HXLINE(  96)		::com::stencyl::io::mbs::snippet::MbsBlock_obj::initializeType();
HXLINE(  97)		this->types->push(::com::stencyl::io::mbs::snippet::MbsBlock_obj::MBS_BLOCK);
HXLINE(  98)		::com::stencyl::io::mbs::snippet::MbsEvent_obj::initializeType();
HXLINE(  99)		this->types->push(::com::stencyl::io::mbs::snippet::MbsEvent_obj::MBS_EVENT);
HXLINE( 100)		::com::stencyl::io::mbs::snippet::MbsSnippet_obj::initializeType();
HXLINE( 101)		this->types->push(::com::stencyl::io::mbs::snippet::MbsSnippet_obj::MBS_SNIPPET);
HXLINE( 102)		::com::stencyl::io::mbs::snippet::MbsAttribute_obj::initializeType();
HXLINE( 103)		this->types->push(::com::stencyl::io::mbs::snippet::MbsAttribute_obj::MBS_ATTRIBUTE);
HXLINE( 104)		::com::stencyl::io::mbs::snippet::MbsMapElement_obj::initializeType();
HXLINE( 105)		this->types->push(::com::stencyl::io::mbs::snippet::MbsMapElement_obj::MBS_MAP_ELEMENT);
HXLINE( 106)		::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::initializeType();
HXLINE( 107)		this->types->push(::com::stencyl::io::mbs::game::autotile::MbsAutotileFormat_obj::MBS_AUTOTILE_FORMAT);
HXLINE( 108)		::com::stencyl::io::mbs::game::autotile::MbsCorners_obj::initializeType();
HXLINE( 109)		this->types->push(::com::stencyl::io::mbs::game::autotile::MbsCorners_obj::MBS_CORNERS);
            	}


int Typedefs_obj::getHash(){
            	HX_STACKFRAME(&_hx_pos_a613c5a903c81bb6_115_getHash)
HXDLIN( 115)		return (int)-2033963926;
            	}


 ::com::stencyl::io::mbs::Typedefs Typedefs_obj::instance;

 ::com::stencyl::io::mbs::Typedefs Typedefs_obj::get(){
            	HX_GC_STACKFRAME(&_hx_pos_a613c5a903c81bb6_10_get)
HXLINE(  11)		if (hx::IsNull( ::com::stencyl::io::mbs::Typedefs_obj::instance )) {
HXLINE(  12)			::com::stencyl::io::mbs::Typedefs_obj::instance =  ::com::stencyl::io::mbs::Typedefs_obj::__alloc( HX_CTX );
            		}
HXLINE(  13)		return ::com::stencyl::io::mbs::Typedefs_obj::instance;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Typedefs_obj,get,return )


hx::ObjectPtr< Typedefs_obj > Typedefs_obj::__new() {
	hx::ObjectPtr< Typedefs_obj > __this = new Typedefs_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Typedefs_obj > Typedefs_obj::__alloc(hx::Ctx *_hx_ctx) {
	Typedefs_obj *__this = (Typedefs_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Typedefs_obj), true, "com.stencyl.io.mbs.Typedefs"));
	*(void **)__this = Typedefs_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Typedefs_obj::Typedefs_obj()
{
}

hx::Val Typedefs_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"getHash") ) { return hx::Val( getHash_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"addTypes") ) { return hx::Val( addTypes_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Typedefs_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { outValue = get_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"instance") ) { outValue = ( instance ); return true; }
	}
	return false;
}

bool Typedefs_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"instance") ) { instance=ioValue.Cast<  ::com::stencyl::io::mbs::Typedefs >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Typedefs_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Typedefs_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::com::stencyl::io::mbs::Typedefs*/ ,(void *) &Typedefs_obj::instance,HX_HCSTRING("instance","\x95","\x1f","\xe1","\x59")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Typedefs_obj_sMemberFields[] = {
	HX_HCSTRING("addTypes","\x98","\x96","\x28","\x94"),
	HX_HCSTRING("getHash","\x84","\xdf","\x8a","\x17"),
	::String(null()) };

static void Typedefs_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Typedefs_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Typedefs_obj::instance,"instance");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Typedefs_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Typedefs_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Typedefs_obj::instance,"instance");
};

#endif

hx::Class Typedefs_obj::__mClass;

static ::String Typedefs_obj_sStaticFields[] = {
	HX_HCSTRING("instance","\x95","\x1f","\xe1","\x59"),
	HX_HCSTRING("get","\x96","\x80","\x4e","\x00"),
	::String(null())
};

void Typedefs_obj::__register()
{
	hx::Object *dummy = new Typedefs_obj;
	Typedefs_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.Typedefs","\xb1","\x1b","\x00","\x3d");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Typedefs_obj::__GetStatic;
	__mClass->mSetStaticField = &Typedefs_obj::__SetStatic;
	__mClass->mMarkFunc = Typedefs_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Typedefs_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Typedefs_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Typedefs_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Typedefs_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Typedefs_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Typedefs_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Typedefs_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_a613c5a903c81bb6_7_boot)
HXDLIN(   7)		instance = null();
            	}
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
