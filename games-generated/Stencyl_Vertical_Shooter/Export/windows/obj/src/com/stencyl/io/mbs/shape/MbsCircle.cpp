// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsCircle
#include <com/stencyl/io/mbs/shape/MbsCircle.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsPoint
#include <com/stencyl/io/mbs/shape/MbsPoint.h>
#endif
#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsShape
#include <com/stencyl/io/mbs/shape/MbsShape.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsField
#include <mbs/core/MbsField.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_8e7fdbf71543cdea_44_new,"com.stencyl.io.mbs.shape.MbsCircle","new",0x225057ca,"com.stencyl.io.mbs.shape.MbsCircle.new","com/stencyl/io/mbs/shape/MbsCircle.hx",44,0x638dcc27)
HX_LOCAL_STACK_FRAME(_hx_pos_8e7fdbf71543cdea_38_getMbsType,"com.stencyl.io.mbs.shape.MbsCircle","getMbsType",0x408ae138,"com.stencyl.io.mbs.shape.MbsCircle.getMbsType","com/stencyl/io/mbs/shape/MbsCircle.hx",38,0x638dcc27)
HX_LOCAL_STACK_FRAME(_hx_pos_8e7fdbf71543cdea_51_allocateNew,"com.stencyl.io.mbs.shape.MbsCircle","allocateNew",0xcd9e4b0d,"com.stencyl.io.mbs.shape.MbsCircle.allocateNew","com/stencyl/io/mbs/shape/MbsCircle.hx",51,0x638dcc27)
HX_LOCAL_STACK_FRAME(_hx_pos_8e7fdbf71543cdea_55_getPosition,"com.stencyl.io.mbs.shape.MbsCircle","getPosition",0x153f64c9,"com.stencyl.io.mbs.shape.MbsCircle.getPosition","com/stencyl/io/mbs/shape/MbsCircle.hx",55,0x638dcc27)
HX_LOCAL_STACK_FRAME(_hx_pos_8e7fdbf71543cdea_62_getRadius,"com.stencyl.io.mbs.shape.MbsCircle","getRadius",0xfdcc4c72,"com.stencyl.io.mbs.shape.MbsCircle.getRadius","com/stencyl/io/mbs/shape/MbsCircle.hx",62,0x638dcc27)
HX_LOCAL_STACK_FRAME(_hx_pos_8e7fdbf71543cdea_67_setRadius,"com.stencyl.io.mbs.shape.MbsCircle","setRadius",0xe11d387e,"com.stencyl.io.mbs.shape.MbsCircle.setRadius","com/stencyl/io/mbs/shape/MbsCircle.hx",67,0x638dcc27)
HX_LOCAL_STACK_FRAME(_hx_pos_8e7fdbf71543cdea_23_initializeType,"com.stencyl.io.mbs.shape.MbsCircle","initializeType",0xe42e7500,"com.stencyl.io.mbs.shape.MbsCircle.initializeType","com/stencyl/io/mbs/shape/MbsCircle.hx",23,0x638dcc27)
HX_LOCAL_STACK_FRAME(_hx_pos_8e7fdbf71543cdea_18_initializeType,"com.stencyl.io.mbs.shape.MbsCircle","initializeType",0xe42e7500,"com.stencyl.io.mbs.shape.MbsCircle.initializeType","com/stencyl/io/mbs/shape/MbsCircle.hx",18,0x638dcc27)
HX_LOCAL_STACK_FRAME(_hx_pos_8e7fdbf71543cdea_33_new_MbsCircle_list,"com.stencyl.io.mbs.shape.MbsCircle","new_MbsCircle_list",0x247c8584,"com.stencyl.io.mbs.shape.MbsCircle.new_MbsCircle_list","com/stencyl/io/mbs/shape/MbsCircle.hx",33,0x638dcc27)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace shape{

void MbsCircle_obj::__construct(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_8e7fdbf71543cdea_44_new)
HXLINE(  45)		super::__construct(data);
HXLINE(  46)		this->_position =  ::com::stencyl::io::mbs::shape::MbsPoint_obj::__alloc( HX_CTX ,data);
            	}

Dynamic MbsCircle_obj::__CreateEmpty() { return new MbsCircle_obj; }

void *MbsCircle_obj::_hx_vtable = 0;

Dynamic MbsCircle_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsCircle_obj > _hx_result = new MbsCircle_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsCircle_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x226c8c4e) {
		if (inClassId<=(int)0x17b72d64) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x17b72d64;
		} else {
			return inClassId==(int)0x226c8c4e;
		}
	} else {
		return inClassId==(int)0x3c5173db;
	}
}

 ::mbs::core::MbsType MbsCircle_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_8e7fdbf71543cdea_38_getMbsType)
HXDLIN(  38)		return ::com::stencyl::io::mbs::shape::MbsCircle_obj::MBS_CIRCLE;
            	}


void MbsCircle_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_8e7fdbf71543cdea_51_allocateNew)
HXDLIN(  51)		::Dynamic _hx_tmp = this->data;
HXDLIN(  51)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::com::stencyl::io::mbs::shape::MbsCircle_obj::MBS_CIRCLE->getSize()));
            	}


 ::com::stencyl::io::mbs::shape::MbsPoint MbsCircle_obj::getPosition(){
            	HX_STACKFRAME(&_hx_pos_8e7fdbf71543cdea_55_getPosition)
HXLINE(  56)		 ::com::stencyl::io::mbs::shape::MbsPoint _hx_tmp = this->_position;
HXDLIN(  56)		_hx_tmp->setAddress((this->address + ::com::stencyl::io::mbs::shape::MbsCircle_obj::position->address));
HXLINE(  57)		return this->_position;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsCircle_obj,getPosition,return )

Float MbsCircle_obj::getRadius(){
            	HX_STACKFRAME(&_hx_pos_8e7fdbf71543cdea_62_getRadius)
HXDLIN(  62)		::Dynamic _hx_tmp = this->data;
HXDLIN(  62)		return ::mbs::io::MbsIO_obj::readFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::shape::MbsCircle_obj::radius->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsCircle_obj,getRadius,return )

void MbsCircle_obj::setRadius(Float _val){
            	HX_STACKFRAME(&_hx_pos_8e7fdbf71543cdea_67_setRadius)
HXDLIN(  67)		::Dynamic _hx_tmp = this->data;
HXDLIN(  67)		::mbs::io::MbsIO_obj::writeFloat(_hx_tmp,(this->address + ::com::stencyl::io::mbs::shape::MbsCircle_obj::radius->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsCircle_obj,setRadius,(void))

 ::mbs::core::MbsField MbsCircle_obj::position;

 ::mbs::core::MbsField MbsCircle_obj::radius;

 ::mbs::core::ComposedType MbsCircle_obj::MBS_CIRCLE;

void MbsCircle_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_8e7fdbf71543cdea_23_initializeType)
HXLINE(  23)			return  ::com::stencyl::io::mbs::shape::MbsCircle_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_8e7fdbf71543cdea_18_initializeType)
HXLINE(  19)		if (hx::IsNotNull( ::com::stencyl::io::mbs::shape::MbsCircle_obj::MBS_CIRCLE )) {
HXLINE(  19)			return;
            		}
HXLINE(  20)		::com::stencyl::io::mbs::shape::MbsShape_obj::initializeType();
HXLINE(  22)		::com::stencyl::io::mbs::shape::MbsCircle_obj::MBS_CIRCLE =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsCircle",0e,84,b2,90));
HXLINE(  23)		::com::stencyl::io::mbs::shape::MbsCircle_obj::MBS_CIRCLE->setInstantiator( ::Dynamic(new _hx_Closure_0()));
HXLINE(  24)		::com::stencyl::io::mbs::shape::MbsCircle_obj::MBS_CIRCLE->inherit(::com::stencyl::io::mbs::shape::MbsShape_obj::MBS_SHAPE);
HXLINE(  26)		::com::stencyl::io::mbs::shape::MbsCircle_obj::position = ::com::stencyl::io::mbs::shape::MbsCircle_obj::MBS_CIRCLE->createField(HX_("position",a9,a0,fa,ca),::com::stencyl::io::mbs::shape::MbsPoint_obj::MBS_POINT);
HXLINE(  27)		::com::stencyl::io::mbs::shape::MbsCircle_obj::radius = ::com::stencyl::io::mbs::shape::MbsCircle_obj::MBS_CIRCLE->createField(HX_("radius",52,d0,f6,b0),::mbs::core::MbsTypes_obj::FLOAT);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsCircle_obj,initializeType,(void))

 ::mbs::io::MbsList MbsCircle_obj::new_MbsCircle_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_8e7fdbf71543cdea_33_new_MbsCircle_list)
HXDLIN(  33)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::shape::MbsCircle_obj::MBS_CIRCLE;
HXDLIN(  33)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::shape::MbsCircle_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsCircle_obj,new_MbsCircle_list,return )


hx::ObjectPtr< MbsCircle_obj > MbsCircle_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsCircle_obj > __this = new MbsCircle_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsCircle_obj > MbsCircle_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsCircle_obj *__this = (MbsCircle_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsCircle_obj), true, "com.stencyl.io.mbs.shape.MbsCircle"));
	*(void **)__this = MbsCircle_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsCircle_obj::MbsCircle_obj()
{
}

void MbsCircle_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MbsCircle);
	HX_MARK_MEMBER_NAME(_position,"_position");
	 ::mbs::core::MbsObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MbsCircle_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_position,"_position");
	 ::mbs::core::MbsObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val MbsCircle_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_position") ) { return hx::Val( _position ); }
		if (HX_FIELD_EQ(inName,"getRadius") ) { return hx::Val( getRadius_dyn() ); }
		if (HX_FIELD_EQ(inName,"setRadius") ) { return hx::Val( setRadius_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
		if (HX_FIELD_EQ(inName,"getPosition") ) { return hx::Val( getPosition_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsCircle_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"radius") ) { outValue = ( radius ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"position") ) { outValue = ( position ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"MBS_CIRCLE") ) { outValue = ( MBS_CIRCLE ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"new_MbsCircle_list") ) { outValue = new_MbsCircle_list_dyn(); return true; }
	}
	return false;
}

hx::Val MbsCircle_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"_position") ) { _position=inValue.Cast<  ::com::stencyl::io::mbs::shape::MbsPoint >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool MbsCircle_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"radius") ) { radius=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"position") ) { position=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"MBS_CIRCLE") ) { MBS_CIRCLE=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
	}
	return false;
}

void MbsCircle_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("_position","\x08","\x98","\x90","\x12"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo MbsCircle_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::com::stencyl::io::mbs::shape::MbsPoint*/ ,(int)offsetof(MbsCircle_obj,_position),HX_HCSTRING("_position","\x08","\x98","\x90","\x12")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo MbsCircle_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsCircle_obj::position,HX_HCSTRING("position","\xa9","\xa0","\xfa","\xca")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsCircle_obj::radius,HX_HCSTRING("radius","\x52","\xd0","\xf6","\xb0")},
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsCircle_obj::MBS_CIRCLE,HX_HCSTRING("MBS_CIRCLE","\x11","\x50","\x05","\x3b")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsCircle_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("_position","\x08","\x98","\x90","\x12"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	HX_HCSTRING("getPosition","\x5f","\x63","\xee","\xf0"),
	HX_HCSTRING("getRadius","\x88","\x59","\x4d","\x2d"),
	HX_HCSTRING("setRadius","\x94","\x45","\x9e","\x10"),
	::String(null()) };

static void MbsCircle_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsCircle_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsCircle_obj::position,"position");
	HX_MARK_MEMBER_NAME(MbsCircle_obj::radius,"radius");
	HX_MARK_MEMBER_NAME(MbsCircle_obj::MBS_CIRCLE,"MBS_CIRCLE");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsCircle_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsCircle_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsCircle_obj::position,"position");
	HX_VISIT_MEMBER_NAME(MbsCircle_obj::radius,"radius");
	HX_VISIT_MEMBER_NAME(MbsCircle_obj::MBS_CIRCLE,"MBS_CIRCLE");
};

#endif

hx::Class MbsCircle_obj::__mClass;

static ::String MbsCircle_obj_sStaticFields[] = {
	HX_HCSTRING("position","\xa9","\xa0","\xfa","\xca"),
	HX_HCSTRING("radius","\x52","\xd0","\xf6","\xb0"),
	HX_HCSTRING("MBS_CIRCLE","\x11","\x50","\x05","\x3b"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsCircle_list","\xae","\x25","\x58","\xcb"),
	::String(null())
};

void MbsCircle_obj::__register()
{
	hx::Object *dummy = new MbsCircle_obj;
	MbsCircle_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.shape.MbsCircle","\xd8","\x6a","\x8a","\x1e");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsCircle_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsCircle_obj::__SetStatic;
	__mClass->mMarkFunc = MbsCircle_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsCircle_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsCircle_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsCircle_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsCircle_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsCircle_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsCircle_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace shape
