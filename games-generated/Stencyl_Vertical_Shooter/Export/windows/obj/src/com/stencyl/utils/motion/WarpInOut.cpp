// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_utils_motion_EasingFunction
#include <com/stencyl/utils/motion/EasingFunction.h>
#endif
#ifndef INCLUDED_com_stencyl_utils_motion_WarpInOut
#include <com/stencyl/utils/motion/WarpInOut.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_815f7627c165fcc3_524_new,"com.stencyl.utils.motion.WarpInOut","new",0x0cf7c007,"com.stencyl.utils.motion.WarpInOut.new","com/stencyl/utils/motion/EasingFunctions.hx",524,0xda1c1718)
HX_LOCAL_STACK_FRAME(_hx_pos_815f7627c165fcc3_526_apply,"com.stencyl.utils.motion.WarpInOut","apply",0x9577ecd5,"com.stencyl.utils.motion.WarpInOut.apply","com/stencyl/utils/motion/EasingFunctions.hx",526,0xda1c1718)
namespace com{
namespace stencyl{
namespace utils{
namespace motion{

void WarpInOut_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_815f7627c165fcc3_524_new)
HXDLIN( 524)		super::__construct();
            	}

Dynamic WarpInOut_obj::__CreateEmpty() { return new WarpInOut_obj; }

void *WarpInOut_obj::_hx_vtable = 0;

Dynamic WarpInOut_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< WarpInOut_obj > _hx_result = new WarpInOut_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool WarpInOut_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x047402bf) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x047402bf;
	} else {
		return inClassId==(int)0x3a90e3e5;
	}
}

Float WarpInOut_obj::apply(Float t){
            	HX_STACKFRAME(&_hx_pos_815f7627c165fcc3_526_apply)
HXDLIN( 526)		if ((t < ((Float)0.5))) {
HXDLIN( 526)			return (int)0;
            		}
            		else {
HXDLIN( 526)			return (int)1;
            		}
HXDLIN( 526)		return ((Float)0.);
            	}



WarpInOut_obj::WarpInOut_obj()
{
}

hx::Val WarpInOut_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"apply") ) { return hx::Val( apply_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *WarpInOut_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *WarpInOut_obj_sStaticStorageInfo = 0;
#endif

static ::String WarpInOut_obj_sMemberFields[] = {
	HX_HCSTRING("apply","\x6e","\x85","\x3b","\x24"),
	::String(null()) };

static void WarpInOut_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(WarpInOut_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void WarpInOut_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(WarpInOut_obj::__mClass,"__mClass");
};

#endif

hx::Class WarpInOut_obj::__mClass;

void WarpInOut_obj::__register()
{
	hx::Object *dummy = new WarpInOut_obj;
	WarpInOut_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.utils.motion.WarpInOut","\x95","\xb0","\xef","\x79");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = WarpInOut_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(WarpInOut_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< WarpInOut_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = WarpInOut_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = WarpInOut_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = WarpInOut_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace utils
} // end namespace motion
