// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_com_stencyl_io_mbs_scene_MbsTile
#include <com/stencyl/io/mbs/scene/MbsTile.h>
#endif
#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsField
#include <mbs/core/MbsField.h>
#endif
#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
#ifndef INCLUDED_mbs_core_MbsTypes
#include <mbs/core/MbsTypes.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIO
#include <mbs/io/MbsIO.h>
#endif
#ifndef INCLUDED_mbs_io_MbsIntList
#include <mbs/io/MbsIntList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsList
#include <mbs/io/MbsList.h>
#endif
#ifndef INCLUDED_mbs_io_MbsListBase
#include <mbs/io/MbsListBase.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ceaf6185541e2d00_55_new,"com.stencyl.io.mbs.scene.MbsTile","new",0xf4ce6093,"com.stencyl.io.mbs.scene.MbsTile.new","com/stencyl/io/mbs/scene/MbsTile.hx",55,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_48_getMbsType,"com.stencyl.io.mbs.scene.MbsTile","getMbsType",0x55f9738f,"com.stencyl.io.mbs.scene.MbsTile.getMbsType","com/stencyl/io/mbs/scene/MbsTile.hx",48,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_63_allocateNew,"com.stencyl.io.mbs.scene.MbsTile","allocateNew",0x78efc4d6,"com.stencyl.io.mbs.scene.MbsTile.allocateNew","com/stencyl/io/mbs/scene/MbsTile.hx",63,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_68_getCollision,"com.stencyl.io.mbs.scene.MbsTile","getCollision",0xc91a9669,"com.stencyl.io.mbs.scene.MbsTile.getCollision","com/stencyl/io/mbs/scene/MbsTile.hx",68,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_73_setCollision,"com.stencyl.io.mbs.scene.MbsTile","setCollision",0xde13b9dd,"com.stencyl.io.mbs.scene.MbsTile.setCollision","com/stencyl/io/mbs/scene/MbsTile.hx",73,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_78_getMetadata,"com.stencyl.io.mbs.scene.MbsTile","getMetadata",0x35b02558,"com.stencyl.io.mbs.scene.MbsTile.getMetadata","com/stencyl/io/mbs/scene/MbsTile.hx",78,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_83_setMetadata,"com.stencyl.io.mbs.scene.MbsTile","setMetadata",0x401d2c64,"com.stencyl.io.mbs.scene.MbsTile.setMetadata","com/stencyl/io/mbs/scene/MbsTile.hx",83,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_87_getDurations,"com.stencyl.io.mbs.scene.MbsTile","getDurations",0xd59f4896,"com.stencyl.io.mbs.scene.MbsTile.getDurations","com/stencyl/io/mbs/scene/MbsTile.hx",87,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_93_createDurations,"com.stencyl.io.mbs.scene.MbsTile","createDurations",0x781fa4b6,"com.stencyl.io.mbs.scene.MbsTile.createDurations","com/stencyl/io/mbs/scene/MbsTile.hx",93,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_101_getFrames,"com.stencyl.io.mbs.scene.MbsTile","getFrames",0x1069714f,"com.stencyl.io.mbs.scene.MbsTile.getFrames","com/stencyl/io/mbs/scene/MbsTile.hx",101,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_106_setFrames,"com.stencyl.io.mbs.scene.MbsTile","setFrames",0xf3ba5d5b,"com.stencyl.io.mbs.scene.MbsTile.setFrames","com/stencyl/io/mbs/scene/MbsTile.hx",106,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_111_getId,"com.stencyl.io.mbs.scene.MbsTile","getId",0x85c5d504,"com.stencyl.io.mbs.scene.MbsTile.getId","com/stencyl/io/mbs/scene/MbsTile.hx",111,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_116_setId,"com.stencyl.io.mbs.scene.MbsTile","setId",0x6e94cb10,"com.stencyl.io.mbs.scene.MbsTile.setId","com/stencyl/io/mbs/scene/MbsTile.hx",116,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_121_getOrder,"com.stencyl.io.mbs.scene.MbsTile","getOrder",0xee66d705,"com.stencyl.io.mbs.scene.MbsTile.getOrder","com/stencyl/io/mbs/scene/MbsTile.hx",121,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_126_setOrder,"com.stencyl.io.mbs.scene.MbsTile","setOrder",0x9cc43079,"com.stencyl.io.mbs.scene.MbsTile.setOrder","com/stencyl/io/mbs/scene/MbsTile.hx",126,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_131_getAutotile,"com.stencyl.io.mbs.scene.MbsTile","getAutotile",0x3adfcc06,"com.stencyl.io.mbs.scene.MbsTile.getAutotile","com/stencyl/io/mbs/scene/MbsTile.hx",131,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_136_setAutotile,"com.stencyl.io.mbs.scene.MbsTile","setAutotile",0x454cd312,"com.stencyl.io.mbs.scene.MbsTile.setAutotile","com/stencyl/io/mbs/scene/MbsTile.hx",136,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_140_getAutotileMerge,"com.stencyl.io.mbs.scene.MbsTile","getAutotileMerge",0xc974f0d2,"com.stencyl.io.mbs.scene.MbsTile.getAutotileMerge","com/stencyl/io/mbs/scene/MbsTile.hx",140,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_146_createAutotileMerge,"com.stencyl.io.mbs.scene.MbsTile","createAutotileMerge",0xf625dcf2,"com.stencyl.io.mbs.scene.MbsTile.createAutotileMerge","com/stencyl/io/mbs/scene/MbsTile.hx",146,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_28_initializeType,"com.stencyl.io.mbs.scene.MbsTile","initializeType",0xe12a7ed7,"com.stencyl.io.mbs.scene.MbsTile.initializeType","com/stencyl/io/mbs/scene/MbsTile.hx",28,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_25_initializeType,"com.stencyl.io.mbs.scene.MbsTile","initializeType",0xe12a7ed7,"com.stencyl.io.mbs.scene.MbsTile.initializeType","com/stencyl/io/mbs/scene/MbsTile.hx",25,0x71992d3e)
HX_LOCAL_STACK_FRAME(_hx_pos_ceaf6185541e2d00_43_new_MbsTile_list,"com.stencyl.io.mbs.scene.MbsTile","new_MbsTile_list",0x5f9cf97d,"com.stencyl.io.mbs.scene.MbsTile.new_MbsTile_list","com/stencyl/io/mbs/scene/MbsTile.hx",43,0x71992d3e)
namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace scene{

void MbsTile_obj::__construct(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_ceaf6185541e2d00_55_new)
HXLINE(  56)		super::__construct(data);
HXLINE(  57)		this->_durations =  ::mbs::io::MbsIntList_obj::__alloc( HX_CTX ,data);
HXLINE(  58)		this->_autotileMerge =  ::mbs::io::MbsIntList_obj::__alloc( HX_CTX ,data);
            	}

Dynamic MbsTile_obj::__CreateEmpty() { return new MbsTile_obj; }

void *MbsTile_obj::_hx_vtable = 0;

Dynamic MbsTile_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MbsTile_obj > _hx_result = new MbsTile_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool MbsTile_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0354970d) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0354970d;
	} else {
		return inClassId==(int)0x17b72d64;
	}
}

 ::mbs::core::MbsType MbsTile_obj::getMbsType(){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_48_getMbsType)
HXDLIN(  48)		return ::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE;
            	}


void MbsTile_obj::allocateNew(){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_63_allocateNew)
HXDLIN(  63)		::Dynamic _hx_tmp = this->data;
HXDLIN(  63)		this->setAddress(::mbs::io::MbsIO_obj::allocate(_hx_tmp,::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE->getSize()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsTile_obj,allocateNew,(void))

int MbsTile_obj::getCollision(){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_68_getCollision)
HXDLIN(  68)		::Dynamic _hx_tmp = this->data;
HXDLIN(  68)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::collision->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsTile_obj,getCollision,return )

void MbsTile_obj::setCollision(int _val){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_73_setCollision)
HXDLIN(  73)		::Dynamic _hx_tmp = this->data;
HXDLIN(  73)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::collision->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsTile_obj,setCollision,(void))

::String MbsTile_obj::getMetadata(){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_78_getMetadata)
HXDLIN(  78)		::Dynamic _hx_tmp = this->data;
HXDLIN(  78)		return ::mbs::io::MbsIO_obj::readString(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::metadata->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsTile_obj,getMetadata,return )

void MbsTile_obj::setMetadata(::String _val){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_83_setMetadata)
HXDLIN(  83)		::Dynamic _hx_tmp = this->data;
HXDLIN(  83)		::mbs::io::MbsIO_obj::writeString(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::metadata->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsTile_obj,setMetadata,(void))

 ::mbs::io::MbsIntList MbsTile_obj::getDurations(){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_87_getDurations)
HXLINE(  88)		 ::mbs::io::MbsIntList _hx_tmp = this->_durations;
HXDLIN(  88)		::Dynamic _hx_tmp1 = this->data;
HXDLIN(  88)		_hx_tmp->setAddress(::mbs::io::MbsIO_obj::readInt(_hx_tmp1,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::durations->address)));
HXLINE(  89)		return this->_durations;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsTile_obj,getDurations,return )

 ::mbs::io::MbsIntList MbsTile_obj::createDurations(int _length){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_93_createDurations)
HXLINE(  94)		this->_durations->allocateNew(_length);
HXLINE(  95)		::Dynamic _hx_tmp = this->data;
HXDLIN(  95)		int _hx_tmp1 = (this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::durations->address);
HXDLIN(  95)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,_hx_tmp1,this->_durations->getAddress());
HXLINE(  96)		return this->_durations;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsTile_obj,createDurations,return )

int MbsTile_obj::getFrames(){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_101_getFrames)
HXDLIN( 101)		::Dynamic _hx_tmp = this->data;
HXDLIN( 101)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::frames->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsTile_obj,getFrames,return )

void MbsTile_obj::setFrames(int _val){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_106_setFrames)
HXDLIN( 106)		::Dynamic _hx_tmp = this->data;
HXDLIN( 106)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::frames->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsTile_obj,setFrames,(void))

int MbsTile_obj::getId(){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_111_getId)
HXDLIN( 111)		::Dynamic _hx_tmp = this->data;
HXDLIN( 111)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::id->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsTile_obj,getId,return )

void MbsTile_obj::setId(int _val){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_116_setId)
HXDLIN( 116)		::Dynamic _hx_tmp = this->data;
HXDLIN( 116)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::id->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsTile_obj,setId,(void))

int MbsTile_obj::getOrder(){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_121_getOrder)
HXDLIN( 121)		::Dynamic _hx_tmp = this->data;
HXDLIN( 121)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::order->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsTile_obj,getOrder,return )

void MbsTile_obj::setOrder(int _val){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_126_setOrder)
HXDLIN( 126)		::Dynamic _hx_tmp = this->data;
HXDLIN( 126)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::order->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsTile_obj,setOrder,(void))

int MbsTile_obj::getAutotile(){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_131_getAutotile)
HXDLIN( 131)		::Dynamic _hx_tmp = this->data;
HXDLIN( 131)		return ::mbs::io::MbsIO_obj::readInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::autotile->address));
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsTile_obj,getAutotile,return )

void MbsTile_obj::setAutotile(int _val){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_136_setAutotile)
HXDLIN( 136)		::Dynamic _hx_tmp = this->data;
HXDLIN( 136)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::autotile->address),_val);
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsTile_obj,setAutotile,(void))

 ::mbs::io::MbsIntList MbsTile_obj::getAutotileMerge(){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_140_getAutotileMerge)
HXLINE( 141)		 ::mbs::io::MbsIntList _hx_tmp = this->_autotileMerge;
HXDLIN( 141)		::Dynamic _hx_tmp1 = this->data;
HXDLIN( 141)		_hx_tmp->setAddress(::mbs::io::MbsIO_obj::readInt(_hx_tmp1,(this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::autotileMerge->address)));
HXLINE( 142)		return this->_autotileMerge;
            	}


HX_DEFINE_DYNAMIC_FUNC0(MbsTile_obj,getAutotileMerge,return )

 ::mbs::io::MbsIntList MbsTile_obj::createAutotileMerge(int _length){
            	HX_STACKFRAME(&_hx_pos_ceaf6185541e2d00_146_createAutotileMerge)
HXLINE( 147)		this->_autotileMerge->allocateNew(_length);
HXLINE( 148)		::Dynamic _hx_tmp = this->data;
HXDLIN( 148)		int _hx_tmp1 = (this->address + ::com::stencyl::io::mbs::scene::MbsTile_obj::autotileMerge->address);
HXDLIN( 148)		::mbs::io::MbsIO_obj::writeInt(_hx_tmp,_hx_tmp1,this->_autotileMerge->getAddress());
HXLINE( 149)		return this->_autotileMerge;
            	}


HX_DEFINE_DYNAMIC_FUNC1(MbsTile_obj,createAutotileMerge,return )

 ::mbs::core::MbsField MbsTile_obj::collision;

 ::mbs::core::MbsField MbsTile_obj::metadata;

 ::mbs::core::MbsField MbsTile_obj::durations;

 ::mbs::core::MbsField MbsTile_obj::frames;

 ::mbs::core::MbsField MbsTile_obj::id;

 ::mbs::core::MbsField MbsTile_obj::order;

 ::mbs::core::MbsField MbsTile_obj::autotile;

 ::mbs::core::MbsField MbsTile_obj::autotileMerge;

 ::mbs::core::ComposedType MbsTile_obj::MBS_TILE;

void MbsTile_obj::initializeType(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::mbs::core::MbsObject _hx_run(::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_ceaf6185541e2d00_28_initializeType)
HXLINE(  28)			return  ::com::stencyl::io::mbs::scene::MbsTile_obj::__alloc( HX_CTX ,data);
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_ceaf6185541e2d00_25_initializeType)
HXLINE(  26)		if (hx::IsNotNull( ::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE )) {
HXLINE(  26)			return;
            		}
HXLINE(  27)		::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE =  ::mbs::core::ComposedType_obj::__alloc( HX_CTX ,HX_("MbsTile",ac,c1,d8,1f));
HXLINE(  28)		::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE->setInstantiator( ::Dynamic(new _hx_Closure_0()));
HXLINE(  30)		::com::stencyl::io::mbs::scene::MbsTile_obj::collision = ::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE->createField(HX_("collision",72,a8,3a,db),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  31)		::com::stencyl::io::mbs::scene::MbsTile_obj::metadata = ::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE->createField(HX_("metadata",6f,e7,19,40),::mbs::core::MbsTypes_obj::STRING);
HXLINE(  32)		::com::stencyl::io::mbs::scene::MbsTile_obj::durations = ::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE->createField(HX_("durations",9f,5a,bf,e7),::mbs::core::MbsTypes_obj::LIST);
HXLINE(  33)		::com::stencyl::io::mbs::scene::MbsTile_obj::frames = ::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE->createField(HX_("frames",a6,af,85,ac),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  34)		::com::stencyl::io::mbs::scene::MbsTile_obj::id = ::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE->createField(HX_("id",db,5b,00,00),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  35)		::com::stencyl::io::mbs::scene::MbsTile_obj::order = ::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE->createField(HX_("order",8e,f0,20,35),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  36)		::com::stencyl::io::mbs::scene::MbsTile_obj::autotile = ::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE->createField(HX_("autotile",1d,8e,49,45),::mbs::core::MbsTypes_obj::INTEGER);
HXLINE(  37)		::com::stencyl::io::mbs::scene::MbsTile_obj::autotileMerge = ::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE->createField(HX_("autotileMerge",5b,3b,a1,d0),::mbs::core::MbsTypes_obj::LIST);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(MbsTile_obj,initializeType,(void))

 ::mbs::io::MbsList MbsTile_obj::new_MbsTile_list(::Dynamic data){
            	HX_GC_STACKFRAME(&_hx_pos_ceaf6185541e2d00_43_new_MbsTile_list)
HXDLIN(  43)		 ::mbs::core::ComposedType _hx_tmp = ::com::stencyl::io::mbs::scene::MbsTile_obj::MBS_TILE;
HXDLIN(  43)		return  ::mbs::io::MbsList_obj::__alloc( HX_CTX ,data,_hx_tmp, ::com::stencyl::io::mbs::scene::MbsTile_obj::__alloc( HX_CTX ,data));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MbsTile_obj,new_MbsTile_list,return )


hx::ObjectPtr< MbsTile_obj > MbsTile_obj::__new(::Dynamic data) {
	hx::ObjectPtr< MbsTile_obj > __this = new MbsTile_obj();
	__this->__construct(data);
	return __this;
}

hx::ObjectPtr< MbsTile_obj > MbsTile_obj::__alloc(hx::Ctx *_hx_ctx,::Dynamic data) {
	MbsTile_obj *__this = (MbsTile_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MbsTile_obj), true, "com.stencyl.io.mbs.scene.MbsTile"));
	*(void **)__this = MbsTile_obj::_hx_vtable;
	__this->__construct(data);
	return __this;
}

MbsTile_obj::MbsTile_obj()
{
}

void MbsTile_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MbsTile);
	HX_MARK_MEMBER_NAME(_durations,"_durations");
	HX_MARK_MEMBER_NAME(_autotileMerge,"_autotileMerge");
	 ::mbs::core::MbsObject_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MbsTile_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_durations,"_durations");
	HX_VISIT_MEMBER_NAME(_autotileMerge,"_autotileMerge");
	 ::mbs::core::MbsObject_obj::__Visit(HX_VISIT_ARG);
}

hx::Val MbsTile_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"getId") ) { return hx::Val( getId_dyn() ); }
		if (HX_FIELD_EQ(inName,"setId") ) { return hx::Val( setId_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getOrder") ) { return hx::Val( getOrder_dyn() ); }
		if (HX_FIELD_EQ(inName,"setOrder") ) { return hx::Val( setOrder_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getFrames") ) { return hx::Val( getFrames_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFrames") ) { return hx::Val( setFrames_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getMbsType") ) { return hx::Val( getMbsType_dyn() ); }
		if (HX_FIELD_EQ(inName,"_durations") ) { return hx::Val( _durations ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"allocateNew") ) { return hx::Val( allocateNew_dyn() ); }
		if (HX_FIELD_EQ(inName,"getMetadata") ) { return hx::Val( getMetadata_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMetadata") ) { return hx::Val( setMetadata_dyn() ); }
		if (HX_FIELD_EQ(inName,"getAutotile") ) { return hx::Val( getAutotile_dyn() ); }
		if (HX_FIELD_EQ(inName,"setAutotile") ) { return hx::Val( setAutotile_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"getCollision") ) { return hx::Val( getCollision_dyn() ); }
		if (HX_FIELD_EQ(inName,"setCollision") ) { return hx::Val( setCollision_dyn() ); }
		if (HX_FIELD_EQ(inName,"getDurations") ) { return hx::Val( getDurations_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"_autotileMerge") ) { return hx::Val( _autotileMerge ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"createDurations") ) { return hx::Val( createDurations_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getAutotileMerge") ) { return hx::Val( getAutotileMerge_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"createAutotileMerge") ) { return hx::Val( createAutotileMerge_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MbsTile_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { outValue = ( id ); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"order") ) { outValue = ( order ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"frames") ) { outValue = ( frames ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"metadata") ) { outValue = ( metadata ); return true; }
		if (HX_FIELD_EQ(inName,"autotile") ) { outValue = ( autotile ); return true; }
		if (HX_FIELD_EQ(inName,"MBS_TILE") ) { outValue = ( MBS_TILE ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"collision") ) { outValue = ( collision ); return true; }
		if (HX_FIELD_EQ(inName,"durations") ) { outValue = ( durations ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"autotileMerge") ) { outValue = ( autotileMerge ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"initializeType") ) { outValue = initializeType_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"new_MbsTile_list") ) { outValue = new_MbsTile_list_dyn(); return true; }
	}
	return false;
}

hx::Val MbsTile_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"_durations") ) { _durations=inValue.Cast<  ::mbs::io::MbsIntList >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"_autotileMerge") ) { _autotileMerge=inValue.Cast<  ::mbs::io::MbsIntList >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool MbsTile_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { id=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"order") ) { order=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"frames") ) { frames=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"metadata") ) { metadata=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"autotile") ) { autotile=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"MBS_TILE") ) { MBS_TILE=ioValue.Cast<  ::mbs::core::ComposedType >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"collision") ) { collision=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		if (HX_FIELD_EQ(inName,"durations") ) { durations=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"autotileMerge") ) { autotileMerge=ioValue.Cast<  ::mbs::core::MbsField >(); return true; }
	}
	return false;
}

void MbsTile_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("_durations","\x60","\xd6","\x61","\x43"));
	outFields->push(HX_HCSTRING("_autotileMerge","\x9c","\x2b","\xf3","\x0e"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo MbsTile_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::mbs::io::MbsIntList*/ ,(int)offsetof(MbsTile_obj,_durations),HX_HCSTRING("_durations","\x60","\xd6","\x61","\x43")},
	{hx::fsObject /*::mbs::io::MbsIntList*/ ,(int)offsetof(MbsTile_obj,_autotileMerge),HX_HCSTRING("_autotileMerge","\x9c","\x2b","\xf3","\x0e")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo MbsTile_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsTile_obj::collision,HX_HCSTRING("collision","\x72","\xa8","\x3a","\xdb")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsTile_obj::metadata,HX_HCSTRING("metadata","\x6f","\xe7","\x19","\x40")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsTile_obj::durations,HX_HCSTRING("durations","\x9f","\x5a","\xbf","\xe7")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsTile_obj::frames,HX_HCSTRING("frames","\xa6","\xaf","\x85","\xac")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsTile_obj::id,HX_HCSTRING("id","\xdb","\x5b","\x00","\x00")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsTile_obj::order,HX_HCSTRING("order","\x8e","\xf0","\x20","\x35")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsTile_obj::autotile,HX_HCSTRING("autotile","\x1d","\x8e","\x49","\x45")},
	{hx::fsObject /*::mbs::core::MbsField*/ ,(void *) &MbsTile_obj::autotileMerge,HX_HCSTRING("autotileMerge","\x5b","\x3b","\xa1","\xd0")},
	{hx::fsObject /*::mbs::core::ComposedType*/ ,(void *) &MbsTile_obj::MBS_TILE,HX_HCSTRING("MBS_TILE","\xef","\x92","\x22","\x07")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MbsTile_obj_sMemberFields[] = {
	HX_HCSTRING("getMbsType","\x62","\x47","\xf5","\xa1"),
	HX_HCSTRING("_durations","\x60","\xd6","\x61","\x43"),
	HX_HCSTRING("_autotileMerge","\x9c","\x2b","\xf3","\x0e"),
	HX_HCSTRING("allocateNew","\xa3","\x49","\x4d","\xa9"),
	HX_HCSTRING("getCollision","\xfc","\x44","\x91","\xea"),
	HX_HCSTRING("setCollision","\x70","\x68","\x8a","\xff"),
	HX_HCSTRING("getMetadata","\x25","\xaa","\x0d","\x66"),
	HX_HCSTRING("setMetadata","\x31","\xb1","\x7a","\x70"),
	HX_HCSTRING("getDurations","\x29","\xf7","\x15","\xf7"),
	HX_HCSTRING("createDurations","\x03","\x14","\xb4","\x88"),
	HX_HCSTRING("getFrames","\xdc","\x38","\xdc","\x28"),
	HX_HCSTRING("setFrames","\xe8","\x24","\x2d","\x0c"),
	HX_HCSTRING("getId","\x11","\x92","\x60","\x91"),
	HX_HCSTRING("setId","\x1d","\x88","\x2f","\x7a"),
	HX_HCSTRING("getOrder","\x18","\x00","\xf8","\x94"),
	HX_HCSTRING("setOrder","\x8c","\x59","\x55","\x43"),
	HX_HCSTRING("getAutotile","\xd3","\x50","\x3d","\x6b"),
	HX_HCSTRING("setAutotile","\xdf","\x57","\xaa","\x75"),
	HX_HCSTRING("getAutotileMerge","\xe5","\xe4","\xc1","\x3a"),
	HX_HCSTRING("createAutotileMerge","\xbf","\x76","\xf8","\xb0"),
	::String(null()) };

static void MbsTile_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MbsTile_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MbsTile_obj::collision,"collision");
	HX_MARK_MEMBER_NAME(MbsTile_obj::metadata,"metadata");
	HX_MARK_MEMBER_NAME(MbsTile_obj::durations,"durations");
	HX_MARK_MEMBER_NAME(MbsTile_obj::frames,"frames");
	HX_MARK_MEMBER_NAME(MbsTile_obj::id,"id");
	HX_MARK_MEMBER_NAME(MbsTile_obj::order,"order");
	HX_MARK_MEMBER_NAME(MbsTile_obj::autotile,"autotile");
	HX_MARK_MEMBER_NAME(MbsTile_obj::autotileMerge,"autotileMerge");
	HX_MARK_MEMBER_NAME(MbsTile_obj::MBS_TILE,"MBS_TILE");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MbsTile_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MbsTile_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MbsTile_obj::collision,"collision");
	HX_VISIT_MEMBER_NAME(MbsTile_obj::metadata,"metadata");
	HX_VISIT_MEMBER_NAME(MbsTile_obj::durations,"durations");
	HX_VISIT_MEMBER_NAME(MbsTile_obj::frames,"frames");
	HX_VISIT_MEMBER_NAME(MbsTile_obj::id,"id");
	HX_VISIT_MEMBER_NAME(MbsTile_obj::order,"order");
	HX_VISIT_MEMBER_NAME(MbsTile_obj::autotile,"autotile");
	HX_VISIT_MEMBER_NAME(MbsTile_obj::autotileMerge,"autotileMerge");
	HX_VISIT_MEMBER_NAME(MbsTile_obj::MBS_TILE,"MBS_TILE");
};

#endif

hx::Class MbsTile_obj::__mClass;

static ::String MbsTile_obj_sStaticFields[] = {
	HX_HCSTRING("collision","\x72","\xa8","\x3a","\xdb"),
	HX_HCSTRING("metadata","\x6f","\xe7","\x19","\x40"),
	HX_HCSTRING("durations","\x9f","\x5a","\xbf","\xe7"),
	HX_HCSTRING("frames","\xa6","\xaf","\x85","\xac"),
	HX_HCSTRING("id","\xdb","\x5b","\x00","\x00"),
	HX_HCSTRING("order","\x8e","\xf0","\x20","\x35"),
	HX_HCSTRING("autotile","\x1d","\x8e","\x49","\x45"),
	HX_HCSTRING("autotileMerge","\x5b","\x3b","\xa1","\xd0"),
	HX_HCSTRING("MBS_TILE","\xef","\x92","\x22","\x07"),
	HX_HCSTRING("initializeType","\x2a","\x38","\x98","\x50"),
	HX_HCSTRING("new_MbsTile_list","\x90","\xed","\xe9","\xd0"),
	::String(null())
};

void MbsTile_obj::__register()
{
	hx::Object *dummy = new MbsTile_obj;
	MbsTile_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.stencyl.io.mbs.scene.MbsTile","\x21","\x1b","\x30","\x2c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MbsTile_obj::__GetStatic;
	__mClass->mSetStaticField = &MbsTile_obj::__SetStatic;
	__mClass->mMarkFunc = MbsTile_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MbsTile_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MbsTile_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MbsTile_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MbsTile_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MbsTile_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MbsTile_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace scene
