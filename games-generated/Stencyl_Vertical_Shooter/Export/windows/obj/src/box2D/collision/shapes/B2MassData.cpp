// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_box2D_collision_shapes_B2MassData
#include <box2D/collision/shapes/B2MassData.h>
#endif
#ifndef INCLUDED_box2D_common_math_B2Vec2
#include <box2D/common/math/B2Vec2.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_594d3738692cb14d_30_new,"box2D.collision.shapes.B2MassData","new",0xefc7beef,"box2D.collision.shapes.B2MassData.new","box2D/collision/shapes/B2MassData.hx",30,0x0b4d5f02)
namespace box2D{
namespace collision{
namespace shapes{

void B2MassData_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_594d3738692cb14d_30_new)
HXLINE(  32)		this->mass = ((Float)0.0);
HXLINE(  33)		this->center =  ::box2D::common::math::B2Vec2_obj::__alloc( HX_CTX ,(int)0,(int)0);
HXLINE(  34)		this->I = ((Float)0.0);
            	}

Dynamic B2MassData_obj::__CreateEmpty() { return new B2MassData_obj; }

void *B2MassData_obj::_hx_vtable = 0;

Dynamic B2MassData_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< B2MassData_obj > _hx_result = new B2MassData_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool B2MassData_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x580fe475;
}


hx::ObjectPtr< B2MassData_obj > B2MassData_obj::__new() {
	hx::ObjectPtr< B2MassData_obj > __this = new B2MassData_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< B2MassData_obj > B2MassData_obj::__alloc(hx::Ctx *_hx_ctx) {
	B2MassData_obj *__this = (B2MassData_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(B2MassData_obj), true, "box2D.collision.shapes.B2MassData"));
	*(void **)__this = B2MassData_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

B2MassData_obj::B2MassData_obj()
{
}

void B2MassData_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(B2MassData);
	HX_MARK_MEMBER_NAME(mass,"mass");
	HX_MARK_MEMBER_NAME(center,"center");
	HX_MARK_MEMBER_NAME(I,"I");
	HX_MARK_END_CLASS();
}

void B2MassData_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(mass,"mass");
	HX_VISIT_MEMBER_NAME(center,"center");
	HX_VISIT_MEMBER_NAME(I,"I");
}

hx::Val B2MassData_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"I") ) { return hx::Val( I ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"mass") ) { return hx::Val( mass ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"center") ) { return hx::Val( center ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val B2MassData_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"I") ) { I=inValue.Cast< Float >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"mass") ) { mass=inValue.Cast< Float >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"center") ) { center=inValue.Cast<  ::box2D::common::math::B2Vec2 >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void B2MassData_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("mass","\xf4","\x40","\x56","\x48"));
	outFields->push(HX_HCSTRING("center","\xd5","\x25","\xdb","\x05"));
	outFields->push(HX_HCSTRING("I","\x49","\x00","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo B2MassData_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(B2MassData_obj,mass),HX_HCSTRING("mass","\xf4","\x40","\x56","\x48")},
	{hx::fsObject /*::box2D::common::math::B2Vec2*/ ,(int)offsetof(B2MassData_obj,center),HX_HCSTRING("center","\xd5","\x25","\xdb","\x05")},
	{hx::fsFloat,(int)offsetof(B2MassData_obj,I),HX_HCSTRING("I","\x49","\x00","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *B2MassData_obj_sStaticStorageInfo = 0;
#endif

static ::String B2MassData_obj_sMemberFields[] = {
	HX_HCSTRING("mass","\xf4","\x40","\x56","\x48"),
	HX_HCSTRING("center","\xd5","\x25","\xdb","\x05"),
	HX_HCSTRING("I","\x49","\x00","\x00","\x00"),
	::String(null()) };

static void B2MassData_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(B2MassData_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void B2MassData_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(B2MassData_obj::__mClass,"__mClass");
};

#endif

hx::Class B2MassData_obj::__mClass;

void B2MassData_obj::__register()
{
	hx::Object *dummy = new B2MassData_obj;
	B2MassData_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("box2D.collision.shapes.B2MassData","\x7d","\x1b","\x4c","\xf0");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = B2MassData_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(B2MassData_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< B2MassData_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = B2MassData_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = B2MassData_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = B2MassData_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace box2D
} // end namespace collision
} // end namespace shapes
