// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_box2D_collision_B2Distance
#include <box2D/collision/B2Distance.h>
#endif
#ifndef INCLUDED_box2D_collision_B2DistanceInput
#include <box2D/collision/B2DistanceInput.h>
#endif
#ifndef INCLUDED_box2D_collision_B2DistanceOutput
#include <box2D/collision/B2DistanceOutput.h>
#endif
#ifndef INCLUDED_box2D_collision_B2DistanceProxy
#include <box2D/collision/B2DistanceProxy.h>
#endif
#ifndef INCLUDED_box2D_collision_B2SeparationFunction
#include <box2D/collision/B2SeparationFunction.h>
#endif
#ifndef INCLUDED_box2D_collision_B2SimplexCache
#include <box2D/collision/B2SimplexCache.h>
#endif
#ifndef INCLUDED_box2D_collision_B2TOIInput
#include <box2D/collision/B2TOIInput.h>
#endif
#ifndef INCLUDED_box2D_collision_B2TimeOfImpact
#include <box2D/collision/B2TimeOfImpact.h>
#endif
#ifndef INCLUDED_box2D_common_B2Settings
#include <box2D/common/B2Settings.h>
#endif
#ifndef INCLUDED_box2D_common_math_B2Mat22
#include <box2D/common/math/B2Mat22.h>
#endif
#ifndef INCLUDED_box2D_common_math_B2Math
#include <box2D/common/math/B2Math.h>
#endif
#ifndef INCLUDED_box2D_common_math_B2Sweep
#include <box2D/common/math/B2Sweep.h>
#endif
#ifndef INCLUDED_box2D_common_math_B2Transform
#include <box2D/common/math/B2Transform.h>
#endif
#ifndef INCLUDED_box2D_common_math_B2Vec2
#include <box2D/common/math/B2Vec2.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_47_timeOfImpact,"box2D.collision.B2TimeOfImpact","timeOfImpact",0xdebd7491,"box2D.collision.B2TimeOfImpact.timeOfImpact","box2D/collision/B2TimeOfImpact.hx",47,0x9d1fa0f5)
HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_34_boot,"box2D.collision.B2TimeOfImpact","boot",0x2060e759,"box2D.collision.B2TimeOfImpact.boot","box2D/collision/B2TimeOfImpact.hx",34,0x9d1fa0f5)
HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_35_boot,"box2D.collision.B2TimeOfImpact","boot",0x2060e759,"box2D.collision.B2TimeOfImpact.boot","box2D/collision/B2TimeOfImpact.hx",35,0x9d1fa0f5)
HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_36_boot,"box2D.collision.B2TimeOfImpact","boot",0x2060e759,"box2D.collision.B2TimeOfImpact.boot","box2D/collision/B2TimeOfImpact.hx",36,0x9d1fa0f5)
HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_37_boot,"box2D.collision.B2TimeOfImpact","boot",0x2060e759,"box2D.collision.B2TimeOfImpact.boot","box2D/collision/B2TimeOfImpact.hx",37,0x9d1fa0f5)
HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_38_boot,"box2D.collision.B2TimeOfImpact","boot",0x2060e759,"box2D.collision.B2TimeOfImpact.boot","box2D/collision/B2TimeOfImpact.hx",38,0x9d1fa0f5)
HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_40_boot,"box2D.collision.B2TimeOfImpact","boot",0x2060e759,"box2D.collision.B2TimeOfImpact.boot","box2D/collision/B2TimeOfImpact.hx",40,0x9d1fa0f5)
HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_41_boot,"box2D.collision.B2TimeOfImpact","boot",0x2060e759,"box2D.collision.B2TimeOfImpact.boot","box2D/collision/B2TimeOfImpact.hx",41,0x9d1fa0f5)
HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_42_boot,"box2D.collision.B2TimeOfImpact","boot",0x2060e759,"box2D.collision.B2TimeOfImpact.boot","box2D/collision/B2TimeOfImpact.hx",42,0x9d1fa0f5)
HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_43_boot,"box2D.collision.B2TimeOfImpact","boot",0x2060e759,"box2D.collision.B2TimeOfImpact.boot","box2D/collision/B2TimeOfImpact.hx",43,0x9d1fa0f5)
HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_44_boot,"box2D.collision.B2TimeOfImpact","boot",0x2060e759,"box2D.collision.B2TimeOfImpact.boot","box2D/collision/B2TimeOfImpact.hx",44,0x9d1fa0f5)
HX_LOCAL_STACK_FRAME(_hx_pos_5e101bd4ced52747_45_boot,"box2D.collision.B2TimeOfImpact","boot",0x2060e759,"box2D.collision.B2TimeOfImpact.boot","box2D/collision/B2TimeOfImpact.hx",45,0x9d1fa0f5)
namespace box2D{
namespace collision{

void B2TimeOfImpact_obj::__construct() { }

Dynamic B2TimeOfImpact_obj::__CreateEmpty() { return new B2TimeOfImpact_obj; }

void *B2TimeOfImpact_obj::_hx_vtable = 0;

Dynamic B2TimeOfImpact_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< B2TimeOfImpact_obj > _hx_result = new B2TimeOfImpact_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool B2TimeOfImpact_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5c1b332f;
}

int B2TimeOfImpact_obj::b2_toiCalls;

int B2TimeOfImpact_obj::b2_toiIters;

int B2TimeOfImpact_obj::b2_toiMaxIters;

int B2TimeOfImpact_obj::b2_toiRootIters;

int B2TimeOfImpact_obj::b2_toiMaxRootIters;

 ::box2D::collision::B2SimplexCache B2TimeOfImpact_obj::s_cache;

 ::box2D::collision::B2DistanceInput B2TimeOfImpact_obj::s_distanceInput;

 ::box2D::common::math::B2Transform B2TimeOfImpact_obj::s_xfA;

 ::box2D::common::math::B2Transform B2TimeOfImpact_obj::s_xfB;

 ::box2D::collision::B2SeparationFunction B2TimeOfImpact_obj::s_fcn;

 ::box2D::collision::B2DistanceOutput B2TimeOfImpact_obj::s_distanceOutput;

Float B2TimeOfImpact_obj::timeOfImpact( ::box2D::collision::B2TOIInput input){
            	HX_STACKFRAME(&_hx_pos_5e101bd4ced52747_47_timeOfImpact)
HXLINE(  48)		++::box2D::collision::B2TimeOfImpact_obj::b2_toiCalls;
HXLINE(  50)		 ::box2D::collision::B2DistanceProxy proxyA = input->proxyA;
HXLINE(  51)		 ::box2D::collision::B2DistanceProxy proxyB = input->proxyB;
HXLINE(  53)		 ::box2D::common::math::B2Sweep sweepA = input->sweepA;
HXLINE(  54)		 ::box2D::common::math::B2Sweep sweepB = input->sweepB;
HXLINE(  56)		::box2D::common::B2Settings_obj::b2Assert((sweepA->t0 == sweepB->t0));
HXLINE(  57)		::box2D::common::B2Settings_obj::b2Assert(((((Float)1.0) - sweepA->t0) > ((Float)2.2250738585072014e-308)));
HXLINE(  59)		Float radius = (proxyA->m_radius + proxyB->m_radius);
HXLINE(  60)		Float tolerance = input->tolerance;
HXLINE(  62)		Float alpha = ((Float)0.0);
HXLINE(  64)		int k_maxIterations = (int)1000;
HXLINE(  65)		int iter = (int)0;
HXLINE(  66)		Float target = ((Float)0.0);
HXLINE(  69)		::box2D::collision::B2TimeOfImpact_obj::s_cache->count = (int)0;
HXLINE(  70)		::box2D::collision::B2TimeOfImpact_obj::s_distanceInput->useRadii = false;
HXLINE(  72)		while(true){
HXLINE(  74)			sweepA->getTransform(::box2D::collision::B2TimeOfImpact_obj::s_xfA,alpha);
HXLINE(  75)			sweepB->getTransform(::box2D::collision::B2TimeOfImpact_obj::s_xfB,alpha);
HXLINE(  78)			::box2D::collision::B2TimeOfImpact_obj::s_distanceInput->proxyA = proxyA;
HXLINE(  79)			::box2D::collision::B2TimeOfImpact_obj::s_distanceInput->proxyB = proxyB;
HXLINE(  80)			::box2D::collision::B2TimeOfImpact_obj::s_distanceInput->transformA = ::box2D::collision::B2TimeOfImpact_obj::s_xfA;
HXLINE(  81)			::box2D::collision::B2TimeOfImpact_obj::s_distanceInput->transformB = ::box2D::collision::B2TimeOfImpact_obj::s_xfB;
HXLINE(  83)			::box2D::collision::B2Distance_obj::distance(::box2D::collision::B2TimeOfImpact_obj::s_distanceOutput,::box2D::collision::B2TimeOfImpact_obj::s_cache,::box2D::collision::B2TimeOfImpact_obj::s_distanceInput);
HXLINE(  85)			if ((::box2D::collision::B2TimeOfImpact_obj::s_distanceOutput->distance <= ((Float)0.0))) {
HXLINE(  87)				alpha = ((Float)1.0);
HXLINE(  88)				goto _hx_goto_0;
            			}
HXLINE(  91)			::box2D::collision::B2TimeOfImpact_obj::s_fcn->initialize(::box2D::collision::B2TimeOfImpact_obj::s_cache,proxyA,::box2D::collision::B2TimeOfImpact_obj::s_xfA,proxyB,::box2D::collision::B2TimeOfImpact_obj::s_xfB);
HXLINE(  93)			Float separation = ::box2D::collision::B2TimeOfImpact_obj::s_fcn->evaluate(::box2D::collision::B2TimeOfImpact_obj::s_xfA,::box2D::collision::B2TimeOfImpact_obj::s_xfB);
HXLINE(  94)			if ((separation <= ((Float)0.0))) {
HXLINE(  96)				alpha = ((Float)1.0);
HXLINE(  97)				goto _hx_goto_0;
            			}
HXLINE( 100)			if ((iter == (int)0)) {
HXLINE( 105)				if ((separation > radius)) {
HXLINE( 107)					target = ::box2D::common::math::B2Math_obj::max((radius - tolerance),(((Float)0.75) * radius));
            				}
            				else {
HXLINE( 111)					target = ::box2D::common::math::B2Math_obj::max((separation - tolerance),(((Float)0.02) * radius));
            				}
            			}
HXLINE( 115)			if (((separation - target) < (((Float)0.5) * tolerance))) {
HXLINE( 117)				if ((iter == (int)0)) {
HXLINE( 119)					alpha = ((Float)1.0);
HXLINE( 120)					goto _hx_goto_0;
            				}
HXLINE( 122)				goto _hx_goto_0;
            			}
HXLINE( 149)			Float newAlpha = alpha;
HXLINE( 150)			{
HXLINE( 151)				Float x1 = alpha;
HXLINE( 152)				Float x2 = ((Float)1.0);
HXLINE( 154)				Float f1 = separation;
HXLINE( 156)				sweepA->getTransform(::box2D::collision::B2TimeOfImpact_obj::s_xfA,x2);
HXLINE( 157)				sweepB->getTransform(::box2D::collision::B2TimeOfImpact_obj::s_xfB,x2);
HXLINE( 159)				Float f2 = ::box2D::collision::B2TimeOfImpact_obj::s_fcn->evaluate(::box2D::collision::B2TimeOfImpact_obj::s_xfA,::box2D::collision::B2TimeOfImpact_obj::s_xfB);
HXLINE( 162)				if ((f2 >= target)) {
HXLINE( 164)					alpha = ((Float)1.0);
HXLINE( 165)					goto _hx_goto_0;
            				}
HXLINE( 169)				int rootIterCount = (int)0;
HXLINE( 170)				while(true){
HXLINE( 173)					Float x;
HXLINE( 174)					if ((((int)rootIterCount & (int)(int)1) != (int)0)) {
HXLINE( 177)						x = (x1 + ((Float)((target - f1) * (x2 - x1)) / (Float)(f2 - f1)));
            					}
            					else {
HXLINE( 182)						x = (((Float)0.5) * (x1 + x2));
            					}
HXLINE( 185)					sweepA->getTransform(::box2D::collision::B2TimeOfImpact_obj::s_xfA,x);
HXLINE( 186)					sweepB->getTransform(::box2D::collision::B2TimeOfImpact_obj::s_xfB,x);
HXLINE( 188)					Float f = ::box2D::collision::B2TimeOfImpact_obj::s_fcn->evaluate(::box2D::collision::B2TimeOfImpact_obj::s_xfA,::box2D::collision::B2TimeOfImpact_obj::s_xfB);
HXLINE( 190)					Float _hx_tmp = ::box2D::common::math::B2Math_obj::abs((f - target));
HXDLIN( 190)					if ((_hx_tmp < (((Float)0.025) * tolerance))) {
HXLINE( 192)						newAlpha = x;
HXLINE( 193)						goto _hx_goto_1;
            					}
HXLINE( 197)					if ((f > target)) {
HXLINE( 199)						x1 = x;
HXLINE( 200)						f1 = f;
            					}
            					else {
HXLINE( 204)						x2 = x;
HXLINE( 205)						f2 = f;
            					}
HXLINE( 208)					rootIterCount = (rootIterCount + (int)1);
HXLINE( 209)					++::box2D::collision::B2TimeOfImpact_obj::b2_toiRootIters;
HXLINE( 210)					if ((rootIterCount == (int)50)) {
HXLINE( 212)						goto _hx_goto_1;
            					}
            				}
            				_hx_goto_1:;
HXLINE( 216)				::box2D::collision::B2TimeOfImpact_obj::b2_toiMaxRootIters = ::Std_obj::_hx_int(::box2D::common::math::B2Math_obj::max(::box2D::collision::B2TimeOfImpact_obj::b2_toiMaxRootIters,rootIterCount));
            			}
HXLINE( 220)			if ((newAlpha < alpha)) {
HXLINE( 222)				goto _hx_goto_0;
            			}
HXLINE( 225)			alpha = newAlpha;
HXLINE( 227)			iter = (iter + (int)1);
HXLINE( 228)			++::box2D::collision::B2TimeOfImpact_obj::b2_toiIters;
HXLINE( 230)			if ((iter == k_maxIterations)) {
HXLINE( 232)				goto _hx_goto_0;
            			}
            		}
            		_hx_goto_0:;
HXLINE( 236)		::box2D::collision::B2TimeOfImpact_obj::b2_toiMaxIters = ::Std_obj::_hx_int(::box2D::common::math::B2Math_obj::max(::box2D::collision::B2TimeOfImpact_obj::b2_toiMaxIters,iter));
HXLINE( 238)		return alpha;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(B2TimeOfImpact_obj,timeOfImpact,return )


B2TimeOfImpact_obj::B2TimeOfImpact_obj()
{
}

bool B2TimeOfImpact_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"s_xfA") ) { outValue = ( s_xfA ); return true; }
		if (HX_FIELD_EQ(inName,"s_xfB") ) { outValue = ( s_xfB ); return true; }
		if (HX_FIELD_EQ(inName,"s_fcn") ) { outValue = ( s_fcn ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"s_cache") ) { outValue = ( s_cache ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"b2_toiCalls") ) { outValue = ( b2_toiCalls ); return true; }
		if (HX_FIELD_EQ(inName,"b2_toiIters") ) { outValue = ( b2_toiIters ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"timeOfImpact") ) { outValue = timeOfImpact_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"b2_toiMaxIters") ) { outValue = ( b2_toiMaxIters ); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"b2_toiRootIters") ) { outValue = ( b2_toiRootIters ); return true; }
		if (HX_FIELD_EQ(inName,"s_distanceInput") ) { outValue = ( s_distanceInput ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"s_distanceOutput") ) { outValue = ( s_distanceOutput ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"b2_toiMaxRootIters") ) { outValue = ( b2_toiMaxRootIters ); return true; }
	}
	return false;
}

bool B2TimeOfImpact_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"s_xfA") ) { s_xfA=ioValue.Cast<  ::box2D::common::math::B2Transform >(); return true; }
		if (HX_FIELD_EQ(inName,"s_xfB") ) { s_xfB=ioValue.Cast<  ::box2D::common::math::B2Transform >(); return true; }
		if (HX_FIELD_EQ(inName,"s_fcn") ) { s_fcn=ioValue.Cast<  ::box2D::collision::B2SeparationFunction >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"s_cache") ) { s_cache=ioValue.Cast<  ::box2D::collision::B2SimplexCache >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"b2_toiCalls") ) { b2_toiCalls=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"b2_toiIters") ) { b2_toiIters=ioValue.Cast< int >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"b2_toiMaxIters") ) { b2_toiMaxIters=ioValue.Cast< int >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"b2_toiRootIters") ) { b2_toiRootIters=ioValue.Cast< int >(); return true; }
		if (HX_FIELD_EQ(inName,"s_distanceInput") ) { s_distanceInput=ioValue.Cast<  ::box2D::collision::B2DistanceInput >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"s_distanceOutput") ) { s_distanceOutput=ioValue.Cast<  ::box2D::collision::B2DistanceOutput >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"b2_toiMaxRootIters") ) { b2_toiMaxRootIters=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *B2TimeOfImpact_obj_sMemberStorageInfo = 0;
static hx::StaticInfo B2TimeOfImpact_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &B2TimeOfImpact_obj::b2_toiCalls,HX_HCSTRING("b2_toiCalls","\x76","\x68","\xb2","\xed")},
	{hx::fsInt,(void *) &B2TimeOfImpact_obj::b2_toiIters,HX_HCSTRING("b2_toiIters","\xbc","\xa6","\xa3","\x6e")},
	{hx::fsInt,(void *) &B2TimeOfImpact_obj::b2_toiMaxIters,HX_HCSTRING("b2_toiMaxIters","\x56","\x7f","\xee","\x1b")},
	{hx::fsInt,(void *) &B2TimeOfImpact_obj::b2_toiRootIters,HX_HCSTRING("b2_toiRootIters","\xba","\xf1","\xf6","\x96")},
	{hx::fsInt,(void *) &B2TimeOfImpact_obj::b2_toiMaxRootIters,HX_HCSTRING("b2_toiMaxRootIters","\x54","\x1f","\x43","\xea")},
	{hx::fsObject /*::box2D::collision::B2SimplexCache*/ ,(void *) &B2TimeOfImpact_obj::s_cache,HX_HCSTRING("s_cache","\x36","\x3a","\x20","\xeb")},
	{hx::fsObject /*::box2D::collision::B2DistanceInput*/ ,(void *) &B2TimeOfImpact_obj::s_distanceInput,HX_HCSTRING("s_distanceInput","\x89","\x94","\x01","\xb1")},
	{hx::fsObject /*::box2D::common::math::B2Transform*/ ,(void *) &B2TimeOfImpact_obj::s_xfA,HX_HCSTRING("s_xfA","\x87","\x62","\x3b","\x76")},
	{hx::fsObject /*::box2D::common::math::B2Transform*/ ,(void *) &B2TimeOfImpact_obj::s_xfB,HX_HCSTRING("s_xfB","\x88","\x62","\x3b","\x76")},
	{hx::fsObject /*::box2D::collision::B2SeparationFunction*/ ,(void *) &B2TimeOfImpact_obj::s_fcn,HX_HCSTRING("s_fcn","\x85","\xb7","\x2d","\x76")},
	{hx::fsObject /*::box2D::collision::B2DistanceOutput*/ ,(void *) &B2TimeOfImpact_obj::s_distanceOutput,HX_HCSTRING("s_distanceOutput","\xa2","\xad","\xf3","\xa0")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void B2TimeOfImpact_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::b2_toiCalls,"b2_toiCalls");
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::b2_toiIters,"b2_toiIters");
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::b2_toiMaxIters,"b2_toiMaxIters");
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::b2_toiRootIters,"b2_toiRootIters");
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::b2_toiMaxRootIters,"b2_toiMaxRootIters");
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::s_cache,"s_cache");
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::s_distanceInput,"s_distanceInput");
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::s_xfA,"s_xfA");
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::s_xfB,"s_xfB");
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::s_fcn,"s_fcn");
	HX_MARK_MEMBER_NAME(B2TimeOfImpact_obj::s_distanceOutput,"s_distanceOutput");
};

#ifdef HXCPP_VISIT_ALLOCS
static void B2TimeOfImpact_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::b2_toiCalls,"b2_toiCalls");
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::b2_toiIters,"b2_toiIters");
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::b2_toiMaxIters,"b2_toiMaxIters");
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::b2_toiRootIters,"b2_toiRootIters");
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::b2_toiMaxRootIters,"b2_toiMaxRootIters");
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::s_cache,"s_cache");
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::s_distanceInput,"s_distanceInput");
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::s_xfA,"s_xfA");
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::s_xfB,"s_xfB");
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::s_fcn,"s_fcn");
	HX_VISIT_MEMBER_NAME(B2TimeOfImpact_obj::s_distanceOutput,"s_distanceOutput");
};

#endif

hx::Class B2TimeOfImpact_obj::__mClass;

static ::String B2TimeOfImpact_obj_sStaticFields[] = {
	HX_HCSTRING("b2_toiCalls","\x76","\x68","\xb2","\xed"),
	HX_HCSTRING("b2_toiIters","\xbc","\xa6","\xa3","\x6e"),
	HX_HCSTRING("b2_toiMaxIters","\x56","\x7f","\xee","\x1b"),
	HX_HCSTRING("b2_toiRootIters","\xba","\xf1","\xf6","\x96"),
	HX_HCSTRING("b2_toiMaxRootIters","\x54","\x1f","\x43","\xea"),
	HX_HCSTRING("s_cache","\x36","\x3a","\x20","\xeb"),
	HX_HCSTRING("s_distanceInput","\x89","\x94","\x01","\xb1"),
	HX_HCSTRING("s_xfA","\x87","\x62","\x3b","\x76"),
	HX_HCSTRING("s_xfB","\x88","\x62","\x3b","\x76"),
	HX_HCSTRING("s_fcn","\x85","\xb7","\x2d","\x76"),
	HX_HCSTRING("s_distanceOutput","\xa2","\xad","\xf3","\xa0"),
	HX_HCSTRING("timeOfImpact","\x6a","\x12","\x16","\x34"),
	::String(null())
};

void B2TimeOfImpact_obj::__register()
{
	hx::Object *dummy = new B2TimeOfImpact_obj;
	B2TimeOfImpact_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("box2D.collision.B2TimeOfImpact","\xa7","\xce","\xb7","\x8f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &B2TimeOfImpact_obj::__GetStatic;
	__mClass->mSetStaticField = &B2TimeOfImpact_obj::__SetStatic;
	__mClass->mMarkFunc = B2TimeOfImpact_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(B2TimeOfImpact_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< B2TimeOfImpact_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = B2TimeOfImpact_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = B2TimeOfImpact_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = B2TimeOfImpact_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void B2TimeOfImpact_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_5e101bd4ced52747_34_boot)
HXDLIN(  34)		b2_toiCalls = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e101bd4ced52747_35_boot)
HXDLIN(  35)		b2_toiIters = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e101bd4ced52747_36_boot)
HXDLIN(  36)		b2_toiMaxIters = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e101bd4ced52747_37_boot)
HXDLIN(  37)		b2_toiRootIters = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_5e101bd4ced52747_38_boot)
HXDLIN(  38)		b2_toiMaxRootIters = (int)0;
            	}
{
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::Dynamic _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_5e101bd4ced52747_40_boot)
HXDLIN(  40)			 ::box2D::collision::B2SimplexCache c =  ::box2D::collision::B2SimplexCache_obj::__alloc( HX_CTX );
HXDLIN(  40)			c->useCache = true;
HXDLIN(  40)			return c;
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_5e101bd4ced52747_40_boot)
HXDLIN(  40)		s_cache =  ::Dynamic(new _hx_Closure_0())();
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_5e101bd4ced52747_41_boot)
HXDLIN(  41)		s_distanceInput =  ::box2D::collision::B2DistanceInput_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_5e101bd4ced52747_42_boot)
HXDLIN(  42)		s_xfA =  ::box2D::common::math::B2Transform_obj::__alloc( HX_CTX ,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_5e101bd4ced52747_43_boot)
HXDLIN(  43)		s_xfB =  ::box2D::common::math::B2Transform_obj::__alloc( HX_CTX ,null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_5e101bd4ced52747_44_boot)
HXDLIN(  44)		s_fcn =  ::box2D::collision::B2SeparationFunction_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_5e101bd4ced52747_45_boot)
HXDLIN(  45)		s_distanceOutput =  ::box2D::collision::B2DistanceOutput_obj::__alloc( HX_CTX );
            	}
}

} // end namespace box2D
} // end namespace collision
