// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_box2D_collision_B2DynamicTreeNode
#include <box2D/collision/B2DynamicTreeNode.h>
#endif
#ifndef INCLUDED_box2D_collision_B2DynamicTreePair
#include <box2D/collision/B2DynamicTreePair.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_4cd0a5fc6658f7aa_8_new,"box2D.collision.B2DynamicTreePair","new",0x8d1d190c,"box2D.collision.B2DynamicTreePair.new","box2D/collision/B2DynamicTreePair.hx",8,0x13602426)
namespace box2D{
namespace collision{

void B2DynamicTreePair_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_4cd0a5fc6658f7aa_8_new)
            	}

Dynamic B2DynamicTreePair_obj::__CreateEmpty() { return new B2DynamicTreePair_obj; }

void *B2DynamicTreePair_obj::_hx_vtable = 0;

Dynamic B2DynamicTreePair_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< B2DynamicTreePair_obj > _hx_result = new B2DynamicTreePair_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool B2DynamicTreePair_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x03010392;
}


B2DynamicTreePair_obj::B2DynamicTreePair_obj()
{
}

void B2DynamicTreePair_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(B2DynamicTreePair);
	HX_MARK_MEMBER_NAME(proxyA,"proxyA");
	HX_MARK_MEMBER_NAME(proxyB,"proxyB");
	HX_MARK_END_CLASS();
}

void B2DynamicTreePair_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(proxyA,"proxyA");
	HX_VISIT_MEMBER_NAME(proxyB,"proxyB");
}

hx::Val B2DynamicTreePair_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"proxyA") ) { return hx::Val( proxyA ); }
		if (HX_FIELD_EQ(inName,"proxyB") ) { return hx::Val( proxyB ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val B2DynamicTreePair_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"proxyA") ) { proxyA=inValue.Cast<  ::box2D::collision::B2DynamicTreeNode >(); return inValue; }
		if (HX_FIELD_EQ(inName,"proxyB") ) { proxyB=inValue.Cast<  ::box2D::collision::B2DynamicTreeNode >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void B2DynamicTreePair_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("proxyA","\x13","\xb2","\x60","\xb5"));
	outFields->push(HX_HCSTRING("proxyB","\x14","\xb2","\x60","\xb5"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo B2DynamicTreePair_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::box2D::collision::B2DynamicTreeNode*/ ,(int)offsetof(B2DynamicTreePair_obj,proxyA),HX_HCSTRING("proxyA","\x13","\xb2","\x60","\xb5")},
	{hx::fsObject /*::box2D::collision::B2DynamicTreeNode*/ ,(int)offsetof(B2DynamicTreePair_obj,proxyB),HX_HCSTRING("proxyB","\x14","\xb2","\x60","\xb5")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *B2DynamicTreePair_obj_sStaticStorageInfo = 0;
#endif

static ::String B2DynamicTreePair_obj_sMemberFields[] = {
	HX_HCSTRING("proxyA","\x13","\xb2","\x60","\xb5"),
	HX_HCSTRING("proxyB","\x14","\xb2","\x60","\xb5"),
	::String(null()) };

static void B2DynamicTreePair_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(B2DynamicTreePair_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void B2DynamicTreePair_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(B2DynamicTreePair_obj::__mClass,"__mClass");
};

#endif

hx::Class B2DynamicTreePair_obj::__mClass;

void B2DynamicTreePair_obj::__register()
{
	hx::Object *dummy = new B2DynamicTreePair_obj;
	B2DynamicTreePair_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("box2D.collision.B2DynamicTreePair","\x1a","\xe3","\x48","\xbc");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = B2DynamicTreePair_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(B2DynamicTreePair_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< B2DynamicTreePair_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = B2DynamicTreePair_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = B2DynamicTreePair_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = B2DynamicTreePair_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace box2D
} // end namespace collision
