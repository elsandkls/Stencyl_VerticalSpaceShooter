// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_box2D_collision_B2DistanceInput
#include <box2D/collision/B2DistanceInput.h>
#endif
#ifndef INCLUDED_box2D_collision_B2DistanceProxy
#include <box2D/collision/B2DistanceProxy.h>
#endif
#ifndef INCLUDED_box2D_common_math_B2Transform
#include <box2D/common/math/B2Transform.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ed29aa3b5f7f2627_29_new,"box2D.collision.B2DistanceInput","new",0x5460b6aa,"box2D.collision.B2DistanceInput.new","box2D/collision/B2DistanceInput.hx",29,0x025aafc8)
namespace box2D{
namespace collision{

void B2DistanceInput_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_ed29aa3b5f7f2627_29_new)
            	}

Dynamic B2DistanceInput_obj::__CreateEmpty() { return new B2DistanceInput_obj; }

void *B2DistanceInput_obj::_hx_vtable = 0;

Dynamic B2DistanceInput_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< B2DistanceInput_obj > _hx_result = new B2DistanceInput_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool B2DistanceInput_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x621e6c30;
}


B2DistanceInput_obj::B2DistanceInput_obj()
{
}

void B2DistanceInput_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(B2DistanceInput);
	HX_MARK_MEMBER_NAME(proxyA,"proxyA");
	HX_MARK_MEMBER_NAME(proxyB,"proxyB");
	HX_MARK_MEMBER_NAME(transformA,"transformA");
	HX_MARK_MEMBER_NAME(transformB,"transformB");
	HX_MARK_MEMBER_NAME(useRadii,"useRadii");
	HX_MARK_END_CLASS();
}

void B2DistanceInput_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(proxyA,"proxyA");
	HX_VISIT_MEMBER_NAME(proxyB,"proxyB");
	HX_VISIT_MEMBER_NAME(transformA,"transformA");
	HX_VISIT_MEMBER_NAME(transformB,"transformB");
	HX_VISIT_MEMBER_NAME(useRadii,"useRadii");
}

hx::Val B2DistanceInput_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"proxyA") ) { return hx::Val( proxyA ); }
		if (HX_FIELD_EQ(inName,"proxyB") ) { return hx::Val( proxyB ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"useRadii") ) { return hx::Val( useRadii ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"transformA") ) { return hx::Val( transformA ); }
		if (HX_FIELD_EQ(inName,"transformB") ) { return hx::Val( transformB ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val B2DistanceInput_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"proxyA") ) { proxyA=inValue.Cast<  ::box2D::collision::B2DistanceProxy >(); return inValue; }
		if (HX_FIELD_EQ(inName,"proxyB") ) { proxyB=inValue.Cast<  ::box2D::collision::B2DistanceProxy >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"useRadii") ) { useRadii=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"transformA") ) { transformA=inValue.Cast<  ::box2D::common::math::B2Transform >(); return inValue; }
		if (HX_FIELD_EQ(inName,"transformB") ) { transformB=inValue.Cast<  ::box2D::common::math::B2Transform >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void B2DistanceInput_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("proxyA","\x13","\xb2","\x60","\xb5"));
	outFields->push(HX_HCSTRING("proxyB","\x14","\xb2","\x60","\xb5"));
	outFields->push(HX_HCSTRING("transformA","\x55","\x91","\x34","\x9b"));
	outFields->push(HX_HCSTRING("transformB","\x56","\x91","\x34","\x9b"));
	outFields->push(HX_HCSTRING("useRadii","\x2e","\x73","\x83","\xab"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo B2DistanceInput_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::box2D::collision::B2DistanceProxy*/ ,(int)offsetof(B2DistanceInput_obj,proxyA),HX_HCSTRING("proxyA","\x13","\xb2","\x60","\xb5")},
	{hx::fsObject /*::box2D::collision::B2DistanceProxy*/ ,(int)offsetof(B2DistanceInput_obj,proxyB),HX_HCSTRING("proxyB","\x14","\xb2","\x60","\xb5")},
	{hx::fsObject /*::box2D::common::math::B2Transform*/ ,(int)offsetof(B2DistanceInput_obj,transformA),HX_HCSTRING("transformA","\x55","\x91","\x34","\x9b")},
	{hx::fsObject /*::box2D::common::math::B2Transform*/ ,(int)offsetof(B2DistanceInput_obj,transformB),HX_HCSTRING("transformB","\x56","\x91","\x34","\x9b")},
	{hx::fsBool,(int)offsetof(B2DistanceInput_obj,useRadii),HX_HCSTRING("useRadii","\x2e","\x73","\x83","\xab")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *B2DistanceInput_obj_sStaticStorageInfo = 0;
#endif

static ::String B2DistanceInput_obj_sMemberFields[] = {
	HX_HCSTRING("proxyA","\x13","\xb2","\x60","\xb5"),
	HX_HCSTRING("proxyB","\x14","\xb2","\x60","\xb5"),
	HX_HCSTRING("transformA","\x55","\x91","\x34","\x9b"),
	HX_HCSTRING("transformB","\x56","\x91","\x34","\x9b"),
	HX_HCSTRING("useRadii","\x2e","\x73","\x83","\xab"),
	::String(null()) };

static void B2DistanceInput_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(B2DistanceInput_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void B2DistanceInput_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(B2DistanceInput_obj::__mClass,"__mClass");
};

#endif

hx::Class B2DistanceInput_obj::__mClass;

void B2DistanceInput_obj::__register()
{
	hx::Object *dummy = new B2DistanceInput_obj;
	B2DistanceInput_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("box2D.collision.B2DistanceInput","\xb8","\xd9","\x89","\x57");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = B2DistanceInput_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(B2DistanceInput_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< B2DistanceInput_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = B2DistanceInput_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = B2DistanceInput_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = B2DistanceInput_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace box2D
} // end namespace collision
