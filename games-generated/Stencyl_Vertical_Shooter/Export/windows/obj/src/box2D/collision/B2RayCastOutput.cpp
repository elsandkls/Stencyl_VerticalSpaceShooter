// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_box2D_collision_B2RayCastOutput
#include <box2D/collision/B2RayCastOutput.h>
#endif
#ifndef INCLUDED_box2D_common_math_B2Vec2
#include <box2D/common/math/B2Vec2.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a10489dee4f362b7_31_new,"box2D.collision.B2RayCastOutput","new",0x68b6623f,"box2D.collision.B2RayCastOutput.new","box2D/collision/B2RayCastOutput.hx",31,0x6c0f4dd3)
namespace box2D{
namespace collision{

void B2RayCastOutput_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_a10489dee4f362b7_31_new)
HXDLIN(  31)		this->normal =  ::box2D::common::math::B2Vec2_obj::__alloc( HX_CTX ,null(),null());
            	}

Dynamic B2RayCastOutput_obj::__CreateEmpty() { return new B2RayCastOutput_obj; }

void *B2RayCastOutput_obj::_hx_vtable = 0;

Dynamic B2RayCastOutput_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< B2RayCastOutput_obj > _hx_result = new B2RayCastOutput_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool B2RayCastOutput_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0d4bf77d;
}


hx::ObjectPtr< B2RayCastOutput_obj > B2RayCastOutput_obj::__new() {
	hx::ObjectPtr< B2RayCastOutput_obj > __this = new B2RayCastOutput_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< B2RayCastOutput_obj > B2RayCastOutput_obj::__alloc(hx::Ctx *_hx_ctx) {
	B2RayCastOutput_obj *__this = (B2RayCastOutput_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(B2RayCastOutput_obj), true, "box2D.collision.B2RayCastOutput"));
	*(void **)__this = B2RayCastOutput_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

B2RayCastOutput_obj::B2RayCastOutput_obj()
{
}

void B2RayCastOutput_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(B2RayCastOutput);
	HX_MARK_MEMBER_NAME(normal,"normal");
	HX_MARK_MEMBER_NAME(fraction,"fraction");
	HX_MARK_END_CLASS();
}

void B2RayCastOutput_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(normal,"normal");
	HX_VISIT_MEMBER_NAME(fraction,"fraction");
}

hx::Val B2RayCastOutput_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"normal") ) { return hx::Val( normal ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fraction") ) { return hx::Val( fraction ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val B2RayCastOutput_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"normal") ) { normal=inValue.Cast<  ::box2D::common::math::B2Vec2 >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fraction") ) { fraction=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void B2RayCastOutput_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("normal","\x27","\x72","\x69","\x30"));
	outFields->push(HX_HCSTRING("fraction","\x02","\x96","\xee","\x64"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo B2RayCastOutput_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::box2D::common::math::B2Vec2*/ ,(int)offsetof(B2RayCastOutput_obj,normal),HX_HCSTRING("normal","\x27","\x72","\x69","\x30")},
	{hx::fsFloat,(int)offsetof(B2RayCastOutput_obj,fraction),HX_HCSTRING("fraction","\x02","\x96","\xee","\x64")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *B2RayCastOutput_obj_sStaticStorageInfo = 0;
#endif

static ::String B2RayCastOutput_obj_sMemberFields[] = {
	HX_HCSTRING("normal","\x27","\x72","\x69","\x30"),
	HX_HCSTRING("fraction","\x02","\x96","\xee","\x64"),
	::String(null()) };

static void B2RayCastOutput_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(B2RayCastOutput_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void B2RayCastOutput_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(B2RayCastOutput_obj::__mClass,"__mClass");
};

#endif

hx::Class B2RayCastOutput_obj::__mClass;

void B2RayCastOutput_obj::__register()
{
	hx::Object *dummy = new B2RayCastOutput_obj;
	B2RayCastOutput_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("box2D.collision.B2RayCastOutput","\xcd","\xd6","\xb2","\xbf");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = B2RayCastOutput_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(B2RayCastOutput_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< B2RayCastOutput_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = B2RayCastOutput_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = B2RayCastOutput_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = B2RayCastOutput_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace box2D
} // end namespace collision
