// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_box2D_common_B2Color
#include <box2D/common/B2Color.h>
#endif
#ifndef INCLUDED_box2D_common_math_B2Math
#include <box2D/common/math/B2Math.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b55a472159d67565_32_new,"box2D.common.B2Color","new",0x26dfc373,"box2D.common.B2Color.new","box2D/common/B2Color.hx",32,0x57bd057d)
HX_LOCAL_STACK_FRAME(_hx_pos_b55a472159d67565_38_set,"box2D.common.B2Color","set",0x26e38eb5,"box2D.common.B2Color.set","box2D/common/B2Color.hx",38,0x57bd057d)
HX_LOCAL_STACK_FRAME(_hx_pos_b55a472159d67565_51_set_r,"box2D.common.B2Color","set_r",0x51ecb928,"box2D.common.B2Color.set_r","box2D/common/B2Color.hx",51,0x57bd057d)
HX_LOCAL_STACK_FRAME(_hx_pos_b55a472159d67565_55_set_g,"box2D.common.B2Color","set_g",0x51ecb91d,"box2D.common.B2Color.set_g","box2D/common/B2Color.hx",55,0x57bd057d)
HX_LOCAL_STACK_FRAME(_hx_pos_b55a472159d67565_59_set_b,"box2D.common.B2Color","set_b",0x51ecb918,"box2D.common.B2Color.set_b","box2D/common/B2Color.hx",59,0x57bd057d)
HX_LOCAL_STACK_FRAME(_hx_pos_b55a472159d67565_64_get_color,"box2D.common.B2Color","get_color",0xa4a1d10d,"box2D.common.B2Color.get_color","box2D/common/B2Color.hx",64,0x57bd057d)
namespace box2D{
namespace common{

void B2Color_obj::__construct(Float rr,Float gg,Float bb){
            	HX_STACKFRAME(&_hx_pos_b55a472159d67565_32_new)
HXLINE(  33)		this->_r = ::Std_obj::_hx_int(((int)255 * ::box2D::common::math::B2Math_obj::clamp(rr,((Float)0.0),((Float)1.0))));
HXLINE(  34)		this->_g = ::Std_obj::_hx_int(((int)255 * ::box2D::common::math::B2Math_obj::clamp(gg,((Float)0.0),((Float)1.0))));
HXLINE(  35)		this->_b = ::Std_obj::_hx_int(((int)255 * ::box2D::common::math::B2Math_obj::clamp(bb,((Float)0.0),((Float)1.0))));
            	}

Dynamic B2Color_obj::__CreateEmpty() { return new B2Color_obj; }

void *B2Color_obj::_hx_vtable = 0;

Dynamic B2Color_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< B2Color_obj > _hx_result = new B2Color_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool B2Color_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0dcb7513;
}

void B2Color_obj::set(Float rr,Float gg,Float bb){
            	HX_STACKFRAME(&_hx_pos_b55a472159d67565_38_set)
HXLINE(  39)		this->_r = ::Std_obj::_hx_int(((int)255 * ::box2D::common::math::B2Math_obj::clamp(rr,((Float)0.0),((Float)1.0))));
HXLINE(  40)		this->_g = ::Std_obj::_hx_int(((int)255 * ::box2D::common::math::B2Math_obj::clamp(gg,((Float)0.0),((Float)1.0))));
HXLINE(  41)		this->_b = ::Std_obj::_hx_int(((int)255 * ::box2D::common::math::B2Math_obj::clamp(bb,((Float)0.0),((Float)1.0))));
            	}


HX_DEFINE_DYNAMIC_FUNC3(B2Color_obj,set,(void))

Float B2Color_obj::set_r(Float rr){
            	HX_STACKFRAME(&_hx_pos_b55a472159d67565_51_set_r)
HXDLIN(  51)		return (this->_r = ::Std_obj::_hx_int(((int)255 * ::box2D::common::math::B2Math_obj::clamp(rr,((Float)0.0),((Float)1.0)))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(B2Color_obj,set_r,return )

Float B2Color_obj::set_g(Float gg){
            	HX_STACKFRAME(&_hx_pos_b55a472159d67565_55_set_g)
HXDLIN(  55)		return (this->_g = ::Std_obj::_hx_int(((int)255 * ::box2D::common::math::B2Math_obj::clamp(gg,((Float)0.0),((Float)1.0)))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(B2Color_obj,set_g,return )

Float B2Color_obj::set_b(Float bb){
            	HX_STACKFRAME(&_hx_pos_b55a472159d67565_59_set_b)
HXDLIN(  59)		return (this->_b = ::Std_obj::_hx_int(((int)255 * ::box2D::common::math::B2Math_obj::clamp(bb,((Float)0.0),((Float)1.0)))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(B2Color_obj,set_b,return )

int B2Color_obj::get_color(){
            	HX_STACKFRAME(&_hx_pos_b55a472159d67565_64_get_color)
HXDLIN(  64)		int _hx_tmp = ((int)this->_r << (int)(int)16);
HXDLIN(  64)		return ((int)((int)_hx_tmp | (int)((int)this->_g << (int)(int)8)) | (int)this->_b);
            	}


HX_DEFINE_DYNAMIC_FUNC0(B2Color_obj,get_color,return )


hx::ObjectPtr< B2Color_obj > B2Color_obj::__new(Float rr,Float gg,Float bb) {
	hx::ObjectPtr< B2Color_obj > __this = new B2Color_obj();
	__this->__construct(rr,gg,bb);
	return __this;
}

hx::ObjectPtr< B2Color_obj > B2Color_obj::__alloc(hx::Ctx *_hx_ctx,Float rr,Float gg,Float bb) {
	B2Color_obj *__this = (B2Color_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(B2Color_obj), false, "box2D.common.B2Color"));
	*(void **)__this = B2Color_obj::_hx_vtable;
	__this->__construct(rr,gg,bb);
	return __this;
}

B2Color_obj::B2Color_obj()
{
}

hx::Val B2Color_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"r") ) { return hx::Val( r ); }
		if (HX_FIELD_EQ(inName,"g") ) { return hx::Val( g ); }
		if (HX_FIELD_EQ(inName,"b") ) { return hx::Val( b ); }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"_r") ) { return hx::Val( _r ); }
		if (HX_FIELD_EQ(inName,"_g") ) { return hx::Val( _g ); }
		if (HX_FIELD_EQ(inName,"_b") ) { return hx::Val( _b ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"color") ) { return hx::Val( inCallProp == hx::paccAlways ? get_color() : color ); }
		if (HX_FIELD_EQ(inName,"set_r") ) { return hx::Val( set_r_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_g") ) { return hx::Val( set_g_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_b") ) { return hx::Val( set_b_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"get_color") ) { return hx::Val( get_color_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val B2Color_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"r") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_r(inValue.Cast< Float >()) );r=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"g") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_g(inValue.Cast< Float >()) );g=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"b") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_b(inValue.Cast< Float >()) );b=inValue.Cast< Float >(); return inValue; }
		break;
	case 2:
		if (HX_FIELD_EQ(inName,"_r") ) { _r=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_g") ) { _g=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"_b") ) { _b=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"color") ) { color=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void B2Color_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("r","\x72","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("g","\x67","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("b","\x62","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("color","\x63","\x71","\x5c","\x4a"));
	outFields->push(HX_HCSTRING("_r","\x33","\x53","\x00","\x00"));
	outFields->push(HX_HCSTRING("_g","\x28","\x53","\x00","\x00"));
	outFields->push(HX_HCSTRING("_b","\x23","\x53","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo B2Color_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(B2Color_obj,r),HX_HCSTRING("r","\x72","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(B2Color_obj,g),HX_HCSTRING("g","\x67","\x00","\x00","\x00")},
	{hx::fsFloat,(int)offsetof(B2Color_obj,b),HX_HCSTRING("b","\x62","\x00","\x00","\x00")},
	{hx::fsInt,(int)offsetof(B2Color_obj,color),HX_HCSTRING("color","\x63","\x71","\x5c","\x4a")},
	{hx::fsInt,(int)offsetof(B2Color_obj,_r),HX_HCSTRING("_r","\x33","\x53","\x00","\x00")},
	{hx::fsInt,(int)offsetof(B2Color_obj,_g),HX_HCSTRING("_g","\x28","\x53","\x00","\x00")},
	{hx::fsInt,(int)offsetof(B2Color_obj,_b),HX_HCSTRING("_b","\x23","\x53","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *B2Color_obj_sStaticStorageInfo = 0;
#endif

static ::String B2Color_obj_sMemberFields[] = {
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("r","\x72","\x00","\x00","\x00"),
	HX_HCSTRING("g","\x67","\x00","\x00","\x00"),
	HX_HCSTRING("b","\x62","\x00","\x00","\x00"),
	HX_HCSTRING("color","\x63","\x71","\x5c","\x4a"),
	HX_HCSTRING("set_r","\x55","\x9b","\x2f","\x7a"),
	HX_HCSTRING("set_g","\x4a","\x9b","\x2f","\x7a"),
	HX_HCSTRING("set_b","\x45","\x9b","\x2f","\x7a"),
	HX_HCSTRING("get_color","\xba","\xcd","\x05","\x8e"),
	HX_HCSTRING("_r","\x33","\x53","\x00","\x00"),
	HX_HCSTRING("_g","\x28","\x53","\x00","\x00"),
	HX_HCSTRING("_b","\x23","\x53","\x00","\x00"),
	::String(null()) };

static void B2Color_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(B2Color_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void B2Color_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(B2Color_obj::__mClass,"__mClass");
};

#endif

hx::Class B2Color_obj::__mClass;

void B2Color_obj::__register()
{
	hx::Object *dummy = new B2Color_obj;
	B2Color_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("box2D.common.B2Color","\x01","\x8e","\x5e","\x87");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = B2Color_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(B2Color_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< B2Color_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = B2Color_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = B2Color_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = B2Color_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace box2D
} // end namespace common
