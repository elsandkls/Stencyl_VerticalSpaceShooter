// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_box2D_common_B2Settings
#include <box2D/common/B2Settings.h>
#endif
#ifndef INCLUDED_box2D_common_math_B2Vec2
#include <box2D/common/math/B2Vec2.h>
#endif
#ifndef INCLUDED_box2D_dynamics_B2Body
#include <box2D/dynamics/B2Body.h>
#endif
#ifndef INCLUDED_box2D_dynamics_B2TimeStep
#include <box2D/dynamics/B2TimeStep.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2DistanceJoint
#include <box2D/dynamics/joints/B2DistanceJoint.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2DistanceJointDef
#include <box2D/dynamics/joints/B2DistanceJointDef.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2FrictionJoint
#include <box2D/dynamics/joints/B2FrictionJoint.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2FrictionJointDef
#include <box2D/dynamics/joints/B2FrictionJointDef.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2GearJoint
#include <box2D/dynamics/joints/B2GearJoint.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2GearJointDef
#include <box2D/dynamics/joints/B2GearJointDef.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2Joint
#include <box2D/dynamics/joints/B2Joint.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2JointDef
#include <box2D/dynamics/joints/B2JointDef.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2JointEdge
#include <box2D/dynamics/joints/B2JointEdge.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2LineJoint
#include <box2D/dynamics/joints/B2LineJoint.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2LineJointDef
#include <box2D/dynamics/joints/B2LineJointDef.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2MouseJoint
#include <box2D/dynamics/joints/B2MouseJoint.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2MouseJointDef
#include <box2D/dynamics/joints/B2MouseJointDef.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2PrismaticJoint
#include <box2D/dynamics/joints/B2PrismaticJoint.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2PrismaticJointDef
#include <box2D/dynamics/joints/B2PrismaticJointDef.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2PulleyJoint
#include <box2D/dynamics/joints/B2PulleyJoint.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2PulleyJointDef
#include <box2D/dynamics/joints/B2PulleyJointDef.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2RevoluteJoint
#include <box2D/dynamics/joints/B2RevoluteJoint.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2RevoluteJointDef
#include <box2D/dynamics/joints/B2RevoluteJointDef.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2WeldJoint
#include <box2D/dynamics/joints/B2WeldJoint.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2WeldJointDef
#include <box2D/dynamics/joints/B2WeldJointDef.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_afa2322f236b2c1c_216_new,"box2D.dynamics.joints.B2Joint","new",0x84591630,"box2D.dynamics.joints.B2Joint.new","box2D/dynamics/joints/B2Joint.hx",216,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_39_getType,"box2D.dynamics.joints.B2Joint","getType",0xf3701040,"box2D.dynamics.joints.B2Joint.getType","box2D/dynamics/joints/B2Joint.hx",39,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_45_getAnchorA,"box2D.dynamics.joints.B2Joint","getAnchorA",0x9a5d8666,"box2D.dynamics.joints.B2Joint.getAnchorA","box2D/dynamics/joints/B2Joint.hx",45,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_49_getAnchorB,"box2D.dynamics.joints.B2Joint","getAnchorB",0x9a5d8667,"box2D.dynamics.joints.B2Joint.getAnchorB","box2D/dynamics/joints/B2Joint.hx",49,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_54_getReactionForce,"box2D.dynamics.joints.B2Joint","getReactionForce",0xc27fd73c,"box2D.dynamics.joints.B2Joint.getReactionForce","box2D/dynamics/joints/B2Joint.hx",54,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_58_getReactionTorque,"box2D.dynamics.joints.B2Joint","getReactionTorque",0x06663859,"box2D.dynamics.joints.B2Joint.getReactionTorque","box2D/dynamics/joints/B2Joint.hx",58,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_65_getBodyA,"box2D.dynamics.joints.B2Joint","getBodyA",0xaac28b19,"box2D.dynamics.joints.B2Joint.getBodyA","box2D/dynamics/joints/B2Joint.hx",65,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_73_getBodyB,"box2D.dynamics.joints.B2Joint","getBodyB",0xaac28b1a,"box2D.dynamics.joints.B2Joint.getBodyB","box2D/dynamics/joints/B2Joint.hx",73,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_80_getNext,"box2D.dynamics.joints.B2Joint","getNext",0xef69a279,"box2D.dynamics.joints.B2Joint.getNext","box2D/dynamics/joints/B2Joint.hx",80,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_87_getUserData,"box2D.dynamics.joints.B2Joint","getUserData",0x3193ee9b,"box2D.dynamics.joints.B2Joint.getUserData","box2D/dynamics/joints/B2Joint.hx",87,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_94_setUserData,"box2D.dynamics.joints.B2Joint","setUserData",0x3c00f5a7,"box2D.dynamics.joints.B2Joint.setUserData","box2D/dynamics/joints/B2Joint.hx",94,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_102_isActive,"box2D.dynamics.joints.B2Joint","isActive",0x02ab8580,"box2D.dynamics.joints.B2Joint.isActive","box2D/dynamics/joints/B2Joint.hx",102,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_235_initVelocityConstraints,"box2D.dynamics.joints.B2Joint","initVelocityConstraints",0x775a06f9,"box2D.dynamics.joints.B2Joint.initVelocityConstraints","box2D/dynamics/joints/B2Joint.hx",235,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_236_solveVelocityConstraints,"box2D.dynamics.joints.B2Joint","solveVelocityConstraints",0xcc2f5e4a,"box2D.dynamics.joints.B2Joint.solveVelocityConstraints","box2D/dynamics/joints/B2Joint.hx",236,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_237_finalizeVelocityConstraints,"box2D.dynamics.joints.B2Joint","finalizeVelocityConstraints",0x6edfb52b,"box2D.dynamics.joints.B2Joint.finalizeVelocityConstraints","box2D/dynamics/joints/B2Joint.hx",237,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_240_solvePositionConstraints,"box2D.dynamics.joints.B2Joint","solvePositionConstraints",0x040b733e,"box2D.dynamics.joints.B2Joint.solvePositionConstraints","box2D/dynamics/joints/B2Joint.hx",240,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_107_create,"box2D.dynamics.joints.B2Joint","create",0xae5fa32c,"box2D.dynamics.joints.B2Joint.create","box2D/dynamics/joints/B2Joint.hx",107,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_169_destroy,"box2D.dynamics.joints.B2Joint","destroy",0xf86a9aca,"box2D.dynamics.joints.B2Joint.destroy","box2D/dynamics/joints/B2Joint.hx",169,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_266_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",266,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_267_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",267,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_268_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",268,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_269_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",269,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_270_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",270,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_271_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",271,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_272_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",272,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_273_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",273,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_274_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",274,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_275_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",275,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_278_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",278,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_279_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",279,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_280_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",280,0x64e1d6a1)
HX_LOCAL_STACK_FRAME(_hx_pos_afa2322f236b2c1c_281_boot,"box2D.dynamics.joints.B2Joint","boot",0x41b35462,"box2D.dynamics.joints.B2Joint.boot","box2D/dynamics/joints/B2Joint.hx",281,0x64e1d6a1)
namespace box2D{
namespace dynamics{
namespace joints{

void B2Joint_obj::__construct( ::box2D::dynamics::joints::B2JointDef def){
            	HX_GC_STACKFRAME(&_hx_pos_afa2322f236b2c1c_216_new)
HXLINE( 218)		this->m_edgeA =  ::box2D::dynamics::joints::B2JointEdge_obj::__alloc( HX_CTX );
HXLINE( 219)		this->m_edgeB =  ::box2D::dynamics::joints::B2JointEdge_obj::__alloc( HX_CTX );
HXLINE( 220)		this->m_localCenterA =  ::box2D::common::math::B2Vec2_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 221)		this->m_localCenterB =  ::box2D::common::math::B2Vec2_obj::__alloc( HX_CTX ,null(),null());
HXLINE( 223)		::box2D::common::B2Settings_obj::b2Assert(hx::IsNotEq( def->bodyA,def->bodyB ));
HXLINE( 224)		this->m_type = def->type;
HXLINE( 225)		this->m_prev = null();
HXLINE( 226)		this->m_next = null();
HXLINE( 227)		this->m_bodyA = def->bodyA;
HXLINE( 228)		this->m_bodyB = def->bodyB;
HXLINE( 229)		this->m_collideConnected = def->collideConnected;
HXLINE( 230)		this->m_islandFlag = false;
HXLINE( 231)		this->m_userData = def->userData;
            	}

Dynamic B2Joint_obj::__CreateEmpty() { return new B2Joint_obj; }

void *B2Joint_obj::_hx_vtable = 0;

Dynamic B2Joint_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< B2Joint_obj > _hx_result = new B2Joint_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool B2Joint_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x13310c20;
}

int B2Joint_obj::getType(){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_39_getType)
HXDLIN(  39)		return this->m_type;
            	}


HX_DEFINE_DYNAMIC_FUNC0(B2Joint_obj,getType,return )

 ::box2D::common::math::B2Vec2 B2Joint_obj::getAnchorA(){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_45_getAnchorA)
HXDLIN(  45)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(B2Joint_obj,getAnchorA,return )

 ::box2D::common::math::B2Vec2 B2Joint_obj::getAnchorB(){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_49_getAnchorB)
HXDLIN(  49)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(B2Joint_obj,getAnchorB,return )

 ::box2D::common::math::B2Vec2 B2Joint_obj::getReactionForce(Float inv_dt){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_54_getReactionForce)
HXDLIN(  54)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(B2Joint_obj,getReactionForce,return )

Float B2Joint_obj::getReactionTorque(Float inv_dt){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_58_getReactionTorque)
HXDLIN(  58)		return ((Float)0.0);
            	}


HX_DEFINE_DYNAMIC_FUNC1(B2Joint_obj,getReactionTorque,return )

 ::box2D::dynamics::B2Body B2Joint_obj::getBodyA(){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_65_getBodyA)
HXDLIN(  65)		return this->m_bodyA;
            	}


HX_DEFINE_DYNAMIC_FUNC0(B2Joint_obj,getBodyA,return )

 ::box2D::dynamics::B2Body B2Joint_obj::getBodyB(){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_73_getBodyB)
HXDLIN(  73)		return this->m_bodyB;
            	}


HX_DEFINE_DYNAMIC_FUNC0(B2Joint_obj,getBodyB,return )

 ::box2D::dynamics::joints::B2Joint B2Joint_obj::getNext(){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_80_getNext)
HXDLIN(  80)		return this->m_next;
            	}


HX_DEFINE_DYNAMIC_FUNC0(B2Joint_obj,getNext,return )

 ::Dynamic B2Joint_obj::getUserData(){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_87_getUserData)
HXDLIN(  87)		return this->m_userData;
            	}


HX_DEFINE_DYNAMIC_FUNC0(B2Joint_obj,getUserData,return )

void B2Joint_obj::setUserData( ::Dynamic data){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_94_setUserData)
HXDLIN(  94)		this->m_userData = data;
            	}


HX_DEFINE_DYNAMIC_FUNC1(B2Joint_obj,setUserData,(void))

bool B2Joint_obj::isActive(){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_102_isActive)
HXDLIN( 102)		if (this->m_bodyA->isActive()) {
HXDLIN( 102)			return this->m_bodyB->isActive();
            		}
            		else {
HXDLIN( 102)			return false;
            		}
HXDLIN( 102)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(B2Joint_obj,isActive,return )

void B2Joint_obj::initVelocityConstraints( ::box2D::dynamics::B2TimeStep step){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_235_initVelocityConstraints)
            	}


HX_DEFINE_DYNAMIC_FUNC1(B2Joint_obj,initVelocityConstraints,(void))

void B2Joint_obj::solveVelocityConstraints( ::box2D::dynamics::B2TimeStep step){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_236_solveVelocityConstraints)
            	}


HX_DEFINE_DYNAMIC_FUNC1(B2Joint_obj,solveVelocityConstraints,(void))

void B2Joint_obj::finalizeVelocityConstraints(){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_237_finalizeVelocityConstraints)
            	}


HX_DEFINE_DYNAMIC_FUNC0(B2Joint_obj,finalizeVelocityConstraints,(void))

bool B2Joint_obj::solvePositionConstraints(Float baumgarte){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_240_solvePositionConstraints)
HXDLIN( 240)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(B2Joint_obj,solvePositionConstraints,return )

 ::box2D::dynamics::joints::B2Joint B2Joint_obj::create( ::box2D::dynamics::joints::B2JointDef def, ::Dynamic allocator){
            	HX_GC_STACKFRAME(&_hx_pos_afa2322f236b2c1c_107_create)
HXLINE( 108)		 ::box2D::dynamics::joints::B2Joint joint = null();
HXLINE( 111)		if ((def->type == (int)3)) {
HXLINE( 114)			joint =  ::box2D::dynamics::joints::B2DistanceJoint_obj::__alloc( HX_CTX ,def);
            		}
            		else {
HXLINE( 117)			if ((def->type == (int)5)) {
HXLINE( 120)				joint =  ::box2D::dynamics::joints::B2MouseJoint_obj::__alloc( HX_CTX ,def);
            			}
            			else {
HXLINE( 123)				if ((def->type == (int)2)) {
HXLINE( 126)					joint =  ::box2D::dynamics::joints::B2PrismaticJoint_obj::__alloc( HX_CTX ,def);
            				}
            				else {
HXLINE( 129)					if ((def->type == (int)1)) {
HXLINE( 132)						joint =  ::box2D::dynamics::joints::B2RevoluteJoint_obj::__alloc( HX_CTX ,def);
            					}
            					else {
HXLINE( 135)						if ((def->type == (int)4)) {
HXLINE( 138)							joint =  ::box2D::dynamics::joints::B2PulleyJoint_obj::__alloc( HX_CTX ,def);
            						}
            						else {
HXLINE( 141)							if ((def->type == (int)6)) {
HXLINE( 144)								joint =  ::box2D::dynamics::joints::B2GearJoint_obj::__alloc( HX_CTX ,def);
            							}
            							else {
HXLINE( 147)								if ((def->type == (int)7)) {
HXLINE( 150)									joint =  ::box2D::dynamics::joints::B2LineJoint_obj::__alloc( HX_CTX ,def);
            								}
            								else {
HXLINE( 153)									if ((def->type == (int)8)) {
HXLINE( 156)										joint =  ::box2D::dynamics::joints::B2WeldJoint_obj::__alloc( HX_CTX ,def);
            									}
            									else {
HXLINE( 159)										if ((def->type == (int)9)) {
HXLINE( 162)											joint =  ::box2D::dynamics::joints::B2FrictionJoint_obj::__alloc( HX_CTX ,def);
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE( 166)		return joint;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(B2Joint_obj,create,return )

void B2Joint_obj::destroy( ::box2D::dynamics::joints::B2Joint joint, ::Dynamic allocator){
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_169_destroy)
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(B2Joint_obj,destroy,(void))

int B2Joint_obj::e_unknownJoint;

int B2Joint_obj::e_revoluteJoint;

int B2Joint_obj::e_prismaticJoint;

int B2Joint_obj::e_distanceJoint;

int B2Joint_obj::e_pulleyJoint;

int B2Joint_obj::e_mouseJoint;

int B2Joint_obj::e_gearJoint;

int B2Joint_obj::e_lineJoint;

int B2Joint_obj::e_weldJoint;

int B2Joint_obj::e_frictionJoint;

int B2Joint_obj::e_inactiveLimit;

int B2Joint_obj::e_atLowerLimit;

int B2Joint_obj::e_atUpperLimit;

int B2Joint_obj::e_equalLimits;


hx::ObjectPtr< B2Joint_obj > B2Joint_obj::__new( ::box2D::dynamics::joints::B2JointDef def) {
	hx::ObjectPtr< B2Joint_obj > __this = new B2Joint_obj();
	__this->__construct(def);
	return __this;
}

hx::ObjectPtr< B2Joint_obj > B2Joint_obj::__alloc(hx::Ctx *_hx_ctx, ::box2D::dynamics::joints::B2JointDef def) {
	B2Joint_obj *__this = (B2Joint_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(B2Joint_obj), true, "box2D.dynamics.joints.B2Joint"));
	*(void **)__this = B2Joint_obj::_hx_vtable;
	__this->__construct(def);
	return __this;
}

B2Joint_obj::B2Joint_obj()
{
}

void B2Joint_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(B2Joint);
	HX_MARK_MEMBER_NAME(m_type,"m_type");
	HX_MARK_MEMBER_NAME(m_prev,"m_prev");
	HX_MARK_MEMBER_NAME(m_next,"m_next");
	HX_MARK_MEMBER_NAME(m_edgeA,"m_edgeA");
	HX_MARK_MEMBER_NAME(m_edgeB,"m_edgeB");
	HX_MARK_MEMBER_NAME(m_bodyA,"m_bodyA");
	HX_MARK_MEMBER_NAME(m_bodyB,"m_bodyB");
	HX_MARK_MEMBER_NAME(m_islandFlag,"m_islandFlag");
	HX_MARK_MEMBER_NAME(m_collideConnected,"m_collideConnected");
	HX_MARK_MEMBER_NAME(m_userData,"m_userData");
	HX_MARK_MEMBER_NAME(m_localCenterA,"m_localCenterA");
	HX_MARK_MEMBER_NAME(m_localCenterB,"m_localCenterB");
	HX_MARK_MEMBER_NAME(m_invMassA,"m_invMassA");
	HX_MARK_MEMBER_NAME(m_invMassB,"m_invMassB");
	HX_MARK_MEMBER_NAME(m_invIA,"m_invIA");
	HX_MARK_MEMBER_NAME(m_invIB,"m_invIB");
	HX_MARK_MEMBER_NAME(ID,"ID");
	HX_MARK_END_CLASS();
}

void B2Joint_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(m_type,"m_type");
	HX_VISIT_MEMBER_NAME(m_prev,"m_prev");
	HX_VISIT_MEMBER_NAME(m_next,"m_next");
	HX_VISIT_MEMBER_NAME(m_edgeA,"m_edgeA");
	HX_VISIT_MEMBER_NAME(m_edgeB,"m_edgeB");
	HX_VISIT_MEMBER_NAME(m_bodyA,"m_bodyA");
	HX_VISIT_MEMBER_NAME(m_bodyB,"m_bodyB");
	HX_VISIT_MEMBER_NAME(m_islandFlag,"m_islandFlag");
	HX_VISIT_MEMBER_NAME(m_collideConnected,"m_collideConnected");
	HX_VISIT_MEMBER_NAME(m_userData,"m_userData");
	HX_VISIT_MEMBER_NAME(m_localCenterA,"m_localCenterA");
	HX_VISIT_MEMBER_NAME(m_localCenterB,"m_localCenterB");
	HX_VISIT_MEMBER_NAME(m_invMassA,"m_invMassA");
	HX_VISIT_MEMBER_NAME(m_invMassB,"m_invMassB");
	HX_VISIT_MEMBER_NAME(m_invIA,"m_invIA");
	HX_VISIT_MEMBER_NAME(m_invIB,"m_invIB");
	HX_VISIT_MEMBER_NAME(ID,"ID");
}

hx::Val B2Joint_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"ID") ) { return hx::Val( ID ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"m_type") ) { return hx::Val( m_type ); }
		if (HX_FIELD_EQ(inName,"m_prev") ) { return hx::Val( m_prev ); }
		if (HX_FIELD_EQ(inName,"m_next") ) { return hx::Val( m_next ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getType") ) { return hx::Val( getType_dyn() ); }
		if (HX_FIELD_EQ(inName,"getNext") ) { return hx::Val( getNext_dyn() ); }
		if (HX_FIELD_EQ(inName,"m_edgeA") ) { return hx::Val( m_edgeA ); }
		if (HX_FIELD_EQ(inName,"m_edgeB") ) { return hx::Val( m_edgeB ); }
		if (HX_FIELD_EQ(inName,"m_bodyA") ) { return hx::Val( m_bodyA ); }
		if (HX_FIELD_EQ(inName,"m_bodyB") ) { return hx::Val( m_bodyB ); }
		if (HX_FIELD_EQ(inName,"m_invIA") ) { return hx::Val( m_invIA ); }
		if (HX_FIELD_EQ(inName,"m_invIB") ) { return hx::Val( m_invIB ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getBodyA") ) { return hx::Val( getBodyA_dyn() ); }
		if (HX_FIELD_EQ(inName,"getBodyB") ) { return hx::Val( getBodyB_dyn() ); }
		if (HX_FIELD_EQ(inName,"isActive") ) { return hx::Val( isActive_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"getAnchorA") ) { return hx::Val( getAnchorA_dyn() ); }
		if (HX_FIELD_EQ(inName,"getAnchorB") ) { return hx::Val( getAnchorB_dyn() ); }
		if (HX_FIELD_EQ(inName,"m_userData") ) { return hx::Val( m_userData ); }
		if (HX_FIELD_EQ(inName,"m_invMassA") ) { return hx::Val( m_invMassA ); }
		if (HX_FIELD_EQ(inName,"m_invMassB") ) { return hx::Val( m_invMassB ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getUserData") ) { return hx::Val( getUserData_dyn() ); }
		if (HX_FIELD_EQ(inName,"setUserData") ) { return hx::Val( setUserData_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"m_islandFlag") ) { return hx::Val( m_islandFlag ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"m_localCenterA") ) { return hx::Val( m_localCenterA ); }
		if (HX_FIELD_EQ(inName,"m_localCenterB") ) { return hx::Val( m_localCenterB ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"getReactionForce") ) { return hx::Val( getReactionForce_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"getReactionTorque") ) { return hx::Val( getReactionTorque_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"m_collideConnected") ) { return hx::Val( m_collideConnected ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"initVelocityConstraints") ) { return hx::Val( initVelocityConstraints_dyn() ); }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"solveVelocityConstraints") ) { return hx::Val( solveVelocityConstraints_dyn() ); }
		if (HX_FIELD_EQ(inName,"solvePositionConstraints") ) { return hx::Val( solvePositionConstraints_dyn() ); }
		break;
	case 27:
		if (HX_FIELD_EQ(inName,"finalizeVelocityConstraints") ) { return hx::Val( finalizeVelocityConstraints_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool B2Joint_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"destroy") ) { outValue = destroy_dyn(); return true; }
	}
	return false;
}

hx::Val B2Joint_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"ID") ) { ID=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"m_type") ) { m_type=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m_prev") ) { m_prev=inValue.Cast<  ::box2D::dynamics::joints::B2Joint >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m_next") ) { m_next=inValue.Cast<  ::box2D::dynamics::joints::B2Joint >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"m_edgeA") ) { m_edgeA=inValue.Cast<  ::box2D::dynamics::joints::B2JointEdge >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m_edgeB") ) { m_edgeB=inValue.Cast<  ::box2D::dynamics::joints::B2JointEdge >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m_bodyA") ) { m_bodyA=inValue.Cast<  ::box2D::dynamics::B2Body >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m_bodyB") ) { m_bodyB=inValue.Cast<  ::box2D::dynamics::B2Body >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m_invIA") ) { m_invIA=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m_invIB") ) { m_invIB=inValue.Cast< Float >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"m_userData") ) { m_userData=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m_invMassA") ) { m_invMassA=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m_invMassB") ) { m_invMassB=inValue.Cast< Float >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"m_islandFlag") ) { m_islandFlag=inValue.Cast< bool >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"m_localCenterA") ) { m_localCenterA=inValue.Cast<  ::box2D::common::math::B2Vec2 >(); return inValue; }
		if (HX_FIELD_EQ(inName,"m_localCenterB") ) { m_localCenterB=inValue.Cast<  ::box2D::common::math::B2Vec2 >(); return inValue; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"m_collideConnected") ) { m_collideConnected=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void B2Joint_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("m_type","\x0c","\x63","\x00","\x95"));
	outFields->push(HX_HCSTRING("m_prev","\x45","\x2f","\x56","\x92"));
	outFields->push(HX_HCSTRING("m_next","\x45","\xf5","\xf9","\x90"));
	outFields->push(HX_HCSTRING("m_edgeA","\xd2","\x44","\x6b","\x1a"));
	outFields->push(HX_HCSTRING("m_edgeB","\xd3","\x44","\x6b","\x1a"));
	outFields->push(HX_HCSTRING("m_bodyA","\xcd","\xaa","\x7a","\x67"));
	outFields->push(HX_HCSTRING("m_bodyB","\xce","\xaa","\x7a","\x67"));
	outFields->push(HX_HCSTRING("m_islandFlag","\xf3","\xde","\xdd","\x12"));
	outFields->push(HX_HCSTRING("m_collideConnected","\xbd","\xd6","\xa6","\x0c"));
	outFields->push(HX_HCSTRING("m_userData","\x67","\x97","\x73","\x2c"));
	outFields->push(HX_HCSTRING("m_localCenterA","\xf3","\x38","\x32","\xb6"));
	outFields->push(HX_HCSTRING("m_localCenterB","\xf4","\x38","\x32","\xb6"));
	outFields->push(HX_HCSTRING("m_invMassA","\x6e","\x6f","\xa1","\x3f"));
	outFields->push(HX_HCSTRING("m_invMassB","\x6f","\x6f","\xa1","\x3f"));
	outFields->push(HX_HCSTRING("m_invIA","\x77","\x02","\xad","\x6e"));
	outFields->push(HX_HCSTRING("m_invIB","\x78","\x02","\xad","\x6e"));
	outFields->push(HX_HCSTRING("ID","\xdb","\x3f","\x00","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo B2Joint_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(B2Joint_obj,m_type),HX_HCSTRING("m_type","\x0c","\x63","\x00","\x95")},
	{hx::fsObject /*::box2D::dynamics::joints::B2Joint*/ ,(int)offsetof(B2Joint_obj,m_prev),HX_HCSTRING("m_prev","\x45","\x2f","\x56","\x92")},
	{hx::fsObject /*::box2D::dynamics::joints::B2Joint*/ ,(int)offsetof(B2Joint_obj,m_next),HX_HCSTRING("m_next","\x45","\xf5","\xf9","\x90")},
	{hx::fsObject /*::box2D::dynamics::joints::B2JointEdge*/ ,(int)offsetof(B2Joint_obj,m_edgeA),HX_HCSTRING("m_edgeA","\xd2","\x44","\x6b","\x1a")},
	{hx::fsObject /*::box2D::dynamics::joints::B2JointEdge*/ ,(int)offsetof(B2Joint_obj,m_edgeB),HX_HCSTRING("m_edgeB","\xd3","\x44","\x6b","\x1a")},
	{hx::fsObject /*::box2D::dynamics::B2Body*/ ,(int)offsetof(B2Joint_obj,m_bodyA),HX_HCSTRING("m_bodyA","\xcd","\xaa","\x7a","\x67")},
	{hx::fsObject /*::box2D::dynamics::B2Body*/ ,(int)offsetof(B2Joint_obj,m_bodyB),HX_HCSTRING("m_bodyB","\xce","\xaa","\x7a","\x67")},
	{hx::fsBool,(int)offsetof(B2Joint_obj,m_islandFlag),HX_HCSTRING("m_islandFlag","\xf3","\xde","\xdd","\x12")},
	{hx::fsBool,(int)offsetof(B2Joint_obj,m_collideConnected),HX_HCSTRING("m_collideConnected","\xbd","\xd6","\xa6","\x0c")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(B2Joint_obj,m_userData),HX_HCSTRING("m_userData","\x67","\x97","\x73","\x2c")},
	{hx::fsObject /*::box2D::common::math::B2Vec2*/ ,(int)offsetof(B2Joint_obj,m_localCenterA),HX_HCSTRING("m_localCenterA","\xf3","\x38","\x32","\xb6")},
	{hx::fsObject /*::box2D::common::math::B2Vec2*/ ,(int)offsetof(B2Joint_obj,m_localCenterB),HX_HCSTRING("m_localCenterB","\xf4","\x38","\x32","\xb6")},
	{hx::fsFloat,(int)offsetof(B2Joint_obj,m_invMassA),HX_HCSTRING("m_invMassA","\x6e","\x6f","\xa1","\x3f")},
	{hx::fsFloat,(int)offsetof(B2Joint_obj,m_invMassB),HX_HCSTRING("m_invMassB","\x6f","\x6f","\xa1","\x3f")},
	{hx::fsFloat,(int)offsetof(B2Joint_obj,m_invIA),HX_HCSTRING("m_invIA","\x77","\x02","\xad","\x6e")},
	{hx::fsFloat,(int)offsetof(B2Joint_obj,m_invIB),HX_HCSTRING("m_invIB","\x78","\x02","\xad","\x6e")},
	{hx::fsInt,(int)offsetof(B2Joint_obj,ID),HX_HCSTRING("ID","\xdb","\x3f","\x00","\x00")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo B2Joint_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &B2Joint_obj::e_unknownJoint,HX_HCSTRING("e_unknownJoint","\xba","\xe8","\xab","\x21")},
	{hx::fsInt,(void *) &B2Joint_obj::e_revoluteJoint,HX_HCSTRING("e_revoluteJoint","\xea","\xe2","\xa6","\x0d")},
	{hx::fsInt,(void *) &B2Joint_obj::e_prismaticJoint,HX_HCSTRING("e_prismaticJoint","\xb6","\xa3","\x5c","\x37")},
	{hx::fsInt,(void *) &B2Joint_obj::e_distanceJoint,HX_HCSTRING("e_distanceJoint","\x3b","\x4d","\x49","\x1f")},
	{hx::fsInt,(void *) &B2Joint_obj::e_pulleyJoint,HX_HCSTRING("e_pulleyJoint","\xf7","\x84","\xef","\xfb")},
	{hx::fsInt,(void *) &B2Joint_obj::e_mouseJoint,HX_HCSTRING("e_mouseJoint","\xbf","\x39","\x05","\x33")},
	{hx::fsInt,(void *) &B2Joint_obj::e_gearJoint,HX_HCSTRING("e_gearJoint","\xa1","\xdc","\x11","\xdf")},
	{hx::fsInt,(void *) &B2Joint_obj::e_lineJoint,HX_HCSTRING("e_lineJoint","\x1c","\x09","\x86","\xcc")},
	{hx::fsInt,(void *) &B2Joint_obj::e_weldJoint,HX_HCSTRING("e_weldJoint","\xca","\x79","\x95","\x3e")},
	{hx::fsInt,(void *) &B2Joint_obj::e_frictionJoint,HX_HCSTRING("e_frictionJoint","\x56","\x5d","\x09","\x43")},
	{hx::fsInt,(void *) &B2Joint_obj::e_inactiveLimit,HX_HCSTRING("e_inactiveLimit","\x36","\xab","\x12","\xb3")},
	{hx::fsInt,(void *) &B2Joint_obj::e_atLowerLimit,HX_HCSTRING("e_atLowerLimit","\xa7","\x4f","\x32","\x27")},
	{hx::fsInt,(void *) &B2Joint_obj::e_atUpperLimit,HX_HCSTRING("e_atUpperLimit","\xa6","\xd0","\x60","\x2c")},
	{hx::fsInt,(void *) &B2Joint_obj::e_equalLimits,HX_HCSTRING("e_equalLimits","\x92","\x69","\xa9","\x63")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String B2Joint_obj_sMemberFields[] = {
	HX_HCSTRING("getType","\x70","\xa2","\x8b","\x1f"),
	HX_HCSTRING("getAnchorA","\x36","\x72","\x03","\x52"),
	HX_HCSTRING("getAnchorB","\x37","\x72","\x03","\x52"),
	HX_HCSTRING("getReactionForce","\x0c","\x7f","\x58","\x41"),
	HX_HCSTRING("getReactionTorque","\x89","\x66","\x20","\x85"),
	HX_HCSTRING("getBodyA","\xe9","\xe2","\xc6","\x16"),
	HX_HCSTRING("getBodyB","\xea","\xe2","\xc6","\x16"),
	HX_HCSTRING("getNext","\xa9","\x34","\x85","\x1b"),
	HX_HCSTRING("getUserData","\xcb","\x58","\x1c","\x2b"),
	HX_HCSTRING("setUserData","\xd7","\x5f","\x89","\x35"),
	HX_HCSTRING("isActive","\x50","\xdd","\xaf","\x6e"),
	HX_HCSTRING("initVelocityConstraints","\x29","\xf9","\xf0","\x64"),
	HX_HCSTRING("solveVelocityConstraints","\x1a","\x56","\xac","\xc2"),
	HX_HCSTRING("finalizeVelocityConstraints","\x5b","\x7f","\x13","\x7b"),
	HX_HCSTRING("solvePositionConstraints","\x0e","\x6b","\x88","\xfa"),
	HX_HCSTRING("m_type","\x0c","\x63","\x00","\x95"),
	HX_HCSTRING("m_prev","\x45","\x2f","\x56","\x92"),
	HX_HCSTRING("m_next","\x45","\xf5","\xf9","\x90"),
	HX_HCSTRING("m_edgeA","\xd2","\x44","\x6b","\x1a"),
	HX_HCSTRING("m_edgeB","\xd3","\x44","\x6b","\x1a"),
	HX_HCSTRING("m_bodyA","\xcd","\xaa","\x7a","\x67"),
	HX_HCSTRING("m_bodyB","\xce","\xaa","\x7a","\x67"),
	HX_HCSTRING("m_islandFlag","\xf3","\xde","\xdd","\x12"),
	HX_HCSTRING("m_collideConnected","\xbd","\xd6","\xa6","\x0c"),
	HX_HCSTRING("m_userData","\x67","\x97","\x73","\x2c"),
	HX_HCSTRING("m_localCenterA","\xf3","\x38","\x32","\xb6"),
	HX_HCSTRING("m_localCenterB","\xf4","\x38","\x32","\xb6"),
	HX_HCSTRING("m_invMassA","\x6e","\x6f","\xa1","\x3f"),
	HX_HCSTRING("m_invMassB","\x6f","\x6f","\xa1","\x3f"),
	HX_HCSTRING("m_invIA","\x77","\x02","\xad","\x6e"),
	HX_HCSTRING("m_invIB","\x78","\x02","\xad","\x6e"),
	HX_HCSTRING("ID","\xdb","\x3f","\x00","\x00"),
	::String(null()) };

static void B2Joint_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(B2Joint_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_unknownJoint,"e_unknownJoint");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_revoluteJoint,"e_revoluteJoint");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_prismaticJoint,"e_prismaticJoint");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_distanceJoint,"e_distanceJoint");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_pulleyJoint,"e_pulleyJoint");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_mouseJoint,"e_mouseJoint");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_gearJoint,"e_gearJoint");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_lineJoint,"e_lineJoint");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_weldJoint,"e_weldJoint");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_frictionJoint,"e_frictionJoint");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_inactiveLimit,"e_inactiveLimit");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_atLowerLimit,"e_atLowerLimit");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_atUpperLimit,"e_atUpperLimit");
	HX_MARK_MEMBER_NAME(B2Joint_obj::e_equalLimits,"e_equalLimits");
};

#ifdef HXCPP_VISIT_ALLOCS
static void B2Joint_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(B2Joint_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_unknownJoint,"e_unknownJoint");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_revoluteJoint,"e_revoluteJoint");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_prismaticJoint,"e_prismaticJoint");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_distanceJoint,"e_distanceJoint");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_pulleyJoint,"e_pulleyJoint");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_mouseJoint,"e_mouseJoint");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_gearJoint,"e_gearJoint");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_lineJoint,"e_lineJoint");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_weldJoint,"e_weldJoint");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_frictionJoint,"e_frictionJoint");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_inactiveLimit,"e_inactiveLimit");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_atLowerLimit,"e_atLowerLimit");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_atUpperLimit,"e_atUpperLimit");
	HX_VISIT_MEMBER_NAME(B2Joint_obj::e_equalLimits,"e_equalLimits");
};

#endif

hx::Class B2Joint_obj::__mClass;

static ::String B2Joint_obj_sStaticFields[] = {
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("destroy","\xfa","\x2c","\x86","\x24"),
	HX_HCSTRING("e_unknownJoint","\xba","\xe8","\xab","\x21"),
	HX_HCSTRING("e_revoluteJoint","\xea","\xe2","\xa6","\x0d"),
	HX_HCSTRING("e_prismaticJoint","\xb6","\xa3","\x5c","\x37"),
	HX_HCSTRING("e_distanceJoint","\x3b","\x4d","\x49","\x1f"),
	HX_HCSTRING("e_pulleyJoint","\xf7","\x84","\xef","\xfb"),
	HX_HCSTRING("e_mouseJoint","\xbf","\x39","\x05","\x33"),
	HX_HCSTRING("e_gearJoint","\xa1","\xdc","\x11","\xdf"),
	HX_HCSTRING("e_lineJoint","\x1c","\x09","\x86","\xcc"),
	HX_HCSTRING("e_weldJoint","\xca","\x79","\x95","\x3e"),
	HX_HCSTRING("e_frictionJoint","\x56","\x5d","\x09","\x43"),
	HX_HCSTRING("e_inactiveLimit","\x36","\xab","\x12","\xb3"),
	HX_HCSTRING("e_atLowerLimit","\xa7","\x4f","\x32","\x27"),
	HX_HCSTRING("e_atUpperLimit","\xa6","\xd0","\x60","\x2c"),
	HX_HCSTRING("e_equalLimits","\x92","\x69","\xa9","\x63"),
	::String(null())
};

void B2Joint_obj::__register()
{
	hx::Object *dummy = new B2Joint_obj;
	B2Joint_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("box2D.dynamics.joints.B2Joint","\x3e","\x7e","\xae","\x46");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &B2Joint_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = B2Joint_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(B2Joint_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(B2Joint_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< B2Joint_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = B2Joint_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = B2Joint_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = B2Joint_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void B2Joint_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_266_boot)
HXDLIN( 266)		e_unknownJoint = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_267_boot)
HXDLIN( 267)		e_revoluteJoint = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_268_boot)
HXDLIN( 268)		e_prismaticJoint = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_269_boot)
HXDLIN( 269)		e_distanceJoint = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_270_boot)
HXDLIN( 270)		e_pulleyJoint = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_271_boot)
HXDLIN( 271)		e_mouseJoint = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_272_boot)
HXDLIN( 272)		e_gearJoint = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_273_boot)
HXDLIN( 273)		e_lineJoint = (int)7;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_274_boot)
HXDLIN( 274)		e_weldJoint = (int)8;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_275_boot)
HXDLIN( 275)		e_frictionJoint = (int)9;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_278_boot)
HXDLIN( 278)		e_inactiveLimit = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_279_boot)
HXDLIN( 279)		e_atLowerLimit = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_280_boot)
HXDLIN( 280)		e_atUpperLimit = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_afa2322f236b2c1c_281_boot)
HXDLIN( 281)		e_equalLimits = (int)3;
            	}
}

} // end namespace box2D
} // end namespace dynamics
} // end namespace joints
