// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_box2D_common_math_B2Vec2
#include <box2D/common/math/B2Vec2.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2Jacobian
#include <box2D/dynamics/joints/B2Jacobian.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_986b29bbdbdfcadd_31_new,"box2D.dynamics.joints.B2Jacobian","new",0x44acc115,"box2D.dynamics.joints.B2Jacobian.new","box2D/dynamics/joints/B2Jacobian.hx",31,0x5b8fb33a)
HX_LOCAL_STACK_FRAME(_hx_pos_986b29bbdbdfcadd_43_setZero,"box2D.dynamics.joints.B2Jacobian","setZero",0xc98d3f1f,"box2D.dynamics.joints.B2Jacobian.setZero","box2D/dynamics/joints/B2Jacobian.hx",43,0x5b8fb33a)
HX_LOCAL_STACK_FRAME(_hx_pos_986b29bbdbdfcadd_47_set,"box2D.dynamics.joints.B2Jacobian","set",0x44b08c57,"box2D.dynamics.joints.B2Jacobian.set","box2D/dynamics/joints/B2Jacobian.hx",47,0x5b8fb33a)
HX_LOCAL_STACK_FRAME(_hx_pos_986b29bbdbdfcadd_54_compute,"box2D.dynamics.joints.B2Jacobian","compute",0x369036ac,"box2D.dynamics.joints.B2Jacobian.compute","box2D/dynamics/joints/B2Jacobian.hx",54,0x5b8fb33a)
namespace box2D{
namespace dynamics{
namespace joints{

void B2Jacobian_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_986b29bbdbdfcadd_31_new)
HXLINE(  33)		this->linearA =  ::box2D::common::math::B2Vec2_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  34)		this->linearB =  ::box2D::common::math::B2Vec2_obj::__alloc( HX_CTX ,null(),null());
            	}

Dynamic B2Jacobian_obj::__CreateEmpty() { return new B2Jacobian_obj; }

void *B2Jacobian_obj::_hx_vtable = 0;

Dynamic B2Jacobian_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< B2Jacobian_obj > _hx_result = new B2Jacobian_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool B2Jacobian_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x20a55e01;
}

void B2Jacobian_obj::setZero(){
            	HX_STACKFRAME(&_hx_pos_986b29bbdbdfcadd_43_setZero)
HXLINE(  44)		{
HXLINE(  44)			 ::box2D::common::math::B2Vec2 _this = this->linearA;
HXDLIN(  44)			_this->x = ((Float)0.0);
HXDLIN(  44)			_this->y = ((Float)0.0);
            		}
HXDLIN(  44)		this->angularA = ((Float)0.0);
HXLINE(  45)		{
HXLINE(  45)			 ::box2D::common::math::B2Vec2 _this1 = this->linearB;
HXDLIN(  45)			_this1->x = ((Float)0.0);
HXDLIN(  45)			_this1->y = ((Float)0.0);
            		}
HXDLIN(  45)		this->angularB = ((Float)0.0);
            	}


HX_DEFINE_DYNAMIC_FUNC0(B2Jacobian_obj,setZero,(void))

void B2Jacobian_obj::set( ::box2D::common::math::B2Vec2 x1,Float a1, ::box2D::common::math::B2Vec2 x2,Float a2){
            	HX_STACKFRAME(&_hx_pos_986b29bbdbdfcadd_47_set)
HXLINE(  48)		{
HXLINE(  48)			 ::box2D::common::math::B2Vec2 _this = this->linearA;
HXDLIN(  48)			_this->x = x1->x;
HXDLIN(  48)			_this->y = x1->y;
            		}
HXDLIN(  48)		this->angularA = a1;
HXLINE(  49)		{
HXLINE(  49)			 ::box2D::common::math::B2Vec2 _this1 = this->linearB;
HXDLIN(  49)			_this1->x = x2->x;
HXDLIN(  49)			_this1->y = x2->y;
            		}
HXDLIN(  49)		this->angularB = a2;
            	}


HX_DEFINE_DYNAMIC_FUNC4(B2Jacobian_obj,set,(void))

Float B2Jacobian_obj::compute( ::box2D::common::math::B2Vec2 x1,Float a1, ::box2D::common::math::B2Vec2 x2,Float a2){
            	HX_STACKFRAME(&_hx_pos_986b29bbdbdfcadd_54_compute)
HXDLIN(  54)		Float _hx_tmp = (this->linearA->x * x1->x);
HXDLIN(  54)		Float _hx_tmp1 = (_hx_tmp + (this->linearA->y * x1->y));
HXDLIN(  54)		Float _hx_tmp2 = (_hx_tmp1 + (this->angularA * a1));
HXDLIN(  54)		Float _hx_tmp3 = (this->linearB->x * x2->x);
HXDLIN(  54)		Float _hx_tmp4 = (_hx_tmp2 + (_hx_tmp3 + (this->linearB->y * x2->y)));
HXDLIN(  54)		return (_hx_tmp4 + (this->angularB * a2));
            	}


HX_DEFINE_DYNAMIC_FUNC4(B2Jacobian_obj,compute,return )


hx::ObjectPtr< B2Jacobian_obj > B2Jacobian_obj::__new() {
	hx::ObjectPtr< B2Jacobian_obj > __this = new B2Jacobian_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< B2Jacobian_obj > B2Jacobian_obj::__alloc(hx::Ctx *_hx_ctx) {
	B2Jacobian_obj *__this = (B2Jacobian_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(B2Jacobian_obj), true, "box2D.dynamics.joints.B2Jacobian"));
	*(void **)__this = B2Jacobian_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

B2Jacobian_obj::B2Jacobian_obj()
{
}

void B2Jacobian_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(B2Jacobian);
	HX_MARK_MEMBER_NAME(linearA,"linearA");
	HX_MARK_MEMBER_NAME(angularA,"angularA");
	HX_MARK_MEMBER_NAME(linearB,"linearB");
	HX_MARK_MEMBER_NAME(angularB,"angularB");
	HX_MARK_END_CLASS();
}

void B2Jacobian_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(linearA,"linearA");
	HX_VISIT_MEMBER_NAME(angularA,"angularA");
	HX_VISIT_MEMBER_NAME(linearB,"linearB");
	HX_VISIT_MEMBER_NAME(angularB,"angularB");
}

hx::Val B2Jacobian_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"linearA") ) { return hx::Val( linearA ); }
		if (HX_FIELD_EQ(inName,"linearB") ) { return hx::Val( linearB ); }
		if (HX_FIELD_EQ(inName,"setZero") ) { return hx::Val( setZero_dyn() ); }
		if (HX_FIELD_EQ(inName,"compute") ) { return hx::Val( compute_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"angularA") ) { return hx::Val( angularA ); }
		if (HX_FIELD_EQ(inName,"angularB") ) { return hx::Val( angularB ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val B2Jacobian_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"linearA") ) { linearA=inValue.Cast<  ::box2D::common::math::B2Vec2 >(); return inValue; }
		if (HX_FIELD_EQ(inName,"linearB") ) { linearB=inValue.Cast<  ::box2D::common::math::B2Vec2 >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"angularA") ) { angularA=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"angularB") ) { angularB=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void B2Jacobian_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("linearA","\xbc","\x56","\xa7","\x1f"));
	outFields->push(HX_HCSTRING("angularA","\x1f","\x57","\xa7","\x5e"));
	outFields->push(HX_HCSTRING("linearB","\xbd","\x56","\xa7","\x1f"));
	outFields->push(HX_HCSTRING("angularB","\x20","\x57","\xa7","\x5e"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo B2Jacobian_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::box2D::common::math::B2Vec2*/ ,(int)offsetof(B2Jacobian_obj,linearA),HX_HCSTRING("linearA","\xbc","\x56","\xa7","\x1f")},
	{hx::fsFloat,(int)offsetof(B2Jacobian_obj,angularA),HX_HCSTRING("angularA","\x1f","\x57","\xa7","\x5e")},
	{hx::fsObject /*::box2D::common::math::B2Vec2*/ ,(int)offsetof(B2Jacobian_obj,linearB),HX_HCSTRING("linearB","\xbd","\x56","\xa7","\x1f")},
	{hx::fsFloat,(int)offsetof(B2Jacobian_obj,angularB),HX_HCSTRING("angularB","\x20","\x57","\xa7","\x5e")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *B2Jacobian_obj_sStaticStorageInfo = 0;
#endif

static ::String B2Jacobian_obj_sMemberFields[] = {
	HX_HCSTRING("linearA","\xbc","\x56","\xa7","\x1f"),
	HX_HCSTRING("angularA","\x1f","\x57","\xa7","\x5e"),
	HX_HCSTRING("linearB","\xbd","\x56","\xa7","\x1f"),
	HX_HCSTRING("angularB","\x20","\x57","\xa7","\x5e"),
	HX_HCSTRING("setZero","\xea","\x4f","\x75","\x16"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("compute","\x77","\x47","\x78","\x83"),
	::String(null()) };

static void B2Jacobian_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(B2Jacobian_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void B2Jacobian_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(B2Jacobian_obj::__mClass,"__mClass");
};

#endif

hx::Class B2Jacobian_obj::__mClass;

void B2Jacobian_obj::__register()
{
	hx::Object *dummy = new B2Jacobian_obj;
	B2Jacobian_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("box2D.dynamics.joints.B2Jacobian","\xa3","\x92","\x6f","\xe7");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = B2Jacobian_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(B2Jacobian_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< B2Jacobian_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = B2Jacobian_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = B2Jacobian_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = B2Jacobian_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace box2D
} // end namespace dynamics
} // end namespace joints
