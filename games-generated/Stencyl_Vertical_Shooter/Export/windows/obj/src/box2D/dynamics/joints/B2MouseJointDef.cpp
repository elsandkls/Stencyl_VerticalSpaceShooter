// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_box2D_common_math_B2Vec2
#include <box2D/common/math/B2Vec2.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2JointDef
#include <box2D/dynamics/joints/B2JointDef.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2MouseJointDef
#include <box2D/dynamics/joints/B2MouseJointDef.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b32b2c0a950ab075_33_new,"box2D.dynamics.joints.B2MouseJointDef","new",0x081615c6,"box2D.dynamics.joints.B2MouseJointDef.new","box2D/dynamics/joints/B2MouseJointDef.hx",33,0x22a124cb)
namespace box2D{
namespace dynamics{
namespace joints{

void B2MouseJointDef_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_b32b2c0a950ab075_33_new)
HXLINE(  34)		super::__construct();
HXLINE(  35)		this->target =  ::box2D::common::math::B2Vec2_obj::__alloc( HX_CTX ,null(),null());
HXLINE(  37)		this->type = (int)5;
HXLINE(  38)		this->maxForce = ((Float)0.0);
HXLINE(  39)		this->frequencyHz = ((Float)5.0);
HXLINE(  40)		this->dampingRatio = ((Float)0.7);
            	}

Dynamic B2MouseJointDef_obj::__CreateEmpty() { return new B2MouseJointDef_obj; }

void *B2MouseJointDef_obj::_hx_vtable = 0;

Dynamic B2MouseJointDef_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< B2MouseJointDef_obj > _hx_result = new B2MouseJointDef_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool B2MouseJointDef_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x45593985) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x45593985;
	} else {
		return inClassId==(int)0x4b18bab6;
	}
}


hx::ObjectPtr< B2MouseJointDef_obj > B2MouseJointDef_obj::__new() {
	hx::ObjectPtr< B2MouseJointDef_obj > __this = new B2MouseJointDef_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< B2MouseJointDef_obj > B2MouseJointDef_obj::__alloc(hx::Ctx *_hx_ctx) {
	B2MouseJointDef_obj *__this = (B2MouseJointDef_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(B2MouseJointDef_obj), true, "box2D.dynamics.joints.B2MouseJointDef"));
	*(void **)__this = B2MouseJointDef_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

B2MouseJointDef_obj::B2MouseJointDef_obj()
{
}

void B2MouseJointDef_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(B2MouseJointDef);
	HX_MARK_MEMBER_NAME(target,"target");
	HX_MARK_MEMBER_NAME(maxForce,"maxForce");
	HX_MARK_MEMBER_NAME(frequencyHz,"frequencyHz");
	HX_MARK_MEMBER_NAME(dampingRatio,"dampingRatio");
	 ::box2D::dynamics::joints::B2JointDef_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void B2MouseJointDef_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(target,"target");
	HX_VISIT_MEMBER_NAME(maxForce,"maxForce");
	HX_VISIT_MEMBER_NAME(frequencyHz,"frequencyHz");
	HX_VISIT_MEMBER_NAME(dampingRatio,"dampingRatio");
	 ::box2D::dynamics::joints::B2JointDef_obj::__Visit(HX_VISIT_ARG);
}

hx::Val B2MouseJointDef_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"target") ) { return hx::Val( target ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"maxForce") ) { return hx::Val( maxForce ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"frequencyHz") ) { return hx::Val( frequencyHz ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"dampingRatio") ) { return hx::Val( dampingRatio ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val B2MouseJointDef_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"target") ) { target=inValue.Cast<  ::box2D::common::math::B2Vec2 >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"maxForce") ) { maxForce=inValue.Cast< Float >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"frequencyHz") ) { frequencyHz=inValue.Cast< Float >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"dampingRatio") ) { dampingRatio=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void B2MouseJointDef_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("target","\x51","\xf3","\xec","\x86"));
	outFields->push(HX_HCSTRING("maxForce","\xa7","\x04","\xb2","\xae"));
	outFields->push(HX_HCSTRING("frequencyHz","\xce","\xa0","\x85","\x6d"));
	outFields->push(HX_HCSTRING("dampingRatio","\xe9","\x14","\x5e","\xa6"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo B2MouseJointDef_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::box2D::common::math::B2Vec2*/ ,(int)offsetof(B2MouseJointDef_obj,target),HX_HCSTRING("target","\x51","\xf3","\xec","\x86")},
	{hx::fsFloat,(int)offsetof(B2MouseJointDef_obj,maxForce),HX_HCSTRING("maxForce","\xa7","\x04","\xb2","\xae")},
	{hx::fsFloat,(int)offsetof(B2MouseJointDef_obj,frequencyHz),HX_HCSTRING("frequencyHz","\xce","\xa0","\x85","\x6d")},
	{hx::fsFloat,(int)offsetof(B2MouseJointDef_obj,dampingRatio),HX_HCSTRING("dampingRatio","\xe9","\x14","\x5e","\xa6")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *B2MouseJointDef_obj_sStaticStorageInfo = 0;
#endif

static ::String B2MouseJointDef_obj_sMemberFields[] = {
	HX_HCSTRING("target","\x51","\xf3","\xec","\x86"),
	HX_HCSTRING("maxForce","\xa7","\x04","\xb2","\xae"),
	HX_HCSTRING("frequencyHz","\xce","\xa0","\x85","\x6d"),
	HX_HCSTRING("dampingRatio","\xe9","\x14","\x5e","\xa6"),
	::String(null()) };

static void B2MouseJointDef_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(B2MouseJointDef_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void B2MouseJointDef_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(B2MouseJointDef_obj::__mClass,"__mClass");
};

#endif

hx::Class B2MouseJointDef_obj::__mClass;

void B2MouseJointDef_obj::__register()
{
	hx::Object *dummy = new B2MouseJointDef_obj;
	B2MouseJointDef_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("box2D.dynamics.joints.B2MouseJointDef","\xd4","\x7a","\xa2","\xfc");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = B2MouseJointDef_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(B2MouseJointDef_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< B2MouseJointDef_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = B2MouseJointDef_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = B2MouseJointDef_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = B2MouseJointDef_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace box2D
} // end namespace dynamics
} // end namespace joints
