// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_box2D_dynamics_B2Body
#include <box2D/dynamics/B2Body.h>
#endif
#ifndef INCLUDED_box2D_dynamics_joints_B2JointDef
#include <box2D/dynamics/joints/B2JointDef.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_33556c3f8fffe6c2_33_new,"box2D.dynamics.joints.B2JointDef","new",0x00ceae99,"box2D.dynamics.joints.B2JointDef.new","box2D/dynamics/joints/B2JointDef.hx",33,0x01b6e236)
HX_LOCAL_STACK_FRAME(_hx_pos_33556c3f8fffe6c2_64_boot,"box2D.dynamics.joints.B2JointDef","boot",0xac2317d9,"box2D.dynamics.joints.B2JointDef.boot","box2D/dynamics/joints/B2JointDef.hx",64,0x01b6e236)
namespace box2D{
namespace dynamics{
namespace joints{

void B2JointDef_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_33556c3f8fffe6c2_33_new)
HXLINE(  34)		this->type = (int)0;
HXLINE(  35)		this->userData = null();
HXLINE(  36)		this->bodyA = null();
HXLINE(  37)		this->bodyB = null();
HXLINE(  38)		this->collideConnected = false;
            	}

Dynamic B2JointDef_obj::__CreateEmpty() { return new B2JointDef_obj; }

void *B2JointDef_obj::_hx_vtable = 0;

Dynamic B2JointDef_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< B2JointDef_obj > _hx_result = new B2JointDef_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool B2JointDef_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x45593985;
}

::String B2JointDef_obj::CENTER;


hx::ObjectPtr< B2JointDef_obj > B2JointDef_obj::__new() {
	hx::ObjectPtr< B2JointDef_obj > __this = new B2JointDef_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< B2JointDef_obj > B2JointDef_obj::__alloc(hx::Ctx *_hx_ctx) {
	B2JointDef_obj *__this = (B2JointDef_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(B2JointDef_obj), true, "box2D.dynamics.joints.B2JointDef"));
	*(void **)__this = B2JointDef_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

B2JointDef_obj::B2JointDef_obj()
{
}

void B2JointDef_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(B2JointDef);
	HX_MARK_MEMBER_NAME(type,"type");
	HX_MARK_MEMBER_NAME(userData,"userData");
	HX_MARK_MEMBER_NAME(bodyA,"bodyA");
	HX_MARK_MEMBER_NAME(bodyB,"bodyB");
	HX_MARK_MEMBER_NAME(collideConnected,"collideConnected");
	HX_MARK_MEMBER_NAME(ID,"ID");
	HX_MARK_MEMBER_NAME(actor1,"actor1");
	HX_MARK_MEMBER_NAME(actor2,"actor2");
	HX_MARK_END_CLASS();
}

void B2JointDef_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(type,"type");
	HX_VISIT_MEMBER_NAME(userData,"userData");
	HX_VISIT_MEMBER_NAME(bodyA,"bodyA");
	HX_VISIT_MEMBER_NAME(bodyB,"bodyB");
	HX_VISIT_MEMBER_NAME(collideConnected,"collideConnected");
	HX_VISIT_MEMBER_NAME(ID,"ID");
	HX_VISIT_MEMBER_NAME(actor1,"actor1");
	HX_VISIT_MEMBER_NAME(actor2,"actor2");
}

hx::Val B2JointDef_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"ID") ) { return hx::Val( ID ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { return hx::Val( type ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"bodyA") ) { return hx::Val( bodyA ); }
		if (HX_FIELD_EQ(inName,"bodyB") ) { return hx::Val( bodyB ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"actor1") ) { return hx::Val( actor1 ); }
		if (HX_FIELD_EQ(inName,"actor2") ) { return hx::Val( actor2 ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"userData") ) { return hx::Val( userData ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"collideConnected") ) { return hx::Val( collideConnected ); }
	}
	return super::__Field(inName,inCallProp);
}

bool B2JointDef_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"CENTER") ) { outValue = ( CENTER ); return true; }
	}
	return false;
}

hx::Val B2JointDef_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"ID") ) { ID=inValue.Cast< int >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { type=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"bodyA") ) { bodyA=inValue.Cast<  ::box2D::dynamics::B2Body >(); return inValue; }
		if (HX_FIELD_EQ(inName,"bodyB") ) { bodyB=inValue.Cast<  ::box2D::dynamics::B2Body >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"actor1") ) { actor1=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"actor2") ) { actor2=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"userData") ) { userData=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"collideConnected") ) { collideConnected=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool B2JointDef_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"CENTER") ) { CENTER=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

void B2JointDef_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("type","\xba","\xf2","\x08","\x4d"));
	outFields->push(HX_HCSTRING("userData","\x15","\x96","\x28","\x05"));
	outFields->push(HX_HCSTRING("bodyA","\x5f","\xd3","\xef","\xb6"));
	outFields->push(HX_HCSTRING("bodyB","\x60","\xd3","\xef","\xb6"));
	outFields->push(HX_HCSTRING("collideConnected","\x6b","\x33","\x9f","\x9f"));
	outFields->push(HX_HCSTRING("ID","\xdb","\x3f","\x00","\x00"));
	outFields->push(HX_HCSTRING("actor1","\x9c","\xcb","\x4a","\x16"));
	outFields->push(HX_HCSTRING("actor2","\x9d","\xcb","\x4a","\x16"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo B2JointDef_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(B2JointDef_obj,type),HX_HCSTRING("type","\xba","\xf2","\x08","\x4d")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(B2JointDef_obj,userData),HX_HCSTRING("userData","\x15","\x96","\x28","\x05")},
	{hx::fsObject /*::box2D::dynamics::B2Body*/ ,(int)offsetof(B2JointDef_obj,bodyA),HX_HCSTRING("bodyA","\x5f","\xd3","\xef","\xb6")},
	{hx::fsObject /*::box2D::dynamics::B2Body*/ ,(int)offsetof(B2JointDef_obj,bodyB),HX_HCSTRING("bodyB","\x60","\xd3","\xef","\xb6")},
	{hx::fsBool,(int)offsetof(B2JointDef_obj,collideConnected),HX_HCSTRING("collideConnected","\x6b","\x33","\x9f","\x9f")},
	{hx::fsInt,(int)offsetof(B2JointDef_obj,ID),HX_HCSTRING("ID","\xdb","\x3f","\x00","\x00")},
	{hx::fsInt,(int)offsetof(B2JointDef_obj,actor1),HX_HCSTRING("actor1","\x9c","\xcb","\x4a","\x16")},
	{hx::fsInt,(int)offsetof(B2JointDef_obj,actor2),HX_HCSTRING("actor2","\x9d","\xcb","\x4a","\x16")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo B2JointDef_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &B2JointDef_obj::CENTER,HX_HCSTRING("CENTER","\xd5","\xd1","\x5d","\xb8")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String B2JointDef_obj_sMemberFields[] = {
	HX_HCSTRING("type","\xba","\xf2","\x08","\x4d"),
	HX_HCSTRING("userData","\x15","\x96","\x28","\x05"),
	HX_HCSTRING("bodyA","\x5f","\xd3","\xef","\xb6"),
	HX_HCSTRING("bodyB","\x60","\xd3","\xef","\xb6"),
	HX_HCSTRING("collideConnected","\x6b","\x33","\x9f","\x9f"),
	HX_HCSTRING("ID","\xdb","\x3f","\x00","\x00"),
	HX_HCSTRING("actor1","\x9c","\xcb","\x4a","\x16"),
	HX_HCSTRING("actor2","\x9d","\xcb","\x4a","\x16"),
	::String(null()) };

static void B2JointDef_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(B2JointDef_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(B2JointDef_obj::CENTER,"CENTER");
};

#ifdef HXCPP_VISIT_ALLOCS
static void B2JointDef_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(B2JointDef_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(B2JointDef_obj::CENTER,"CENTER");
};

#endif

hx::Class B2JointDef_obj::__mClass;

static ::String B2JointDef_obj_sStaticFields[] = {
	HX_HCSTRING("CENTER","\xd5","\xd1","\x5d","\xb8"),
	::String(null())
};

void B2JointDef_obj::__register()
{
	hx::Object *dummy = new B2JointDef_obj;
	B2JointDef_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("box2D.dynamics.joints.B2JointDef","\x27","\x6e","\x23","\x0c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &B2JointDef_obj::__GetStatic;
	__mClass->mSetStaticField = &B2JointDef_obj::__SetStatic;
	__mClass->mMarkFunc = B2JointDef_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(B2JointDef_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(B2JointDef_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< B2JointDef_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = B2JointDef_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = B2JointDef_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = B2JointDef_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void B2JointDef_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_33556c3f8fffe6c2_64_boot)
HXDLIN(  64)		CENTER = HX_("center",d5,25,db,05);
            	}
}

} // end namespace box2D
} // end namespace dynamics
} // end namespace joints
