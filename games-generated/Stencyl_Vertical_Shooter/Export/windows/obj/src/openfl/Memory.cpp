// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_openfl_Memory
#include <openfl/Memory.h>
#endif
#ifndef INCLUDED_openfl_utils_ByteArrayData
#include <openfl/utils/ByteArrayData.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataInput
#include <openfl/utils/IDataInput.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataOutput
#include <openfl/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_openfl_utils__ByteArray_ByteArray_Impl_
#include <openfl/utils/_ByteArray/ByteArray_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_20__setPositionTemporarily,"openfl.Memory","_setPositionTemporarily",0x2a841813,"openfl.Memory._setPositionTemporarily","openfl/Memory.hx",20,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_36_getByte,"openfl.Memory","getByte",0xd720eb8f,"openfl.Memory.getByte","openfl/Memory.hx",36,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_47_getDouble,"openfl.Memory","getDouble",0x9d3a6758,"openfl.Memory.getDouble","openfl/Memory.hx",47,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_45_getDouble,"openfl.Memory","getDouble",0x9d3a6758,"openfl.Memory.getDouble","openfl/Memory.hx",45,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_60_getFloat,"openfl.Memory","getFloat",0xaaabef35,"openfl.Memory.getFloat","openfl/Memory.hx",60,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_58_getFloat,"openfl.Memory","getFloat",0xaaabef35,"openfl.Memory.getFloat","openfl/Memory.hx",58,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_73_getI32,"openfl.Memory","getI32",0x92c73aa1,"openfl.Memory.getI32","openfl/Memory.hx",73,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_71_getI32,"openfl.Memory","getI32",0x92c73aa1,"openfl.Memory.getI32","openfl/Memory.hx",71,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_86_getUI16,"openfl.Memory","getUI16",0xe38b52a0,"openfl.Memory.getUI16","openfl/Memory.hx",86,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_84_getUI16,"openfl.Memory","getUI16",0xe38b52a0,"openfl.Memory.getUI16","openfl/Memory.hx",84,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_93_select,"openfl.Memory","select",0x59db434b,"openfl.Memory.select","openfl/Memory.hx",93,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_105_setByte,"openfl.Memory","setByte",0xca227c9b,"openfl.Memory.setByte","openfl/Memory.hx",105,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_116_setDouble,"openfl.Memory","setDouble",0x808b5364,"openfl.Memory.setDouble","openfl/Memory.hx",116,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_114_setDouble,"openfl.Memory","setDouble",0x808b5364,"openfl.Memory.setDouble","openfl/Memory.hx",114,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_129_setFloat,"openfl.Memory","setFloat",0x590948a9,"openfl.Memory.setFloat","openfl/Memory.hx",129,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_127_setFloat,"openfl.Memory","setFloat",0x590948a9,"openfl.Memory.setFloat","openfl/Memory.hx",127,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_142_setI16,"openfl.Memory","setI16",0x5f0f8d5b,"openfl.Memory.setI16","openfl/Memory.hx",142,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_140_setI16,"openfl.Memory","setI16",0x5f0f8d5b,"openfl.Memory.setI16","openfl/Memory.hx",140,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_155_setI32,"openfl.Memory","setI32",0x5f0f8f15,"openfl.Memory.setI32","openfl/Memory.hx",155,0x3e66e7be)
HX_LOCAL_STACK_FRAME(_hx_pos_e658821a19ff5dd0_153_setI32,"openfl.Memory","setI32",0x5f0f8f15,"openfl.Memory.setI32","openfl/Memory.hx",153,0x3e66e7be)
namespace openfl{

void Memory_obj::__construct() { }

Dynamic Memory_obj::__CreateEmpty() { return new Memory_obj; }

void *Memory_obj::_hx_vtable = 0;

Dynamic Memory_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Memory_obj > _hx_result = new Memory_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Memory_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x73997571;
}

 ::openfl::utils::ByteArrayData Memory_obj::gcRef;

int Memory_obj::len;

 ::Dynamic Memory_obj::_setPositionTemporarily(int position, ::Dynamic action){
            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_20__setPositionTemporarily)
HXLINE(  22)		int oldPosition = ::openfl::Memory_obj::gcRef->position;
HXLINE(  23)		::openfl::Memory_obj::gcRef->position = position;
HXLINE(  24)		 ::Dynamic value = action();
HXLINE(  25)		::openfl::Memory_obj::gcRef->position = oldPosition;
HXLINE(  27)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Memory_obj,_setPositionTemporarily,return )

int Memory_obj::getByte(int addr){
            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_36_getByte)
HXDLIN(  36)		return ::openfl::Memory_obj::gcRef->b->__get(addr);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Memory_obj,getByte,return )

Float Memory_obj::getDouble(int addr){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		Float _hx_run(){
            			HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_47_getDouble)
HXLINE(  47)			return ::openfl::Memory_obj::gcRef->readDouble();
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_45_getDouble)
HXDLIN(  45)		return ( (Float)(::openfl::Memory_obj::_setPositionTemporarily(addr, ::Dynamic(new _hx_Closure_0()))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Memory_obj,getDouble,return )

Float Memory_obj::getFloat(int addr){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		Float _hx_run(){
            			HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_60_getFloat)
HXLINE(  60)			return ::openfl::Memory_obj::gcRef->readFloat();
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_58_getFloat)
HXDLIN(  58)		return ( (Float)(::openfl::Memory_obj::_setPositionTemporarily(addr, ::Dynamic(new _hx_Closure_0()))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Memory_obj,getFloat,return )

int Memory_obj::getI32(int addr){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		int _hx_run(){
            			HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_73_getI32)
HXLINE(  73)			return ::openfl::Memory_obj::gcRef->readInt();
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_71_getI32)
HXDLIN(  71)		return ( (int)(::openfl::Memory_obj::_setPositionTemporarily(addr, ::Dynamic(new _hx_Closure_0()))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Memory_obj,getI32,return )

int Memory_obj::getUI16(int addr){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		int _hx_run(){
            			HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_86_getUI16)
HXLINE(  86)			return ::openfl::Memory_obj::gcRef->readUnsignedShort();
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_84_getUI16)
HXDLIN(  84)		return ( (int)(::openfl::Memory_obj::_setPositionTemporarily(addr, ::Dynamic(new _hx_Closure_0()))) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Memory_obj,getUI16,return )

void Memory_obj::select( ::openfl::utils::ByteArrayData inBytes){
            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_93_select)
HXLINE(  95)		::openfl::Memory_obj::gcRef = inBytes;
HXLINE(  96)		int _hx_tmp;
HXDLIN(  96)		if (hx::IsNotNull( inBytes )) {
HXLINE(  96)			_hx_tmp = ::openfl::utils::_ByteArray::ByteArray_Impl__obj::get_length(inBytes);
            		}
            		else {
HXLINE(  96)			_hx_tmp = (int)0;
            		}
HXDLIN(  96)		::openfl::Memory_obj::len = _hx_tmp;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Memory_obj,select,(void))

void Memory_obj::setByte(int addr,int v){
            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_105_setByte)
HXDLIN( 105)		 ::openfl::utils::ByteArrayData this1 = ::openfl::Memory_obj::gcRef;
HXDLIN( 105)		this1->_hx___resize((addr + (int)1));
HXDLIN( 105)		this1->b[addr] = v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Memory_obj,setByte,(void))

void Memory_obj::setDouble(int addr,Float v){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,Float,v) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_116_setDouble)
HXLINE( 116)			::openfl::Memory_obj::gcRef->writeDouble(v);
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_114_setDouble)
HXDLIN( 114)		::openfl::Memory_obj::_setPositionTemporarily(addr, ::Dynamic(new _hx_Closure_0(v)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Memory_obj,setDouble,(void))

void Memory_obj::setFloat(int addr,Float v){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,Float,v) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_129_setFloat)
HXLINE( 129)			::openfl::Memory_obj::gcRef->writeFloat(v);
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_127_setFloat)
HXDLIN( 127)		::openfl::Memory_obj::_setPositionTemporarily(addr, ::Dynamic(new _hx_Closure_0(v)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Memory_obj,setFloat,(void))

void Memory_obj::setI16(int addr,int v){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,int,v) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_142_setI16)
HXLINE( 142)			::openfl::Memory_obj::gcRef->writeShort(v);
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_140_setI16)
HXDLIN( 140)		::openfl::Memory_obj::_setPositionTemporarily(addr, ::Dynamic(new _hx_Closure_0(v)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Memory_obj,setI16,(void))

void Memory_obj::setI32(int addr,int v){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0,int,v) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_155_setI32)
HXLINE( 155)			::openfl::Memory_obj::gcRef->writeInt(v);
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_e658821a19ff5dd0_153_setI32)
HXDLIN( 153)		::openfl::Memory_obj::_setPositionTemporarily(addr, ::Dynamic(new _hx_Closure_0(v)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Memory_obj,setI32,(void))


Memory_obj::Memory_obj()
{
}

bool Memory_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"len") ) { outValue = ( len ); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"gcRef") ) { outValue = ( gcRef ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"getI32") ) { outValue = getI32_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"select") ) { outValue = select_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setI16") ) { outValue = setI16_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setI32") ) { outValue = setI32_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getByte") ) { outValue = getByte_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getUI16") ) { outValue = getUI16_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setByte") ) { outValue = setByte_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getFloat") ) { outValue = getFloat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setFloat") ) { outValue = setFloat_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"getDouble") ) { outValue = getDouble_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"setDouble") ) { outValue = setDouble_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"_setPositionTemporarily") ) { outValue = _setPositionTemporarily_dyn(); return true; }
	}
	return false;
}

bool Memory_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"len") ) { len=ioValue.Cast< int >(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"gcRef") ) { gcRef=ioValue.Cast<  ::openfl::utils::ByteArrayData >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Memory_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Memory_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::openfl::utils::ByteArrayData*/ ,(void *) &Memory_obj::gcRef,HX_HCSTRING("gcRef","\x97","\x70","\xf4","\x8f")},
	{hx::fsInt,(void *) &Memory_obj::len,HX_HCSTRING("len","\xd5","\x4b","\x52","\x00")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Memory_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Memory_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Memory_obj::gcRef,"gcRef");
	HX_MARK_MEMBER_NAME(Memory_obj::len,"len");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Memory_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Memory_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Memory_obj::gcRef,"gcRef");
	HX_VISIT_MEMBER_NAME(Memory_obj::len,"len");
};

#endif

hx::Class Memory_obj::__mClass;

static ::String Memory_obj_sStaticFields[] = {
	HX_HCSTRING("gcRef","\x97","\x70","\xf4","\x8f"),
	HX_HCSTRING("len","\xd5","\x4b","\x52","\x00"),
	HX_HCSTRING("_setPositionTemporarily","\x42","\x89","\x02","\xed"),
	HX_HCSTRING("getByte","\xbe","\xce","\xa5","\x13"),
	HX_HCSTRING("getDouble","\x47","\xb4","\x21","\xaf"),
	HX_HCSTRING("getFloat","\x26","\xd5","\x6d","\x62"),
	HX_HCSTRING("getI32","\x52","\x12","\x1f","\xa3"),
	HX_HCSTRING("getUI16","\xcf","\x35","\x10","\x20"),
	HX_HCSTRING("select","\xfc","\x1a","\x33","\x6a"),
	HX_HCSTRING("setByte","\xca","\x5f","\xa7","\x06"),
	HX_HCSTRING("setDouble","\x53","\xa0","\x72","\x92"),
	HX_HCSTRING("setFloat","\x9a","\x2e","\xcb","\x10"),
	HX_HCSTRING("setI16","\x0c","\x65","\x67","\x6f"),
	HX_HCSTRING("setI32","\xc6","\x66","\x67","\x6f"),
	::String(null())
};

void Memory_obj::__register()
{
	hx::Object *dummy = new Memory_obj;
	Memory_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl.Memory","\x3f","\xc4","\x9d","\x59");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Memory_obj::__GetStatic;
	__mClass->mSetStaticField = &Memory_obj::__SetStatic;
	__mClass->mMarkFunc = Memory_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Memory_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Memory_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Memory_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Memory_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Memory_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
