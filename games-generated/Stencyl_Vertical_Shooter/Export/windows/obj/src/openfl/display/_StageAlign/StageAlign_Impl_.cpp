// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display__StageAlign_StageAlign_Impl_
#include <openfl/display/_StageAlign/StageAlign_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_9f809a2b617ac4f8_54_fromString,"openfl.display._StageAlign.StageAlign_Impl_","fromString",0x4e30c8b0,"openfl.display._StageAlign.StageAlign_Impl_.fromString","openfl/display/StageAlign.hx",54,0x49ee790b)
HX_LOCAL_STACK_FRAME(_hx_pos_9f809a2b617ac4f8_73_toString,"openfl.display._StageAlign.StageAlign_Impl_","toString",0xe3319c41,"openfl.display._StageAlign.StageAlign_Impl_.toString","openfl/display/StageAlign.hx",73,0x49ee790b)
HX_LOCAL_STACK_FRAME(_hx_pos_9f809a2b617ac4f8_14_boot,"openfl.display._StageAlign.StageAlign_Impl_","boot",0xfaa1a147,"openfl.display._StageAlign.StageAlign_Impl_.boot","openfl/display/StageAlign.hx",14,0x49ee790b)
HX_LOCAL_STACK_FRAME(_hx_pos_9f809a2b617ac4f8_19_boot,"openfl.display._StageAlign.StageAlign_Impl_","boot",0xfaa1a147,"openfl.display._StageAlign.StageAlign_Impl_.boot","openfl/display/StageAlign.hx",19,0x49ee790b)
HX_LOCAL_STACK_FRAME(_hx_pos_9f809a2b617ac4f8_24_boot,"openfl.display._StageAlign.StageAlign_Impl_","boot",0xfaa1a147,"openfl.display._StageAlign.StageAlign_Impl_.boot","openfl/display/StageAlign.hx",24,0x49ee790b)
HX_LOCAL_STACK_FRAME(_hx_pos_9f809a2b617ac4f8_29_boot,"openfl.display._StageAlign.StageAlign_Impl_","boot",0xfaa1a147,"openfl.display._StageAlign.StageAlign_Impl_.boot","openfl/display/StageAlign.hx",29,0x49ee790b)
HX_LOCAL_STACK_FRAME(_hx_pos_9f809a2b617ac4f8_34_boot,"openfl.display._StageAlign.StageAlign_Impl_","boot",0xfaa1a147,"openfl.display._StageAlign.StageAlign_Impl_.boot","openfl/display/StageAlign.hx",34,0x49ee790b)
HX_LOCAL_STACK_FRAME(_hx_pos_9f809a2b617ac4f8_39_boot,"openfl.display._StageAlign.StageAlign_Impl_","boot",0xfaa1a147,"openfl.display._StageAlign.StageAlign_Impl_.boot","openfl/display/StageAlign.hx",39,0x49ee790b)
HX_LOCAL_STACK_FRAME(_hx_pos_9f809a2b617ac4f8_44_boot,"openfl.display._StageAlign.StageAlign_Impl_","boot",0xfaa1a147,"openfl.display._StageAlign.StageAlign_Impl_.boot","openfl/display/StageAlign.hx",44,0x49ee790b)
HX_LOCAL_STACK_FRAME(_hx_pos_9f809a2b617ac4f8_49_boot,"openfl.display._StageAlign.StageAlign_Impl_","boot",0xfaa1a147,"openfl.display._StageAlign.StageAlign_Impl_.boot","openfl/display/StageAlign.hx",49,0x49ee790b)
namespace openfl{
namespace display{
namespace _StageAlign{

void StageAlign_Impl__obj::__construct() { }

Dynamic StageAlign_Impl__obj::__CreateEmpty() { return new StageAlign_Impl__obj; }

void *StageAlign_Impl__obj::_hx_vtable = 0;

Dynamic StageAlign_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StageAlign_Impl__obj > _hx_result = new StageAlign_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StageAlign_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x43ce735b;
}

 ::Dynamic StageAlign_Impl__obj::BOTTOM;

 ::Dynamic StageAlign_Impl__obj::BOTTOM_LEFT;

 ::Dynamic StageAlign_Impl__obj::BOTTOM_RIGHT;

 ::Dynamic StageAlign_Impl__obj::LEFT;

 ::Dynamic StageAlign_Impl__obj::RIGHT;

 ::Dynamic StageAlign_Impl__obj::TOP;

 ::Dynamic StageAlign_Impl__obj::TOP_LEFT;

 ::Dynamic StageAlign_Impl__obj::TOP_RIGHT;

 ::Dynamic StageAlign_Impl__obj::fromString(::String value){
            	HX_STACKFRAME(&_hx_pos_9f809a2b617ac4f8_54_fromString)
HXDLIN(  54)		::String _hx_switch_0 = value;
            		if (  (_hx_switch_0==HX_("bottom",eb,e6,78,65)) ){
HXLINE(  56)			return (int)0;
HXDLIN(  56)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("bottomLeft",92,6c,97,2c)) ){
HXLINE(  57)			return (int)1;
HXDLIN(  57)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("bottomRight",f1,a0,f4,4e)) ){
HXLINE(  58)			return (int)2;
HXDLIN(  58)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("left",07,08,b0,47)) ){
HXLINE(  59)			return (int)3;
HXDLIN(  59)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("right",dc,0b,64,e9)) ){
HXLINE(  60)			return (int)4;
HXDLIN(  60)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("top",95,66,58,00)) ){
HXLINE(  61)			return (int)5;
HXDLIN(  61)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("topLeft",3c,09,c1,e8)) ){
HXLINE(  62)			return (int)6;
HXDLIN(  62)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("topRight",07,19,34,37)) ){
HXLINE(  63)			return (int)7;
HXDLIN(  63)			goto _hx_goto_0;
            		}
            		/* default */{
HXLINE(  64)			return null();
            		}
            		_hx_goto_0:;
HXLINE(  54)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StageAlign_Impl__obj,fromString,return )

::String StageAlign_Impl__obj::toString(int value){
            	HX_STACKFRAME(&_hx_pos_9f809a2b617ac4f8_73_toString)
HXDLIN(  73)		switch((int)(value)){
            			case (int)0: {
HXLINE(  75)				return HX_("bottom",eb,e6,78,65);
            			}
            			break;
            			case (int)1: {
HXLINE(  76)				return HX_("bottomLeft",92,6c,97,2c);
            			}
            			break;
            			case (int)2: {
HXLINE(  77)				return HX_("bottomRight",f1,a0,f4,4e);
            			}
            			break;
            			case (int)3: {
HXLINE(  78)				return HX_("left",07,08,b0,47);
            			}
            			break;
            			case (int)4: {
HXLINE(  79)				return HX_("right",dc,0b,64,e9);
            			}
            			break;
            			case (int)5: {
HXLINE(  80)				return HX_("top",95,66,58,00);
            			}
            			break;
            			case (int)6: {
HXLINE(  81)				return HX_("topLeft",3c,09,c1,e8);
            			}
            			break;
            			case (int)7: {
HXLINE(  82)				return HX_("topRight",07,19,34,37);
            			}
            			break;
            			default:{
HXLINE(  83)				return null();
            			}
            		}
HXLINE(  73)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StageAlign_Impl__obj,toString,return )


StageAlign_Impl__obj::StageAlign_Impl__obj()
{
}

bool StageAlign_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *StageAlign_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo StageAlign_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &StageAlign_Impl__obj::BOTTOM,HX_HCSTRING("BOTTOM","\xeb","\x92","\xfb","\x17")},
	{hx::fsObject /*Dynamic*/ ,(void *) &StageAlign_Impl__obj::BOTTOM_LEFT,HX_HCSTRING("BOTTOM_LEFT","\x1b","\xe5","\x32","\x10")},
	{hx::fsObject /*Dynamic*/ ,(void *) &StageAlign_Impl__obj::BOTTOM_RIGHT,HX_HCSTRING("BOTTOM_RIGHT","\x28","\xa0","\x62","\x93")},
	{hx::fsObject /*Dynamic*/ ,(void *) &StageAlign_Impl__obj::LEFT,HX_HCSTRING("LEFT","\x07","\xd0","\x70","\x32")},
	{hx::fsObject /*Dynamic*/ ,(void *) &StageAlign_Impl__obj::RIGHT,HX_HCSTRING("RIGHT","\xbc","\x43","\x52","\x67")},
	{hx::fsObject /*Dynamic*/ ,(void *) &StageAlign_Impl__obj::TOP,HX_HCSTRING("TOP","\x75","\x02","\x40","\x00")},
	{hx::fsObject /*Dynamic*/ ,(void *) &StageAlign_Impl__obj::TOP_LEFT,HX_HCSTRING("TOP_LEFT","\x51","\xe1","\xbb","\x7b")},
	{hx::fsObject /*Dynamic*/ ,(void *) &StageAlign_Impl__obj::TOP_RIGHT,HX_HCSTRING("TOP_RIGHT","\x32","\x53","\xb6","\x3f")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void StageAlign_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StageAlign_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(StageAlign_Impl__obj::BOTTOM,"BOTTOM");
	HX_MARK_MEMBER_NAME(StageAlign_Impl__obj::BOTTOM_LEFT,"BOTTOM_LEFT");
	HX_MARK_MEMBER_NAME(StageAlign_Impl__obj::BOTTOM_RIGHT,"BOTTOM_RIGHT");
	HX_MARK_MEMBER_NAME(StageAlign_Impl__obj::LEFT,"LEFT");
	HX_MARK_MEMBER_NAME(StageAlign_Impl__obj::RIGHT,"RIGHT");
	HX_MARK_MEMBER_NAME(StageAlign_Impl__obj::TOP,"TOP");
	HX_MARK_MEMBER_NAME(StageAlign_Impl__obj::TOP_LEFT,"TOP_LEFT");
	HX_MARK_MEMBER_NAME(StageAlign_Impl__obj::TOP_RIGHT,"TOP_RIGHT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StageAlign_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StageAlign_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(StageAlign_Impl__obj::BOTTOM,"BOTTOM");
	HX_VISIT_MEMBER_NAME(StageAlign_Impl__obj::BOTTOM_LEFT,"BOTTOM_LEFT");
	HX_VISIT_MEMBER_NAME(StageAlign_Impl__obj::BOTTOM_RIGHT,"BOTTOM_RIGHT");
	HX_VISIT_MEMBER_NAME(StageAlign_Impl__obj::LEFT,"LEFT");
	HX_VISIT_MEMBER_NAME(StageAlign_Impl__obj::RIGHT,"RIGHT");
	HX_VISIT_MEMBER_NAME(StageAlign_Impl__obj::TOP,"TOP");
	HX_VISIT_MEMBER_NAME(StageAlign_Impl__obj::TOP_LEFT,"TOP_LEFT");
	HX_VISIT_MEMBER_NAME(StageAlign_Impl__obj::TOP_RIGHT,"TOP_RIGHT");
};

#endif

hx::Class StageAlign_Impl__obj::__mClass;

static ::String StageAlign_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("BOTTOM","\xeb","\x92","\xfb","\x17"),
	HX_HCSTRING("BOTTOM_LEFT","\x1b","\xe5","\x32","\x10"),
	HX_HCSTRING("BOTTOM_RIGHT","\x28","\xa0","\x62","\x93"),
	HX_HCSTRING("LEFT","\x07","\xd0","\x70","\x32"),
	HX_HCSTRING("RIGHT","\xbc","\x43","\x52","\x67"),
	HX_HCSTRING("TOP","\x75","\x02","\x40","\x00"),
	HX_HCSTRING("TOP_LEFT","\x51","\xe1","\xbb","\x7b"),
	HX_HCSTRING("TOP_RIGHT","\x32","\x53","\xb6","\x3f"),
	HX_HCSTRING("fromString","\xdb","\x2d","\x74","\x54"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null())
};

void StageAlign_Impl__obj::__register()
{
	hx::Object *dummy = new StageAlign_Impl__obj;
	StageAlign_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl.display._StageAlign.StageAlign_Impl_","\x79","\x5b","\xcd","\xd6");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &StageAlign_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = StageAlign_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(StageAlign_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< StageAlign_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StageAlign_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StageAlign_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StageAlign_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void StageAlign_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_9f809a2b617ac4f8_14_boot)
HXDLIN(  14)		BOTTOM = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_9f809a2b617ac4f8_19_boot)
HXDLIN(  19)		BOTTOM_LEFT = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_9f809a2b617ac4f8_24_boot)
HXDLIN(  24)		BOTTOM_RIGHT = (int)2;
            	}
{
            	HX_STACKFRAME(&_hx_pos_9f809a2b617ac4f8_29_boot)
HXDLIN(  29)		LEFT = (int)3;
            	}
{
            	HX_STACKFRAME(&_hx_pos_9f809a2b617ac4f8_34_boot)
HXDLIN(  34)		RIGHT = (int)4;
            	}
{
            	HX_STACKFRAME(&_hx_pos_9f809a2b617ac4f8_39_boot)
HXDLIN(  39)		TOP = (int)5;
            	}
{
            	HX_STACKFRAME(&_hx_pos_9f809a2b617ac4f8_44_boot)
HXDLIN(  44)		TOP_LEFT = (int)6;
            	}
{
            	HX_STACKFRAME(&_hx_pos_9f809a2b617ac4f8_49_boot)
HXDLIN(  49)		TOP_RIGHT = (int)7;
            	}
}

} // end namespace openfl
} // end namespace display
} // end namespace _StageAlign
