// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_lime_ui_MouseCursor
#include <lime/ui/MouseCursor.h>
#endif
#ifndef INCLUDED_openfl_ui__MouseCursor_MouseCursor_Impl_
#include <openfl/ui/_MouseCursor/MouseCursor_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_30_fromLimeCursor,"openfl.ui._MouseCursor.MouseCursor_Impl_","fromLimeCursor",0x6bf8a63e,"openfl.ui._MouseCursor.MouseCursor_Impl_.fromLimeCursor","openfl/ui/MouseCursor.hx",30,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_53_toLimeCursor,"openfl.ui._MouseCursor.MouseCursor_Impl_","toLimeCursor",0xdd84694f,"openfl.ui._MouseCursor.MouseCursor_Impl_.toLimeCursor","openfl/ui/MouseCursor.hx",53,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_11_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",11,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_12_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",12,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_13_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",13,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_14_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",14,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_15_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",15,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_17_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",17,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_18_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",18,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_19_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",19,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_20_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",20,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_21_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",21,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_22_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",22,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_23_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",23,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_24_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",24,0xebae9dff)
HX_LOCAL_STACK_FRAME(_hx_pos_5ef75db01c4e3075_25_boot,"openfl.ui._MouseCursor.MouseCursor_Impl_","boot",0x3451d35b,"openfl.ui._MouseCursor.MouseCursor_Impl_.boot","openfl/ui/MouseCursor.hx",25,0xebae9dff)
namespace openfl{
namespace ui{
namespace _MouseCursor{

void MouseCursor_Impl__obj::__construct() { }

Dynamic MouseCursor_Impl__obj::__CreateEmpty() { return new MouseCursor_Impl__obj; }

void *MouseCursor_Impl__obj::_hx_vtable = 0;

Dynamic MouseCursor_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MouseCursor_Impl__obj > _hx_result = new MouseCursor_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MouseCursor_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0a8997bb;
}

::String MouseCursor_Impl__obj::ARROW;

::String MouseCursor_Impl__obj::AUTO;

::String MouseCursor_Impl__obj::BUTTON;

::String MouseCursor_Impl__obj::HAND;

::String MouseCursor_Impl__obj::IBEAM;

::String MouseCursor_Impl__obj::_hx___CROSSHAIR;

::String MouseCursor_Impl__obj::_hx___CUSTOM;

::String MouseCursor_Impl__obj::_hx___MOVE;

::String MouseCursor_Impl__obj::_hx___RESIZE_NESW;

::String MouseCursor_Impl__obj::_hx___RESIZE_NS;

::String MouseCursor_Impl__obj::_hx___RESIZE_NWSE;

::String MouseCursor_Impl__obj::_hx___RESIZE_WE;

::String MouseCursor_Impl__obj::_hx___WAIT;

::String MouseCursor_Impl__obj::_hx___WAIT_ARROW;

::String MouseCursor_Impl__obj::fromLimeCursor( ::lime::ui::MouseCursor cursor){
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_30_fromLimeCursor)
HXDLIN(  30)		switch((int)(_hx_getEnumValueIndex(cursor))){
            			case (int)0: {
HXLINE(  32)				return HX_("arrow",c9,79,8f,25);
            			}
            			break;
            			case (int)1: {
HXLINE(  37)				return HX_("crosshair",a2,46,c8,8a);
            			}
            			break;
            			case (int)2: {
HXLINE(  33)				return HX_("auto",6f,df,76,40);
            			}
            			break;
            			case (int)3: {
HXLINE(  35)				return HX_("hand",6f,2b,08,45);
            			}
            			break;
            			case (int)4: {
HXLINE(  34)				return HX_("button",f2,61,e0,d9);
            			}
            			break;
            			case (int)5: {
HXLINE(  38)				return HX_("resize_nesw",06,ae,e9,a7);
            			}
            			break;
            			case (int)6: {
HXLINE(  39)				return HX_("resize_ns",f0,cc,f2,ab);
            			}
            			break;
            			case (int)7: {
HXLINE(  40)				return HX_("resize_nwse",86,56,f7,a7);
            			}
            			break;
            			case (int)8: {
HXLINE(  41)				return HX_("resize_we",b9,d4,f2,ab);
            			}
            			break;
            			case (int)9: {
HXLINE(  36)				return HX_("ibeam",58,ca,26,b6);
            			}
            			break;
            			case (int)10: {
HXLINE(  42)				return HX_("wait",75,5a,f2,4e);
            			}
            			break;
            			case (int)11: {
HXLINE(  43)				return HX_("waitarrow",34,17,98,4f);
            			}
            			break;
            			case (int)12: {
HXLINE(  44)				return HX_("custom",b1,87,92,3f);
            			}
            			break;
            		}
HXLINE(  30)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MouseCursor_Impl__obj,fromLimeCursor,return )

 ::lime::ui::MouseCursor MouseCursor_Impl__obj::toLimeCursor(::String cursor){
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_53_toLimeCursor)
HXDLIN(  53)		::String _hx_switch_0 = cursor;
            		if (  (_hx_switch_0==HX_("arrow",c9,79,8f,25)) ){
HXLINE(  55)			return ::lime::ui::MouseCursor_obj::ARROW_dyn();
HXDLIN(  55)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("auto",6f,df,76,40)) ){
HXLINE(  56)			return ::lime::ui::MouseCursor_obj::DEFAULT_dyn();
HXDLIN(  56)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("button",f2,61,e0,d9)) ){
HXLINE(  57)			return ::lime::ui::MouseCursor_obj::POINTER_dyn();
HXDLIN(  57)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("crosshair",a2,46,c8,8a)) ){
HXLINE(  60)			return ::lime::ui::MouseCursor_obj::CROSSHAIR_dyn();
HXDLIN(  60)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("custom",b1,87,92,3f)) ){
HXLINE(  67)			return ::lime::ui::MouseCursor_obj::CUSTOM_dyn();
HXDLIN(  67)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("hand",6f,2b,08,45)) ){
HXLINE(  58)			return ::lime::ui::MouseCursor_obj::MOVE_dyn();
HXDLIN(  58)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("ibeam",58,ca,26,b6)) ){
HXLINE(  59)			return ::lime::ui::MouseCursor_obj::TEXT_dyn();
HXDLIN(  59)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("resize_nesw",06,ae,e9,a7)) ){
HXLINE(  61)			return ::lime::ui::MouseCursor_obj::RESIZE_NESW_dyn();
HXDLIN(  61)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("resize_ns",f0,cc,f2,ab)) ){
HXLINE(  62)			return ::lime::ui::MouseCursor_obj::RESIZE_NS_dyn();
HXDLIN(  62)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("resize_nwse",86,56,f7,a7)) ){
HXLINE(  63)			return ::lime::ui::MouseCursor_obj::RESIZE_NWSE_dyn();
HXDLIN(  63)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("resize_we",b9,d4,f2,ab)) ){
HXLINE(  64)			return ::lime::ui::MouseCursor_obj::RESIZE_WE_dyn();
HXDLIN(  64)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("wait",75,5a,f2,4e)) ){
HXLINE(  65)			return ::lime::ui::MouseCursor_obj::WAIT_dyn();
HXDLIN(  65)			goto _hx_goto_1;
            		}
            		if (  (_hx_switch_0==HX_("waitarrow",34,17,98,4f)) ){
HXLINE(  66)			return ::lime::ui::MouseCursor_obj::WAIT_ARROW_dyn();
HXDLIN(  66)			goto _hx_goto_1;
            		}
            		/* default */{
HXLINE(  68)			return ::lime::ui::MouseCursor_obj::DEFAULT_dyn();
            		}
            		_hx_goto_1:;
HXLINE(  53)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MouseCursor_Impl__obj,toLimeCursor,return )


MouseCursor_Impl__obj::MouseCursor_Impl__obj()
{
}

bool MouseCursor_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 12:
		if (HX_FIELD_EQ(inName,"toLimeCursor") ) { outValue = toLimeCursor_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"fromLimeCursor") ) { outValue = fromLimeCursor_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MouseCursor_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo MouseCursor_Impl__obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &MouseCursor_Impl__obj::ARROW,HX_HCSTRING("ARROW","\xa9","\xb1","\x7d","\xa3")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::AUTO,HX_HCSTRING("AUTO","\x6f","\xa7","\x37","\x2b")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::BUTTON,HX_HCSTRING("BUTTON","\xf2","\x0d","\x63","\x8c")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::HAND,HX_HCSTRING("HAND","\x6f","\xf3","\xc8","\x2f")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::IBEAM,HX_HCSTRING("IBEAM","\x38","\x02","\x15","\x34")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___CROSSHAIR,HX_HCSTRING("__CROSSHAIR","\x62","\xff","\x4c","\xb4")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___CUSTOM,HX_HCSTRING("__CUSTOM","\xd1","\x9e","\x44","\x9a")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___MOVE,HX_HCSTRING("__MOVE","\x31","\x0e","\x1a","\xe2")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___RESIZE_NESW,HX_HCSTRING("__RESIZE_NESW","\xe6","\x8a","\x70","\x33")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___RESIZE_NS,HX_HCSTRING("__RESIZE_NS","\xd0","\xcd","\x8f","\xd5")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___RESIZE_NWSE,HX_HCSTRING("__RESIZE_NWSE","\x66","\x33","\x7e","\x33")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___RESIZE_WE,HX_HCSTRING("__RESIZE_WE","\x99","\xd5","\x8f","\xd5")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___WAIT,HX_HCSTRING("__WAIT","\x95","\x85","\xab","\xe8")},
	{hx::fsString,(void *) &MouseCursor_Impl__obj::_hx___WAIT_ARROW,HX_HCSTRING("__WAIT_ARROW","\x3f","\x5c","\x00","\xb5")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void MouseCursor_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::ARROW,"ARROW");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::AUTO,"AUTO");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::BUTTON,"BUTTON");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::HAND,"HAND");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::IBEAM,"IBEAM");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___CROSSHAIR,"__CROSSHAIR");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___CUSTOM,"__CUSTOM");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___MOVE,"__MOVE");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NESW,"__RESIZE_NESW");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NS,"__RESIZE_NS");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NWSE,"__RESIZE_NWSE");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_WE,"__RESIZE_WE");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___WAIT,"__WAIT");
	HX_MARK_MEMBER_NAME(MouseCursor_Impl__obj::_hx___WAIT_ARROW,"__WAIT_ARROW");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MouseCursor_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::ARROW,"ARROW");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::AUTO,"AUTO");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::BUTTON,"BUTTON");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::HAND,"HAND");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::IBEAM,"IBEAM");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___CROSSHAIR,"__CROSSHAIR");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___CUSTOM,"__CUSTOM");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___MOVE,"__MOVE");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NESW,"__RESIZE_NESW");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NS,"__RESIZE_NS");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_NWSE,"__RESIZE_NWSE");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___RESIZE_WE,"__RESIZE_WE");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___WAIT,"__WAIT");
	HX_VISIT_MEMBER_NAME(MouseCursor_Impl__obj::_hx___WAIT_ARROW,"__WAIT_ARROW");
};

#endif

hx::Class MouseCursor_Impl__obj::__mClass;

static ::String MouseCursor_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("ARROW","\xa9","\xb1","\x7d","\xa3"),
	HX_HCSTRING("AUTO","\x6f","\xa7","\x37","\x2b"),
	HX_HCSTRING("BUTTON","\xf2","\x0d","\x63","\x8c"),
	HX_HCSTRING("HAND","\x6f","\xf3","\xc8","\x2f"),
	HX_HCSTRING("IBEAM","\x38","\x02","\x15","\x34"),
	HX_HCSTRING("__CROSSHAIR","\x62","\xff","\x4c","\xb4"),
	HX_HCSTRING("__CUSTOM","\xd1","\x9e","\x44","\x9a"),
	HX_HCSTRING("__MOVE","\x31","\x0e","\x1a","\xe2"),
	HX_HCSTRING("__RESIZE_NESW","\xe6","\x8a","\x70","\x33"),
	HX_HCSTRING("__RESIZE_NS","\xd0","\xcd","\x8f","\xd5"),
	HX_HCSTRING("__RESIZE_NWSE","\x66","\x33","\x7e","\x33"),
	HX_HCSTRING("__RESIZE_WE","\x99","\xd5","\x8f","\xd5"),
	HX_HCSTRING("__WAIT","\x95","\x85","\xab","\xe8"),
	HX_HCSTRING("__WAIT_ARROW","\x3f","\x5c","\x00","\xb5"),
	HX_HCSTRING("fromLimeCursor","\xd5","\x69","\x8a","\xd2"),
	HX_HCSTRING("toLimeCursor","\x26","\x49","\x3d","\x7c"),
	::String(null())
};

void MouseCursor_Impl__obj::__register()
{
	hx::Object *dummy = new MouseCursor_Impl__obj;
	MouseCursor_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl.ui._MouseCursor.MouseCursor_Impl_","\xe5","\x61","\xb2","\x51");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MouseCursor_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MouseCursor_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MouseCursor_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< MouseCursor_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MouseCursor_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MouseCursor_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MouseCursor_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void MouseCursor_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_11_boot)
HXDLIN(  11)		ARROW = HX_("arrow",c9,79,8f,25);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_12_boot)
HXDLIN(  12)		AUTO = HX_("auto",6f,df,76,40);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_13_boot)
HXDLIN(  13)		BUTTON = HX_("button",f2,61,e0,d9);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_14_boot)
HXDLIN(  14)		HAND = HX_("hand",6f,2b,08,45);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_15_boot)
HXDLIN(  15)		IBEAM = HX_("ibeam",58,ca,26,b6);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_17_boot)
HXDLIN(  17)		_hx___CROSSHAIR = HX_("crosshair",a2,46,c8,8a);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_18_boot)
HXDLIN(  18)		_hx___CUSTOM = HX_("custom",b1,87,92,3f);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_19_boot)
HXDLIN(  19)		_hx___MOVE = HX_("move",11,e3,60,48);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_20_boot)
HXDLIN(  20)		_hx___RESIZE_NESW = HX_("resize_nesw",06,ae,e9,a7);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_21_boot)
HXDLIN(  21)		_hx___RESIZE_NS = HX_("resize_ns",f0,cc,f2,ab);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_22_boot)
HXDLIN(  22)		_hx___RESIZE_NWSE = HX_("resize_nwse",86,56,f7,a7);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_23_boot)
HXDLIN(  23)		_hx___RESIZE_WE = HX_("resize_we",b9,d4,f2,ab);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_24_boot)
HXDLIN(  24)		_hx___WAIT = HX_("wait",75,5a,f2,4e);
            	}
{
            	HX_STACKFRAME(&_hx_pos_5ef75db01c4e3075_25_boot)
HXDLIN(  25)		_hx___WAIT_ARROW = HX_("waitarrow",34,17,98,4f);
            	}
}

} // end namespace openfl
} // end namespace ui
} // end namespace _MouseCursor
