// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_openfl_Lib
#include <openfl/Lib.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_flash_FlashRenderer
#include <openfl/_internal/renderer/flash/FlashRenderer.h>
#endif
#ifndef INCLUDED_openfl__internal_renderer_flash_IDisplayObject
#include <openfl/_internal/renderer/flash/IDisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_MovieClip
#include <openfl/display/MovieClip.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_utils__Dictionary_Dictionary_Impl_
#include <openfl/utils/_Dictionary/Dictionary_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_98cd6b2d755c8970_17_register,"openfl._internal.renderer.flash.FlashRenderer","register",0xca9c6617,"openfl._internal.renderer.flash.FlashRenderer.register","openfl/_internal/renderer/flash/FlashRenderer.hx",17,0xe57f2184)
HX_LOCAL_STACK_FRAME(_hx_pos_98cd6b2d755c8970_34_render,"openfl._internal.renderer.flash.FlashRenderer","render",0x065f160a,"openfl._internal.renderer.flash.FlashRenderer.render","openfl/_internal/renderer/flash/FlashRenderer.hx",34,0xe57f2184)
namespace openfl{
namespace _internal{
namespace renderer{
namespace flash{

void FlashRenderer_obj::__construct() { }

Dynamic FlashRenderer_obj::__CreateEmpty() { return new FlashRenderer_obj; }

void *FlashRenderer_obj::_hx_vtable = 0;

Dynamic FlashRenderer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< FlashRenderer_obj > _hx_result = new FlashRenderer_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FlashRenderer_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x73510aee;
}

 ::haxe::ds::ObjectMap FlashRenderer_obj::instances;

void FlashRenderer_obj::_hx_register(::Dynamic renderObject){
            	HX_STACKFRAME(&_hx_pos_98cd6b2d755c8970_17_register)
HXLINE(  19)		if (hx::IsNull( ::openfl::_internal::renderer::flash::FlashRenderer_obj::instances )) {
HXLINE(  21)			::openfl::_internal::renderer::flash::FlashRenderer_obj::instances = ::openfl::utils::_Dictionary::Dictionary_Impl__obj::toObjectMap(null(),true);
HXLINE(  23)			::openfl::Lib_obj::get_current()->stage->addEventListener(HX_("enterFrame",f5,03,50,02),::openfl::_internal::renderer::flash::FlashRenderer_obj::render_dyn(),false,(int)-2147483648,null());
            		}
HXLINE(  27)		::openfl::_internal::renderer::flash::FlashRenderer_obj::instances->set(renderObject,true);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlashRenderer_obj,_hx_register,(void))

void FlashRenderer_obj::render( ::Dynamic _){
            	HX_STACKFRAME(&_hx_pos_98cd6b2d755c8970_34_render)
HXDLIN(  34)		 ::Dynamic instance = ::openfl::_internal::renderer::flash::FlashRenderer_obj::instances->keys();
HXDLIN(  34)		while(( (bool)(instance->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXDLIN(  34)			::Dynamic instance1 = instance->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)();
HXLINE(  36)			::openfl::_internal::renderer::flash::IDisplayObject_obj::_hx___renderFlash(instance1);
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlashRenderer_obj,render,(void))


FlashRenderer_obj::FlashRenderer_obj()
{
}

bool FlashRenderer_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"render") ) { outValue = render_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"register") ) { outValue = _hx_register_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"instances") ) { outValue = ( instances ); return true; }
	}
	return false;
}

bool FlashRenderer_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"instances") ) { instances=ioValue.Cast<  ::haxe::ds::ObjectMap >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *FlashRenderer_obj_sMemberStorageInfo = 0;
static hx::StaticInfo FlashRenderer_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::haxe::ds::ObjectMap*/ ,(void *) &FlashRenderer_obj::instances,HX_HCSTRING("instances","\x3e","\x83","\x1a","\x4b")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void FlashRenderer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlashRenderer_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(FlashRenderer_obj::instances,"instances");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlashRenderer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlashRenderer_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(FlashRenderer_obj::instances,"instances");
};

#endif

hx::Class FlashRenderer_obj::__mClass;

static ::String FlashRenderer_obj_sStaticFields[] = {
	HX_HCSTRING("instances","\x3e","\x83","\x1a","\x4b"),
	HX_HCSTRING("register","\x63","\xa6","\x9f","\xd0"),
	HX_HCSTRING("render","\x56","\x6b","\x29","\x05"),
	::String(null())
};

void FlashRenderer_obj::__register()
{
	hx::Object *dummy = new FlashRenderer_obj;
	FlashRenderer_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("openfl._internal.renderer.flash.FlashRenderer","\x3a","\x67","\xbe","\xec");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FlashRenderer_obj::__GetStatic;
	__mClass->mSetStaticField = &FlashRenderer_obj::__SetStatic;
	__mClass->mMarkFunc = FlashRenderer_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(FlashRenderer_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< FlashRenderer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlashRenderer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlashRenderer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlashRenderer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
} // end namespace flash
