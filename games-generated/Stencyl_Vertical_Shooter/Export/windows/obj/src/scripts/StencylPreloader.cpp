// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app__Event_Void_Void
#include <lime/app/_Event_Void_Void.h>
#endif
#ifndef INCLUDED_openfl_Lib
#include <openfl/Lib.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_LoaderInfo
#include <openfl/display/LoaderInfo.h>
#endif
#ifndef INCLUDED_openfl_display_MovieClip
#include <openfl/display/MovieClip.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif
#ifndef INCLUDED_scripts_SplashBox
#include <scripts/SplashBox.h>
#endif
#ifndef INCLUDED_scripts_StencylPreloader
#include <scripts/StencylPreloader.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_60203bddf5b0ce9b_21_new,"scripts.StencylPreloader","new",0x8d512722,"scripts.StencylPreloader.new","scripts/StencylPreloader.hx",21,0x3238372d)
HX_LOCAL_STACK_FRAME(_hx_pos_60203bddf5b0ce9b_278_onUpdate,"scripts.StencylPreloader","onUpdate",0xe6d96686,"scripts.StencylPreloader.onUpdate","scripts/StencylPreloader.hx",278,0x3238372d)
HX_LOCAL_STACK_FRAME(_hx_pos_60203bddf5b0ce9b_301_onLoaded,"scripts.StencylPreloader","onLoaded",0xb8432882,"scripts.StencylPreloader.onLoaded","scripts/StencylPreloader.hx",301,0x3238372d)
HX_LOCAL_STACK_FRAME(_hx_pos_60203bddf5b0ce9b_314_adFinished,"scripts.StencylPreloader","adFinished",0xb878a4f3,"scripts.StencylPreloader.adFinished","scripts/StencylPreloader.hx",314,0x3238372d)
HX_LOCAL_STACK_FRAME(_hx_pos_60203bddf5b0ce9b_323_unload,"scripts.StencylPreloader","unload",0xad446f7d,"scripts.StencylPreloader.unload","scripts/StencylPreloader.hx",323,0x3238372d)
namespace scripts{

void StencylPreloader_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_60203bddf5b0ce9b_21_new)
HXLINE(  36)		this->onComplete =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  42)		super::__construct();
HXLINE(  44)		::openfl::Lib_obj::get_current()->addChild(hx::ObjectPtr<OBJ_>(this));
            	}

Dynamic StencylPreloader_obj::__CreateEmpty() { return new StencylPreloader_obj; }

void *StencylPreloader_obj::_hx_vtable = 0;

Dynamic StencylPreloader_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StencylPreloader_obj > _hx_result = new StencylPreloader_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StencylPreloader_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x19c29573) {
		if (inClassId<=(int)0x17120186) {
			if (inClassId<=(int)0x0ddfced7) {
				return inClassId==(int)0x00000001 || inClassId==(int)0x0ddfced7;
			} else {
				return inClassId==(int)0x17120186;
			}
		} else {
			return inClassId==(int)0x19c29573;
		}
	} else {
		if (inClassId<=(int)0x3f2b00af) {
			return inClassId==(int)0x1b123bf8 || inClassId==(int)0x3f2b00af;
		} else {
			return inClassId==(int)0x777847d2;
		}
	}
}

void StencylPreloader_obj::onUpdate(int loaded,int total){
            	HX_STACKFRAME(&_hx_pos_60203bddf5b0ce9b_278_onUpdate)
HXDLIN( 278)		::openfl::Lib_obj::get_current()->get_loaderInfo()->_hx___update(loaded,total);
            	}


HX_DEFINE_DYNAMIC_FUNC2(StencylPreloader_obj,onUpdate,(void))

void StencylPreloader_obj::onLoaded(){
            	HX_STACKFRAME(&_hx_pos_60203bddf5b0ce9b_301_onLoaded)
HXLINE( 303)		::openfl::Lib_obj::get_current()->get_loaderInfo()->_hx___complete();
HXLINE( 306)		this->ready = true;
HXLINE( 307)		if (!(this->adPlaying)) {
HXLINE( 309)			this->unload();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(StencylPreloader_obj,onLoaded,(void))

void StencylPreloader_obj::adFinished(){
            	HX_STACKFRAME(&_hx_pos_60203bddf5b0ce9b_314_adFinished)
HXLINE( 315)		this->adPlaying = false;
HXLINE( 316)		if (this->ready) {
HXLINE( 318)			this->unload();
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(StencylPreloader_obj,adFinished,(void))

void StencylPreloader_obj::unload(){
            	HX_GC_STACKFRAME(&_hx_pos_60203bddf5b0ce9b_323_unload)
HXLINE( 324)		 ::scripts::SplashBox_obj::__alloc( HX_CTX );
HXLINE( 333)		 ::openfl::display::DisplayObjectContainer _hx_tmp = this->parent;
HXDLIN( 333)		if (hx::IsEq( _hx_tmp,::openfl::Lib_obj::get_current() )) {
HXLINE( 335)			::openfl::Lib_obj::get_current()->removeChild(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE( 338)		::openfl::Lib_obj::get_current()->stage->set_focus(null());
HXLINE( 340)		this->onComplete->dispatch();
            	}


HX_DEFINE_DYNAMIC_FUNC0(StencylPreloader_obj,unload,(void))


hx::ObjectPtr< StencylPreloader_obj > StencylPreloader_obj::__new() {
	hx::ObjectPtr< StencylPreloader_obj > __this = new StencylPreloader_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< StencylPreloader_obj > StencylPreloader_obj::__alloc(hx::Ctx *_hx_ctx) {
	StencylPreloader_obj *__this = (StencylPreloader_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(StencylPreloader_obj), true, "scripts.StencylPreloader"));
	*(void **)__this = StencylPreloader_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

StencylPreloader_obj::StencylPreloader_obj()
{
}

void StencylPreloader_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(StencylPreloader);
	HX_MARK_MEMBER_NAME(onComplete,"onComplete");
	HX_MARK_MEMBER_NAME(adPlaying,"adPlaying");
	HX_MARK_MEMBER_NAME(ready,"ready");
	 ::openfl::display::Sprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void StencylPreloader_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(onComplete,"onComplete");
	HX_VISIT_MEMBER_NAME(adPlaying,"adPlaying");
	HX_VISIT_MEMBER_NAME(ready,"ready");
	 ::openfl::display::Sprite_obj::__Visit(HX_VISIT_ARG);
}

hx::Val StencylPreloader_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"ready") ) { return hx::Val( ready ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"unload") ) { return hx::Val( unload_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onUpdate") ) { return hx::Val( onUpdate_dyn() ); }
		if (HX_FIELD_EQ(inName,"onLoaded") ) { return hx::Val( onLoaded_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"adPlaying") ) { return hx::Val( adPlaying ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onComplete") ) { return hx::Val( onComplete ); }
		if (HX_FIELD_EQ(inName,"adFinished") ) { return hx::Val( adFinished_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val StencylPreloader_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"ready") ) { ready=inValue.Cast< bool >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"adPlaying") ) { adPlaying=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onComplete") ) { onComplete=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void StencylPreloader_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("onComplete","\xf8","\xd4","\x7e","\x5d"));
	outFields->push(HX_HCSTRING("adPlaying","\xcb","\x94","\x96","\x9c"));
	outFields->push(HX_HCSTRING("ready","\x63","\xa0","\xba","\xe6"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo StencylPreloader_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::lime::app::_Event_Void_Void*/ ,(int)offsetof(StencylPreloader_obj,onComplete),HX_HCSTRING("onComplete","\xf8","\xd4","\x7e","\x5d")},
	{hx::fsBool,(int)offsetof(StencylPreloader_obj,adPlaying),HX_HCSTRING("adPlaying","\xcb","\x94","\x96","\x9c")},
	{hx::fsBool,(int)offsetof(StencylPreloader_obj,ready),HX_HCSTRING("ready","\x63","\xa0","\xba","\xe6")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *StencylPreloader_obj_sStaticStorageInfo = 0;
#endif

static ::String StencylPreloader_obj_sMemberFields[] = {
	HX_HCSTRING("onComplete","\xf8","\xd4","\x7e","\x5d"),
	HX_HCSTRING("adPlaying","\xcb","\x94","\x96","\x9c"),
	HX_HCSTRING("ready","\x63","\xa0","\xba","\xe6"),
	HX_HCSTRING("onUpdate","\x88","\x7c","\xb2","\x66"),
	HX_HCSTRING("onLoaded","\x84","\x3e","\x1c","\x38"),
	HX_HCSTRING("adFinished","\x75","\xbf","\x44","\xb1"),
	HX_HCSTRING("unload","\xff","\xa0","\x8c","\x65"),
	::String(null()) };

static void StencylPreloader_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StencylPreloader_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StencylPreloader_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StencylPreloader_obj::__mClass,"__mClass");
};

#endif

hx::Class StencylPreloader_obj::__mClass;

void StencylPreloader_obj::__register()
{
	hx::Object *dummy = new StencylPreloader_obj;
	StencylPreloader_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("scripts.StencylPreloader","\x30","\xae","\x6a","\x15");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = StencylPreloader_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(StencylPreloader_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< StencylPreloader_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StencylPreloader_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StencylPreloader_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StencylPreloader_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace scripts
