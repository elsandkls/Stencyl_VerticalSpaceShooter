// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_tweenxcore_FloatTools
#include <tweenxcore/FloatTools.h>
#endif
#ifndef INCLUDED_tweenxcore_PointTools
#include <tweenxcore/PointTools.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5afb7681aa9da048_686_polyline,"tweenxcore.PointTools","polyline",0x3d673761,"tweenxcore.PointTools.polyline","tweenxcore/Tools.hx",686,0x7b87d9c6)
HX_LOCAL_STACK_FRAME(_hx_pos_5afb7681aa9da048_702_bezier2,"tweenxcore.PointTools","bezier2",0x8be30f32,"tweenxcore.PointTools.bezier2","tweenxcore/Tools.hx",702,0x7b87d9c6)
HX_LOCAL_STACK_FRAME(_hx_pos_5afb7681aa9da048_708_bezier3,"tweenxcore.PointTools","bezier3",0x8be30f33,"tweenxcore.PointTools.bezier3","tweenxcore/Tools.hx",708,0x7b87d9c6)
HX_LOCAL_STACK_FRAME(_hx_pos_5afb7681aa9da048_713_bezier,"tweenxcore.PointTools","bezier",0xb973d100,"tweenxcore.PointTools.bezier","tweenxcore/Tools.hx",713,0x7b87d9c6)
HX_LOCAL_STACK_FRAME(_hx_pos_5afb7681aa9da048_728_uniformQuadraticBSpline,"tweenxcore.PointTools","uniformQuadraticBSpline",0x181a486e,"tweenxcore.PointTools.uniformQuadraticBSpline","tweenxcore/Tools.hx",728,0x7b87d9c6)
namespace tweenxcore{

void PointTools_obj::__construct() { }

Dynamic PointTools_obj::__CreateEmpty() { return new PointTools_obj; }

void *PointTools_obj::_hx_vtable = 0;

Dynamic PointTools_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< PointTools_obj > _hx_result = new PointTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PointTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0781846f;
}

void PointTools_obj::polyline( ::Dynamic outputPoint,Float rate, ::Dynamic points){
            	HX_STACKFRAME(&_hx_pos_5afb7681aa9da048_686_polyline)
HXLINE( 687)		::Array< Float > xs = ::Array_obj< Float >::__new(0);
HXLINE( 688)		::Array< Float > ys = ::Array_obj< Float >::__new(0);
HXLINE( 689)		{
HXLINE( 689)			 ::Dynamic p = points->__Field(HX_("iterator",ee,49,9a,93),hx::paccDynamic)();
HXDLIN( 689)			while(( (bool)(p->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 689)				 ::Dynamic p1 = p->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)();
HXLINE( 690)				xs->push( ::Dynamic(p1->__Field(HX_("x",78,00,00,00),hx::paccDynamic)));
HXLINE( 691)				ys->push( ::Dynamic(p1->__Field(HX_("y",79,00,00,00),hx::paccDynamic)));
            			}
            		}
HXLINE( 693)		outputPoint->__SetField(HX_("x",78,00,00,00),::tweenxcore::FloatTools_obj::polyline(rate,xs),hx::paccDynamic);
HXLINE( 694)		outputPoint->__SetField(HX_("y",79,00,00,00),::tweenxcore::FloatTools_obj::polyline(rate,ys),hx::paccDynamic);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(PointTools_obj,polyline,(void))

void PointTools_obj::bezier2( ::Dynamic outputPoint,Float rate, ::Dynamic from, ::Dynamic control, ::Dynamic to){
            	HX_STACKFRAME(&_hx_pos_5afb7681aa9da048_702_bezier2)
HXLINE( 703)		outputPoint->__SetField(HX_("x",78,00,00,00),::tweenxcore::FloatTools_obj::bezier2(rate,( (Float)(from->__Field(HX_("x",78,00,00,00),hx::paccDynamic)) ),( (Float)(control->__Field(HX_("x",78,00,00,00),hx::paccDynamic)) ),( (Float)(from->__Field(HX_("x",78,00,00,00),hx::paccDynamic)) )),hx::paccDynamic);
HXLINE( 704)		outputPoint->__SetField(HX_("y",79,00,00,00),::tweenxcore::FloatTools_obj::bezier2(rate,( (Float)(from->__Field(HX_("y",79,00,00,00),hx::paccDynamic)) ),( (Float)(control->__Field(HX_("y",79,00,00,00),hx::paccDynamic)) ),( (Float)(from->__Field(HX_("y",79,00,00,00),hx::paccDynamic)) )),hx::paccDynamic);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(PointTools_obj,bezier2,(void))

void PointTools_obj::bezier3( ::Dynamic outputPoint,Float rate, ::Dynamic from, ::Dynamic control1, ::Dynamic control2, ::Dynamic to){
            	HX_STACKFRAME(&_hx_pos_5afb7681aa9da048_708_bezier3)
HXLINE( 709)		outputPoint->__SetField(HX_("x",78,00,00,00),::tweenxcore::FloatTools_obj::bezier3(rate,( (Float)(from->__Field(HX_("x",78,00,00,00),hx::paccDynamic)) ),( (Float)(control1->__Field(HX_("x",78,00,00,00),hx::paccDynamic)) ),( (Float)(control2->__Field(HX_("x",78,00,00,00),hx::paccDynamic)) ),( (Float)(from->__Field(HX_("x",78,00,00,00),hx::paccDynamic)) )),hx::paccDynamic);
HXLINE( 710)		outputPoint->__SetField(HX_("y",79,00,00,00),::tweenxcore::FloatTools_obj::bezier3(rate,( (Float)(from->__Field(HX_("y",79,00,00,00),hx::paccDynamic)) ),( (Float)(control1->__Field(HX_("y",79,00,00,00),hx::paccDynamic)) ),( (Float)(control2->__Field(HX_("y",79,00,00,00),hx::paccDynamic)) ),( (Float)(from->__Field(HX_("y",79,00,00,00),hx::paccDynamic)) )),hx::paccDynamic);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(PointTools_obj,bezier3,(void))

void PointTools_obj::bezier( ::Dynamic outputPoint,Float rate, ::Dynamic points){
            	HX_STACKFRAME(&_hx_pos_5afb7681aa9da048_713_bezier)
HXLINE( 714)		::Array< Float > xs = ::Array_obj< Float >::__new(0);
HXLINE( 715)		::Array< Float > ys = ::Array_obj< Float >::__new(0);
HXLINE( 716)		{
HXLINE( 716)			 ::Dynamic p = points->__Field(HX_("iterator",ee,49,9a,93),hx::paccDynamic)();
HXDLIN( 716)			while(( (bool)(p->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 716)				 ::Dynamic p1 = p->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)();
HXLINE( 717)				xs->push( ::Dynamic(p1->__Field(HX_("x",78,00,00,00),hx::paccDynamic)));
HXLINE( 718)				ys->push( ::Dynamic(p1->__Field(HX_("y",79,00,00,00),hx::paccDynamic)));
            			}
            		}
HXLINE( 720)		outputPoint->__SetField(HX_("x",78,00,00,00),::tweenxcore::FloatTools_obj::bezier(rate,xs),hx::paccDynamic);
HXLINE( 721)		outputPoint->__SetField(HX_("y",79,00,00,00),::tweenxcore::FloatTools_obj::bezier(rate,ys),hx::paccDynamic);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(PointTools_obj,bezier,(void))

void PointTools_obj::uniformQuadraticBSpline( ::Dynamic outputPoint,Float rate, ::Dynamic points){
            	HX_STACKFRAME(&_hx_pos_5afb7681aa9da048_728_uniformQuadraticBSpline)
HXLINE( 729)		::Array< Float > xs = ::Array_obj< Float >::__new(0);
HXLINE( 730)		::Array< Float > ys = ::Array_obj< Float >::__new(0);
HXLINE( 731)		{
HXLINE( 731)			 ::Dynamic p = points->__Field(HX_("iterator",ee,49,9a,93),hx::paccDynamic)();
HXDLIN( 731)			while(( (bool)(p->__Field(HX_("hasNext",6d,a5,46,18),hx::paccDynamic)()) )){
HXLINE( 731)				 ::Dynamic p1 = p->__Field(HX_("next",f3,84,02,49),hx::paccDynamic)();
HXLINE( 732)				xs->push( ::Dynamic(p1->__Field(HX_("x",78,00,00,00),hx::paccDynamic)));
HXLINE( 733)				ys->push( ::Dynamic(p1->__Field(HX_("y",79,00,00,00),hx::paccDynamic)));
            			}
            		}
HXLINE( 735)		outputPoint->__SetField(HX_("x",78,00,00,00),::tweenxcore::FloatTools_obj::uniformQuadraticBSpline(rate,xs),hx::paccDynamic);
HXLINE( 736)		outputPoint->__SetField(HX_("y",79,00,00,00),::tweenxcore::FloatTools_obj::uniformQuadraticBSpline(rate,ys),hx::paccDynamic);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(PointTools_obj,uniformQuadraticBSpline,(void))


PointTools_obj::PointTools_obj()
{
}

bool PointTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"bezier") ) { outValue = bezier_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"bezier2") ) { outValue = bezier2_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bezier3") ) { outValue = bezier3_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"polyline") ) { outValue = polyline_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"uniformQuadraticBSpline") ) { outValue = uniformQuadraticBSpline_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *PointTools_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *PointTools_obj_sStaticStorageInfo = 0;
#endif

static void PointTools_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(PointTools_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void PointTools_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(PointTools_obj::__mClass,"__mClass");
};

#endif

hx::Class PointTools_obj::__mClass;

static ::String PointTools_obj_sStaticFields[] = {
	HX_HCSTRING("polyline","\x40","\xac","\x9a","\x2f"),
	HX_HCSTRING("bezier2","\x33","\x1b","\xda","\xd1"),
	HX_HCSTRING("bezier3","\x34","\x1b","\xda","\xd1"),
	HX_HCSTRING("bezier","\x1f","\x00","\x66","\xa7"),
	HX_HCSTRING("uniformQuadraticBSpline","\x6f","\x26","\xdd","\xec"),
	::String(null())
};

void PointTools_obj::__register()
{
	hx::Object *dummy = new PointTools_obj;
	PointTools_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("tweenxcore.PointTools","\x6d","\xbd","\xa9","\x16");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &PointTools_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = PointTools_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(PointTools_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< PointTools_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = PointTools_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PointTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PointTools_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace tweenxcore
