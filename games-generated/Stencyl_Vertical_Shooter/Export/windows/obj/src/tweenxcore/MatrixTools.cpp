// Generated by Haxe 3.4.7
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_tweenxcore_MatrixTools
#include <tweenxcore/MatrixTools.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_9688fd4b963c91c3_745_createSimilarityTransform,"tweenxcore.MatrixTools","createSimilarityTransform",0x826e6297,"tweenxcore.MatrixTools.createSimilarityTransform","tweenxcore/Tools.hx",745,0x7b87d9c6)
namespace tweenxcore{

void MatrixTools_obj::__construct() { }

Dynamic MatrixTools_obj::__CreateEmpty() { return new MatrixTools_obj; }

void *MatrixTools_obj::_hx_vtable = 0;

Dynamic MatrixTools_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MatrixTools_obj > _hx_result = new MatrixTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MatrixTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2105964a;
}

void MatrixTools_obj::createSimilarityTransform( ::Dynamic outputMatrix,Float fromX,Float fromY,Float toX,Float toY){
            	HX_STACKFRAME(&_hx_pos_9688fd4b963c91c3_745_createSimilarityTransform)
HXLINE( 746)		Float dx = (toX - fromX);
HXLINE( 747)		Float dy = (toY - fromY);
HXLINE( 748)		Float rot = ::Math_obj::atan2(dy,dx);
HXLINE( 749)		Float d = ::Math_obj::sqrt(((dx * dx) + (dy * dy)));
HXLINE( 751)		outputMatrix->__SetField(HX_("a",61,00,00,00),(d * ::Math_obj::cos(rot)),hx::paccDynamic);
HXLINE( 752)		outputMatrix->__SetField(HX_("b",62,00,00,00),(d * ::Math_obj::sin(rot)),hx::paccDynamic);
HXLINE( 753)		outputMatrix->__SetField(HX_("c",63,00,00,00),(-(d) * ::Math_obj::sin(rot)),hx::paccDynamic);
HXLINE( 754)		outputMatrix->__SetField(HX_("d",64,00,00,00),(d * ::Math_obj::cos(rot)),hx::paccDynamic);
HXLINE( 755)		outputMatrix->__SetField(HX_("tx",84,65,00,00),fromX,hx::paccDynamic);
HXLINE( 756)		outputMatrix->__SetField(HX_("ty",85,65,00,00),fromY,hx::paccDynamic);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(MatrixTools_obj,createSimilarityTransform,(void))


MatrixTools_obj::MatrixTools_obj()
{
}

bool MatrixTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 25:
		if (HX_FIELD_EQ(inName,"createSimilarityTransform") ) { outValue = createSimilarityTransform_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MatrixTools_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *MatrixTools_obj_sStaticStorageInfo = 0;
#endif

static void MatrixTools_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MatrixTools_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MatrixTools_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MatrixTools_obj::__mClass,"__mClass");
};

#endif

hx::Class MatrixTools_obj::__mClass;

static ::String MatrixTools_obj_sStaticFields[] = {
	HX_HCSTRING("createSimilarityTransform","\x6d","\x5e","\x37","\x05"),
	::String(null())
};

void MatrixTools_obj::__register()
{
	hx::Object *dummy = new MatrixTools_obj;
	MatrixTools_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("tweenxcore.MatrixTools","\x18","\xf8","\xf4","\xbb");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MatrixTools_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MatrixTools_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MatrixTools_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< MatrixTools_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MatrixTools_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MatrixTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MatrixTools_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace tweenxcore
