// Generated by Haxe 3.4.7
#ifndef INCLUDED_RoxGestureEvent
#define INCLUDED_RoxGestureEvent

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
HX_DECLARE_CLASS0(RoxGestureAgent)
HX_DECLARE_CLASS0(RoxGestureEvent)
HX_DECLARE_CLASS2(openfl,events,Event)



class HXCPP_CLASS_ATTRIBUTES RoxGestureEvent_obj : public  ::openfl::events::Event_obj
{
	public:
		typedef  ::openfl::events::Event_obj super;
		typedef RoxGestureEvent_obj OBJ_;
		RoxGestureEvent_obj();

	public:
		enum { _hx_ClassId = 0x5eb52fc0 };

		void __construct(::String type, ::Dynamic __o_bubbles, ::Dynamic __o_cancelable,Float inLocalX,Float inLocalY,Float inStageX,Float inStageY, ::Dynamic __o_inTouchPointId, ::RoxGestureAgent inAgent, ::Dynamic inExtra);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="RoxGestureEvent")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"RoxGestureEvent"); }
		static hx::ObjectPtr< RoxGestureEvent_obj > __new(::String type, ::Dynamic __o_bubbles, ::Dynamic __o_cancelable,Float inLocalX,Float inLocalY,Float inStageX,Float inStageY, ::Dynamic __o_inTouchPointId, ::RoxGestureAgent inAgent, ::Dynamic inExtra);
		static hx::ObjectPtr< RoxGestureEvent_obj > __alloc(hx::Ctx *_hx_ctx,::String type, ::Dynamic __o_bubbles, ::Dynamic __o_cancelable,Float inLocalX,Float inLocalY,Float inStageX,Float inStageY, ::Dynamic __o_inTouchPointId, ::RoxGestureAgent inAgent, ::Dynamic inExtra);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~RoxGestureEvent_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("RoxGestureEvent","\x6c","\xff","\x44","\xf2"); }

		static void __boot();
		static ::String TOUCH_BEGIN;
		static ::String TOUCH_END;
		static ::String TOUCH_MOVE;
		static ::String TOUCH_OVER;
		static ::String TOUCH_OUT;
		static ::String TOUCH_ROLL_OVER;
		static ::String TOUCH_ROLL_OUT;
		static ::String TOUCH_TAP;
		static ::String GESTURE_TAP;
		static ::String GESTURE_LONG_PRESS;
		static ::String GESTURE_PAN;
		static ::String GESTURE_SWIPE;
		static ::String GESTURE_BEGIN;
		static ::String GESTURE_PINCH;
		static ::String GESTURE_ROTATION;
		static ::String GESTURE_END;
		Float localX;
		Float localY;
		Float stageX;
		Float stageY;
		int touchPointID;
		 ::RoxGestureAgent agent;
		 ::Dynamic extra;
		virtual ::String toString();

};


#endif /* INCLUDED_RoxGestureEvent */ 
