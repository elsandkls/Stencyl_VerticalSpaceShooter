// Generated by Haxe 3.4.7
#ifndef INCLUDED_cloner_MapCloner
#define INCLUDED_cloner_MapCloner

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(cloner,Cloner)
HX_DECLARE_CLASS1(cloner,MapCloner)
HX_DECLARE_CLASS1(haxe,IMap)

namespace cloner{


class HXCPP_CLASS_ATTRIBUTES MapCloner_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef MapCloner_obj OBJ_;
		MapCloner_obj();

	public:
		enum { _hx_ClassId = 0x0ea38afc };

		void __construct( ::cloner::Cloner cloner1,hx::Class type);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="cloner.MapCloner")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"cloner.MapCloner"); }
		static hx::ObjectPtr< MapCloner_obj > __new( ::cloner::Cloner cloner1,hx::Class type);
		static hx::ObjectPtr< MapCloner_obj > __alloc(hx::Ctx *_hx_ctx, ::cloner::Cloner cloner1,hx::Class type);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MapCloner_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MapCloner","\x11","\x1a","\x00","\x93"); }

		 ::cloner::Cloner cloner;
		hx::Class type;
		::cpp::VirtualArray noArgs;
		::Dynamic clone(::Dynamic inValue);
		::Dynamic clone_dyn();

};

} // end namespace cloner

#endif /* INCLUDED_cloner_MapCloner */ 
