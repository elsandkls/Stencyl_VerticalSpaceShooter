// Generated by Haxe 3.4.7
#ifndef INCLUDED_tweenxcore_PointTools
#define INCLUDED_tweenxcore_PointTools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(tweenxcore,PointTools)

namespace tweenxcore{


class HXCPP_CLASS_ATTRIBUTES PointTools_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef PointTools_obj OBJ_;
		PointTools_obj();

	public:
		enum { _hx_ClassId = 0x0781846f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="tweenxcore.PointTools")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"tweenxcore.PointTools"); }

		hx::ObjectPtr< PointTools_obj > __new() {
			hx::ObjectPtr< PointTools_obj > __this = new PointTools_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< PointTools_obj > __alloc(hx::Ctx *_hx_ctx) {
			PointTools_obj *__this = (PointTools_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(PointTools_obj), false, "tweenxcore.PointTools"));
			*(void **)__this = PointTools_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~PointTools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("PointTools","\xcb","\xaf","\x9d","\xea"); }

		static void polyline( ::Dynamic outputPoint,Float rate, ::Dynamic points);
		static ::Dynamic polyline_dyn();

		static void bezier2( ::Dynamic outputPoint,Float rate, ::Dynamic from, ::Dynamic control, ::Dynamic to);
		static ::Dynamic bezier2_dyn();

		static void bezier3( ::Dynamic outputPoint,Float rate, ::Dynamic from, ::Dynamic control1, ::Dynamic control2, ::Dynamic to);
		static ::Dynamic bezier3_dyn();

		static void bezier( ::Dynamic outputPoint,Float rate, ::Dynamic points);
		static ::Dynamic bezier_dyn();

		static void uniformQuadraticBSpline( ::Dynamic outputPoint,Float rate, ::Dynamic points);
		static ::Dynamic uniformQuadraticBSpline_dyn();

};

} // end namespace tweenxcore

#endif /* INCLUDED_tweenxcore_PointTools */ 
