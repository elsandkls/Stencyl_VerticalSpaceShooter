// Generated by Haxe 3.4.7
#ifndef INCLUDED_de_polygonal_ds_tools_NativeArrayTools
#define INCLUDED_de_polygonal_ds_tools_NativeArrayTools

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(de,polygonal,ds,tools,NativeArrayTools)

namespace de{
namespace polygonal{
namespace ds{
namespace tools{


class HXCPP_CLASS_ATTRIBUTES NativeArrayTools_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef NativeArrayTools_obj OBJ_;
		NativeArrayTools_obj();

	public:
		enum { _hx_ClassId = 0x061d66a5 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="de.polygonal.ds.tools.NativeArrayTools")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"de.polygonal.ds.tools.NativeArrayTools"); }

		hx::ObjectPtr< NativeArrayTools_obj > __new() {
			hx::ObjectPtr< NativeArrayTools_obj > __this = new NativeArrayTools_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< NativeArrayTools_obj > __alloc(hx::Ctx *_hx_ctx) {
			NativeArrayTools_obj *__this = (NativeArrayTools_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(NativeArrayTools_obj), false, "de.polygonal.ds.tools.NativeArrayTools"));
			*(void **)__this = NativeArrayTools_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~NativeArrayTools_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("NativeArrayTools","\x59","\xd6","\x8a","\x21"); }

		static ::cpp::VirtualArray alloc(int len);
		static ::Dynamic alloc_dyn();

		static  ::Dynamic get(::cpp::VirtualArray src,int index);
		static ::Dynamic get_dyn();

		static void set(::cpp::VirtualArray dst,int index, ::Dynamic val);
		static ::Dynamic set_dyn();

		static int size(::cpp::VirtualArray a);
		static ::Dynamic size_dyn();

		static ::cpp::VirtualArray toArray(::cpp::VirtualArray src,int first,int len,::cpp::VirtualArray dst);
		static ::Dynamic toArray_dyn();

		static ::cpp::VirtualArray ofArray(::cpp::VirtualArray src);
		static ::Dynamic ofArray_dyn();

		static void blit(::cpp::VirtualArray src,int srcPos,::cpp::VirtualArray dst,int dstPos,int n);
		static ::Dynamic blit_dyn();

		static ::cpp::VirtualArray copy(::cpp::VirtualArray src);
		static ::Dynamic copy_dyn();

		static ::cpp::VirtualArray zero(::cpp::VirtualArray dst,hx::Null< int >  first,hx::Null< int >  n);
		static ::Dynamic zero_dyn();

		static ::cpp::VirtualArray init(::cpp::VirtualArray a, ::Dynamic val,hx::Null< int >  first,hx::Null< int >  n);
		static ::Dynamic init_dyn();

		static ::cpp::VirtualArray nullify(::cpp::VirtualArray a,hx::Null< int >  first,hx::Null< int >  n);
		static ::Dynamic nullify_dyn();

		static int binarySearchCmp(::cpp::VirtualArray a, ::Dynamic val,int min,int max, ::Dynamic cmp);
		static ::Dynamic binarySearchCmp_dyn();

		static int binarySearchf(::Array< Float > a,Float val,int min,int max);
		static ::Dynamic binarySearchf_dyn();

		static int binarySearchi(::Array< int > a,int val,int min,int max);
		static ::Dynamic binarySearchi_dyn();

};

} // end namespace de
} // end namespace polygonal
} // end namespace ds
} // end namespace tools

#endif /* INCLUDED_de_polygonal_ds_tools_NativeArrayTools */ 
