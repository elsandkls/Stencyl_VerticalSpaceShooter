// Generated by Haxe 3.4.7
#ifndef INCLUDED_de_polygonal_ds_tools_GrowthRate
#define INCLUDED_de_polygonal_ds_tools_GrowthRate

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(de,polygonal,ds,tools,GrowthRate)

namespace de{
namespace polygonal{
namespace ds{
namespace tools{


class HXCPP_CLASS_ATTRIBUTES GrowthRate_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef GrowthRate_obj OBJ_;
		GrowthRate_obj();

	public:
		enum { _hx_ClassId = 0x0a695bcf };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="de.polygonal.ds.tools.GrowthRate")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"de.polygonal.ds.tools.GrowthRate"); }

		hx::ObjectPtr< GrowthRate_obj > __new() {
			hx::ObjectPtr< GrowthRate_obj > __this = new GrowthRate_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< GrowthRate_obj > __alloc(hx::Ctx *_hx_ctx) {
			GrowthRate_obj *__this = (GrowthRate_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(GrowthRate_obj), false, "de.polygonal.ds.tools.GrowthRate"));
			*(void **)__this = GrowthRate_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GrowthRate_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("GrowthRate","\xe7","\x5e","\x11","\xdf"); }

		static void __boot();
		static int FIXED;
		static int MILD;
		static int NORMAL;
		static int DOUBLE;
		static int compute(int rate,int capacity);
		static ::Dynamic compute_dyn();

};

} // end namespace de
} // end namespace polygonal
} // end namespace ds
} // end namespace tools

#endif /* INCLUDED_de_polygonal_ds_tools_GrowthRate */ 
