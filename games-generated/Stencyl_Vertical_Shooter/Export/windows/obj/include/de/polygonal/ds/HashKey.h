// Generated by Haxe 3.4.7
#ifndef INCLUDED_de_polygonal_ds_HashKey
#define INCLUDED_de_polygonal_ds_HashKey

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(de,polygonal,ds,HashKey)

namespace de{
namespace polygonal{
namespace ds{


class HXCPP_CLASS_ATTRIBUTES HashKey_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef HashKey_obj OBJ_;
		HashKey_obj();

	public:
		enum { _hx_ClassId = 0x105bdfca };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="de.polygonal.ds.HashKey")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"de.polygonal.ds.HashKey"); }

		hx::ObjectPtr< HashKey_obj > __new() {
			hx::ObjectPtr< HashKey_obj > __this = new HashKey_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< HashKey_obj > __alloc(hx::Ctx *_hx_ctx) {
			HashKey_obj *__this = (HashKey_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(HashKey_obj), false, "de.polygonal.ds.HashKey"));
			*(void **)__this = HashKey_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~HashKey_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("HashKey","\x51","\x8e","\xb3","\xf6"); }

		static int _counter;
		static int next();
		static ::Dynamic next_dyn();

};

} // end namespace de
} // end namespace polygonal
} // end namespace ds

#endif /* INCLUDED_de_polygonal_ds_HashKey */ 
