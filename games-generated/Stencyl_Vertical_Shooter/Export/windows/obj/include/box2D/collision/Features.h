// Generated by Haxe 3.4.7
#ifndef INCLUDED_box2D_collision_Features
#define INCLUDED_box2D_collision_Features

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(box2D,collision,B2ContactID)
HX_DECLARE_CLASS2(box2D,collision,Features)

namespace box2D{
namespace collision{


class HXCPP_CLASS_ATTRIBUTES Features_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Features_obj OBJ_;
		Features_obj();

	public:
		enum { _hx_ClassId = 0x0a746e7e };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="box2D.collision.Features")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"box2D.collision.Features"); }
		static hx::ObjectPtr< Features_obj > __new();
		static hx::ObjectPtr< Features_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Features_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Features","\x1d","\x29","\x89","\xec"); }

		int get_referenceEdge();
		::Dynamic get_referenceEdge_dyn();

		int set_referenceEdge(int value);
		::Dynamic set_referenceEdge_dyn();

		int _referenceEdge;
		int get_incidentEdge();
		::Dynamic get_incidentEdge_dyn();

		int set_incidentEdge(int value);
		::Dynamic set_incidentEdge_dyn();

		int _incidentEdge;
		int get_incidentVertex();
		::Dynamic get_incidentVertex_dyn();

		int set_incidentVertex(int value);
		::Dynamic set_incidentVertex_dyn();

		int _incidentVertex;
		int get_flip();
		::Dynamic get_flip_dyn();

		int set_flip(int value);
		::Dynamic set_flip_dyn();

		int _flip;
		 ::box2D::collision::B2ContactID _m_id;
};

} // end namespace box2D
} // end namespace collision

#endif /* INCLUDED_box2D_collision_Features */ 
