// Generated by Haxe 3.4.7
#ifndef INCLUDED_box2D_dynamics_contacts_EPAxis
#define INCLUDED_box2D_dynamics_contacts_EPAxis

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_3bc75ad9c2a1a86f_864_new)
HX_DECLARE_CLASS3(box2D,dynamics,contacts,EPAxis)
HX_DECLARE_CLASS3(box2D,dynamics,contacts,Type)

namespace box2D{
namespace dynamics{
namespace contacts{


class HXCPP_CLASS_ATTRIBUTES EPAxis_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef EPAxis_obj OBJ_;
		EPAxis_obj();

	public:
		enum { _hx_ClassId = 0x2150a328 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="box2D.dynamics.contacts.EPAxis")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"box2D.dynamics.contacts.EPAxis"); }

		hx::ObjectPtr< EPAxis_obj > __new() {
			hx::ObjectPtr< EPAxis_obj > __this = new EPAxis_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< EPAxis_obj > __alloc(hx::Ctx *_hx_ctx) {
			EPAxis_obj *__this = (EPAxis_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(EPAxis_obj), true, "box2D.dynamics.contacts.EPAxis"));
			*(void **)__this = EPAxis_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_3bc75ad9c2a1a86f_864_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~EPAxis_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("EPAxis","\xac","\x96","\x00","\xd2"); }

		 ::box2D::dynamics::contacts::Type type;
		int index;
		Float separation;
};

} // end namespace box2D
} // end namespace dynamics
} // end namespace contacts

#endif /* INCLUDED_box2D_dynamics_contacts_EPAxis */ 
