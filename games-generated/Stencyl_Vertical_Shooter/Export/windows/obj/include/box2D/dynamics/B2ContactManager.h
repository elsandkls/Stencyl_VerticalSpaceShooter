// Generated by Haxe 3.4.7
#ifndef INCLUDED_box2D_dynamics_B2ContactManager
#define INCLUDED_box2D_dynamics_B2ContactManager

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(box2D,collision,B2ContactPoint)
HX_DECLARE_CLASS2(box2D,collision,IBroadPhase)
HX_DECLARE_CLASS2(box2D,dynamics,B2ContactFilter)
HX_DECLARE_CLASS2(box2D,dynamics,B2ContactListener)
HX_DECLARE_CLASS2(box2D,dynamics,B2ContactManager)
HX_DECLARE_CLASS2(box2D,dynamics,B2Fixture)
HX_DECLARE_CLASS2(box2D,dynamics,B2World)
HX_DECLARE_CLASS3(box2D,dynamics,contacts,B2Contact)
HX_DECLARE_CLASS3(box2D,dynamics,contacts,B2ContactFactory)

namespace box2D{
namespace dynamics{


class HXCPP_CLASS_ATTRIBUTES B2ContactManager_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef B2ContactManager_obj OBJ_;
		B2ContactManager_obj();

	public:
		enum { _hx_ClassId = 0x0f4c6982 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="box2D.dynamics.B2ContactManager")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"box2D.dynamics.B2ContactManager"); }
		static hx::ObjectPtr< B2ContactManager_obj > __new();
		static hx::ObjectPtr< B2ContactManager_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~B2ContactManager_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("B2ContactManager","\x7d","\x35","\xee","\x85"); }

		static void __boot();
		static  ::box2D::collision::B2ContactPoint s_evalCP;
		void addPair( ::box2D::dynamics::B2Fixture fixtureA, ::box2D::dynamics::B2Fixture fixtureB);
		::Dynamic addPair_dyn();

		void findNewContacts();
		::Dynamic findNewContacts_dyn();

		void destroy( ::box2D::dynamics::contacts::B2Contact c);
		::Dynamic destroy_dyn();

		void collide();
		::Dynamic collide_dyn();

		 ::box2D::dynamics::B2World m_world;
		::Dynamic m_broadPhase;
		 ::box2D::dynamics::contacts::B2Contact m_contactList;
		int m_contactCount;
		 ::box2D::dynamics::B2ContactFilter m_contactFilter;
		 ::box2D::dynamics::B2ContactListener m_contactListener;
		 ::box2D::dynamics::contacts::B2ContactFactory m_contactFactory;
		 ::Dynamic m_allocator;
};

} // end namespace box2D
} // end namespace dynamics

#endif /* INCLUDED_box2D_dynamics_B2ContactManager */ 
