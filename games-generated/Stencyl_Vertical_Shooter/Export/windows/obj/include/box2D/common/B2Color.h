// Generated by Haxe 3.4.7
#ifndef INCLUDED_box2D_common_B2Color
#define INCLUDED_box2D_common_B2Color

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(box2D,common,B2Color)

namespace box2D{
namespace common{


class HXCPP_CLASS_ATTRIBUTES B2Color_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef B2Color_obj OBJ_;
		B2Color_obj();

	public:
		enum { _hx_ClassId = 0x0dcb7513 };

		void __construct(Float rr,Float gg,Float bb);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="box2D.common.B2Color")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"box2D.common.B2Color"); }
		static hx::ObjectPtr< B2Color_obj > __new(Float rr,Float gg,Float bb);
		static hx::ObjectPtr< B2Color_obj > __alloc(hx::Ctx *_hx_ctx,Float rr,Float gg,Float bb);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~B2Color_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("B2Color","\x93","\x89","\xea","\x93"); }

		void set(Float rr,Float gg,Float bb);
		::Dynamic set_dyn();

		Float r;
		Float g;
		Float b;
		int color;
		Float set_r(Float rr);
		::Dynamic set_r_dyn();

		Float set_g(Float gg);
		::Dynamic set_g_dyn();

		Float set_b(Float bb);
		::Dynamic set_b_dyn();

		int get_color();
		::Dynamic get_color_dyn();

		int _r;
		int _g;
		int _b;
};

} // end namespace box2D
} // end namespace common

#endif /* INCLUDED_box2D_common_B2Color */ 
