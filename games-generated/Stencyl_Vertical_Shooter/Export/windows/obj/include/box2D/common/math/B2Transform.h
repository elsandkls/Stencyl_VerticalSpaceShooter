// Generated by Haxe 3.4.7
#ifndef INCLUDED_box2D_common_math_B2Transform
#define INCLUDED_box2D_common_math_B2Transform

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(box2D,common,math,B2Mat22)
HX_DECLARE_CLASS3(box2D,common,math,B2Transform)
HX_DECLARE_CLASS3(box2D,common,math,B2Vec2)

namespace box2D{
namespace common{
namespace math{


class HXCPP_CLASS_ATTRIBUTES B2Transform_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef B2Transform_obj OBJ_;
		B2Transform_obj();

	public:
		enum { _hx_ClassId = 0x634cef94 };

		void __construct( ::box2D::common::math::B2Vec2 pos, ::box2D::common::math::B2Mat22 r);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="box2D.common.math.B2Transform")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"box2D.common.math.B2Transform"); }
		static hx::ObjectPtr< B2Transform_obj > __new( ::box2D::common::math::B2Vec2 pos, ::box2D::common::math::B2Mat22 r);
		static hx::ObjectPtr< B2Transform_obj > __alloc(hx::Ctx *_hx_ctx, ::box2D::common::math::B2Vec2 pos, ::box2D::common::math::B2Mat22 r);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~B2Transform_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("B2Transform","\x9c","\x1d","\x49","\xaf"); }

		void initialize( ::box2D::common::math::B2Vec2 pos, ::box2D::common::math::B2Mat22 r);
		::Dynamic initialize_dyn();

		void setIdentity();
		::Dynamic setIdentity_dyn();

		void set( ::box2D::common::math::B2Transform x);
		::Dynamic set_dyn();

		Float getAngle();
		::Dynamic getAngle_dyn();

		 ::box2D::common::math::B2Vec2 multiply( ::box2D::common::math::B2Vec2 v);
		::Dynamic multiply_dyn();

		 ::box2D::common::math::B2Vec2 position;
		 ::box2D::common::math::B2Mat22 R;
};

} // end namespace box2D
} // end namespace common
} // end namespace math

#endif /* INCLUDED_box2D_common_math_B2Transform */ 
