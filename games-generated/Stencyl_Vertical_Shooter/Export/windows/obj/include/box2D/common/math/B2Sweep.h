// Generated by Haxe 3.4.7
#ifndef INCLUDED_box2D_common_math_B2Sweep
#define INCLUDED_box2D_common_math_B2Sweep

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(box2D,common,math,B2Sweep)
HX_DECLARE_CLASS3(box2D,common,math,B2Transform)
HX_DECLARE_CLASS3(box2D,common,math,B2Vec2)

namespace box2D{
namespace common{
namespace math{


class HXCPP_CLASS_ATTRIBUTES B2Sweep_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef B2Sweep_obj OBJ_;
		B2Sweep_obj();

	public:
		enum { _hx_ClassId = 0x3127874c };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="box2D.common.math.B2Sweep")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"box2D.common.math.B2Sweep"); }
		static hx::ObjectPtr< B2Sweep_obj > __new();
		static hx::ObjectPtr< B2Sweep_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~B2Sweep_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("B2Sweep","\x1c","\x2e","\x98","\xcf"); }

		void set( ::box2D::common::math::B2Sweep other);
		::Dynamic set_dyn();

		 ::box2D::common::math::B2Sweep copy();
		::Dynamic copy_dyn();

		void getTransform( ::box2D::common::math::B2Transform xf,Float alpha);
		::Dynamic getTransform_dyn();

		void advance(Float t);
		::Dynamic advance_dyn();

		 ::box2D::common::math::B2Vec2 localCenter;
		 ::box2D::common::math::B2Vec2 c0;
		 ::box2D::common::math::B2Vec2 c;
		Float a0;
		Float a;
		Float t0;
};

} // end namespace box2D
} // end namespace common
} // end namespace math

#endif /* INCLUDED_box2D_common_math_B2Sweep */ 
