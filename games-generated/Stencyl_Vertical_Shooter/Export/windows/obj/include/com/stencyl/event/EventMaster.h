// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_event_EventMaster
#define INCLUDED_com_stencyl_event_EventMaster

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(com,stencyl,event,EventMaster)
HX_DECLARE_CLASS3(com,stencyl,event,StencylEvent)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,IntMap)

namespace com{
namespace stencyl{
namespace event{


class HXCPP_CLASS_ATTRIBUTES EventMaster_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef EventMaster_obj OBJ_;
		EventMaster_obj();

	public:
		enum { _hx_ClassId = 0x0a82e42d };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.event.EventMaster")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.event.EventMaster"); }
		static hx::ObjectPtr< EventMaster_obj > __new();
		static hx::ObjectPtr< EventMaster_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~EventMaster_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("EventMaster","\x3c","\x64","\xa0","\xf2"); }

		static void __boot();
		static int TYPE_ADS;
		static int TYPE_PURCHASES;
		static int TYPE_GAMECENTER;
		static int TYPE_KEYBOARD;
		 ::haxe::ds::IntMap eventTable;
		void addAdEvent( ::com::stencyl::event::StencylEvent e);
		::Dynamic addAdEvent_dyn();

		void addPurchaseEvent( ::com::stencyl::event::StencylEvent e);
		::Dynamic addPurchaseEvent_dyn();

		void addGameCenterEvent( ::com::stencyl::event::StencylEvent e);
		::Dynamic addGameCenterEvent_dyn();

		void addKeyboardEvent( ::com::stencyl::event::StencylEvent e);
		::Dynamic addKeyboardEvent_dyn();

		void clear();
		::Dynamic clear_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace event

#endif /* INCLUDED_com_stencyl_event_EventMaster */ 
