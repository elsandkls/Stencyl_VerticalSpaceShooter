// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_models__PhysicsMode_PhysicsMode_Impl_
#define INCLUDED_com_stencyl_models__PhysicsMode_PhysicsMode_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(com,stencyl,models,_PhysicsMode,PhysicsMode_Impl_)

namespace com{
namespace stencyl{
namespace models{
namespace _PhysicsMode{


class HXCPP_CLASS_ATTRIBUTES PhysicsMode_Impl__obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef PhysicsMode_Impl__obj OBJ_;
		PhysicsMode_Impl__obj();

	public:
		enum { _hx_ClassId = 0x12b43eaa };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="com.stencyl.models._PhysicsMode.PhysicsMode_Impl_")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"com.stencyl.models._PhysicsMode.PhysicsMode_Impl_"); }

		hx::ObjectPtr< PhysicsMode_Impl__obj > __new() {
			hx::ObjectPtr< PhysicsMode_Impl__obj > __this = new PhysicsMode_Impl__obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< PhysicsMode_Impl__obj > __alloc(hx::Ctx *_hx_ctx) {
			PhysicsMode_Impl__obj *__this = (PhysicsMode_Impl__obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(PhysicsMode_Impl__obj), false, "com.stencyl.models._PhysicsMode.PhysicsMode_Impl_"));
			*(void **)__this = PhysicsMode_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~PhysicsMode_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("PhysicsMode_Impl_","\xca","\x97","\xba","\xfc"); }

		static void __boot();
		static int NORMAL_PHYSICS;
		static int SIMPLE_PHYSICS;
		static int MINIMAL_PHYSICS;
		static int _new(int value);
		static ::Dynamic _new_dyn();

		static int fromInt(int value);
		static ::Dynamic fromInt_dyn();

		static int fromString(::String value);
		static ::Dynamic fromString_dyn();

		static ::String toString(int this1);
		static ::Dynamic toString_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace models
} // end namespace _PhysicsMode

#endif /* INCLUDED_com_stencyl_models__PhysicsMode_PhysicsMode_Impl_ */ 
