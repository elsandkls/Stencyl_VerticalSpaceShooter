// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_graphics_shaders_SharpenShader
#define INCLUDED_com_stencyl_graphics_shaders_SharpenShader

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_stencyl_graphics_shaders_BasicShader
#include <com/stencyl/graphics/shaders/BasicShader.h>
#endif
HX_DECLARE_CLASS4(com,stencyl,graphics,shaders,BasicShader)
HX_DECLARE_CLASS4(com,stencyl,graphics,shaders,SharpenShader)

namespace com{
namespace stencyl{
namespace graphics{
namespace shaders{


class HXCPP_CLASS_ATTRIBUTES SharpenShader_obj : public  ::com::stencyl::graphics::shaders::BasicShader_obj
{
	public:
		typedef  ::com::stencyl::graphics::shaders::BasicShader_obj super;
		typedef SharpenShader_obj OBJ_;
		SharpenShader_obj();

	public:
		enum { _hx_ClassId = 0x7c6c3ac4 };

		void __construct(hx::Null< Float >  __o_amount);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.graphics.shaders.SharpenShader")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.graphics.shaders.SharpenShader"); }
		static hx::ObjectPtr< SharpenShader_obj > __new(hx::Null< Float >  __o_amount);
		static hx::ObjectPtr< SharpenShader_obj > __alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_amount);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SharpenShader_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("SharpenShader","\x38","\x6f","\x10","\xd3"); }

		void setAmount(Float amount);
		::Dynamic setAmount_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace graphics
} // end namespace shaders

#endif /* INCLUDED_com_stencyl_graphics_shaders_SharpenShader */ 
