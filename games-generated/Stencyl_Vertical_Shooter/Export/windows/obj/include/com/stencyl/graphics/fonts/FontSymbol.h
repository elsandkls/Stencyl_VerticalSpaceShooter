// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_graphics_fonts_FontSymbol
#define INCLUDED_com_stencyl_graphics_fonts_FontSymbol

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_fbc16ca81d66e0ed_28_new)
HX_DECLARE_CLASS4(com,stencyl,graphics,fonts,FontSymbol)

namespace com{
namespace stencyl{
namespace graphics{
namespace fonts{


class HXCPP_CLASS_ATTRIBUTES FontSymbol_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef FontSymbol_obj OBJ_;
		FontSymbol_obj();

	public:
		enum { _hx_ClassId = 0x2fce0131 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="com.stencyl.graphics.fonts.FontSymbol")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"com.stencyl.graphics.fonts.FontSymbol"); }

		hx::ObjectPtr< FontSymbol_obj > __new() {
			hx::ObjectPtr< FontSymbol_obj > __this = new FontSymbol_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< FontSymbol_obj > __alloc(hx::Ctx *_hx_ctx) {
			FontSymbol_obj *__this = (FontSymbol_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FontSymbol_obj), false, "com.stencyl.graphics.fonts.FontSymbol"));
			*(void **)__this = FontSymbol_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_fbc16ca81d66e0ed_28_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FontSymbol_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("FontSymbol","\xa7","\x4a","\xe2","\x99"); }

		int xoffset;
		int yoffset;
		int xadvance;
		int tileID;
};

} // end namespace com
} // end namespace stencyl
} // end namespace graphics
} // end namespace fonts

#endif /* INCLUDED_com_stencyl_graphics_fonts_FontSymbol */ 
