// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_models_scene_layers_BackgroundLayer
#define INCLUDED_com_stencyl_models_scene_layers_BackgroundLayer

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_stencyl_models_scene_layers_RegularLayer
#include <com/stencyl/models/scene/layers/RegularLayer.h>
#endif
HX_DECLARE_CLASS3(com,stencyl,models,Background)
HX_DECLARE_CLASS3(com,stencyl,models,Resource)
HX_DECLARE_CLASS4(com,stencyl,models,background,ImageBackground)
HX_DECLARE_CLASS5(com,stencyl,models,scene,layers,BackgroundLayer)
HX_DECLARE_CLASS5(com,stencyl,models,scene,layers,RegularLayer)
HX_DECLARE_CLASS2(openfl,display,Bitmap)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace com{
namespace stencyl{
namespace models{
namespace scene{
namespace layers{


class HXCPP_CLASS_ATTRIBUTES BackgroundLayer_obj : public  ::com::stencyl::models::scene::layers::RegularLayer_obj
{
	public:
		typedef  ::com::stencyl::models::scene::layers::RegularLayer_obj super;
		typedef BackgroundLayer_obj OBJ_;
		BackgroundLayer_obj();

	public:
		enum { _hx_ClassId = 0x564cbcca };

		void __construct(int ID,::String name,int order,Float scrollFactorX,Float scrollFactorY,Float opacity, ::Dynamic blendMode,int resourceID,bool customScroll);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.models.scene.layers.BackgroundLayer")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.models.scene.layers.BackgroundLayer"); }
		static hx::ObjectPtr< BackgroundLayer_obj > __new(int ID,::String name,int order,Float scrollFactorX,Float scrollFactorY,Float opacity, ::Dynamic blendMode,int resourceID,bool customScroll);
		static hx::ObjectPtr< BackgroundLayer_obj > __alloc(hx::Ctx *_hx_ctx,int ID,::String name,int order,Float scrollFactorX,Float scrollFactorY,Float opacity, ::Dynamic blendMode,int resourceID,bool customScroll);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BackgroundLayer_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("BackgroundLayer","\xe3","\x66","\x37","\x93"); }

		 ::com::stencyl::models::background::ImageBackground model;
		 ::openfl::display::Bitmap bitmap;
		int resourceID;
		bool customScroll;
		bool isAnimated;
		int frameCount;
		int currIndex;
		Float currTime;
		int cacheIndex;
		Float cacheWidth;
		Float cacheHeight;
		 ::Dynamic bgChild;
		void load();
		::Dynamic load_dyn();

		void loadFromImg( ::openfl::display::BitmapData img,bool tiled);
		::Dynamic loadFromImg_dyn();

		void setScrollFactor(Float x,Float y);
		::Dynamic setScrollFactor_dyn();

		void setScrollSpeed(Float x,Float y);
		::Dynamic setScrollSpeed_dyn();

		void reload(int bgID);
		::Dynamic reload_dyn();

		void setImage( ::openfl::display::BitmapData bitmapData);
		::Dynamic setImage_dyn();

		void updateAnimation(Float elapsedTime);
		::Dynamic updateAnimation_dyn();

		void updatePosition(Float x,Float y,Float elapsedTime);

		 ::Dynamic getBitmap();
		::Dynamic getBitmap_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace models
} // end namespace scene
} // end namespace layers

#endif /* INCLUDED_com_stencyl_models_scene_layers_BackgroundLayer */ 
