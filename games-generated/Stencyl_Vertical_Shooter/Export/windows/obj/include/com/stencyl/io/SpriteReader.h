// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_io_SpriteReader
#define INCLUDED_com_stencyl_io_SpriteReader

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_stencyl_io_AbstractReader
#include <com/stencyl/io/AbstractReader.h>
#endif
HX_DECLARE_CLASS3(com,stencyl,io,AbstractReader)
HX_DECLARE_CLASS3(com,stencyl,io,SpriteReader)
HX_DECLARE_CLASS5(com,stencyl,io,mbs,actortype,MbsAnimation)
HX_DECLARE_CLASS3(com,stencyl,models,Resource)
HX_DECLARE_CLASS4(com,stencyl,models,actor,Animation)
HX_DECLARE_CLASS4(com,stencyl,models,actor,Sprite)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,IntMap)
HX_DECLARE_CLASS2(mbs,core,MbsObject)

namespace com{
namespace stencyl{
namespace io{


class HXCPP_CLASS_ATTRIBUTES SpriteReader_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef SpriteReader_obj OBJ_;
		SpriteReader_obj();

	public:
		enum { _hx_ClassId = 0x516c2ab9 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="com.stencyl.io.SpriteReader")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"com.stencyl.io.SpriteReader"); }
		static hx::ObjectPtr< SpriteReader_obj > __new();
		static hx::ObjectPtr< SpriteReader_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SpriteReader_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		void *_hx_getInterface(int inHash);
		::String __ToString() const { return HX_HCSTRING("SpriteReader","\x48","\x93","\x86","\x5c"); }

		bool accepts(::String type);
		::Dynamic accepts_dyn();

		 ::com::stencyl::models::Resource read( ::Dynamic obj);
		::Dynamic read_dyn();

		 ::com::stencyl::models::actor::Animation readAnimation( ::com::stencyl::io::mbs::actortype::MbsAnimation r, ::com::stencyl::models::actor::Sprite parent);
		::Dynamic readAnimation_dyn();

		 ::haxe::ds::IntMap readSimpleShapes( ::com::stencyl::io::mbs::actortype::MbsAnimation r,Float imgWidth,Float imgHeight);
		::Dynamic readSimpleShapes_dyn();

		 ::haxe::ds::IntMap readShapes( ::com::stencyl::io::mbs::actortype::MbsAnimation r,int imgWidth,int imgHeight);
		::Dynamic readShapes_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace io

#endif /* INCLUDED_com_stencyl_io_SpriteReader */ 
