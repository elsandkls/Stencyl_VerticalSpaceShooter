// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_graphics__G_TemporaryImage
#define INCLUDED_com_stencyl_graphics__G_TemporaryImage

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_dc2a2019d67c659b_682_new)
HX_DECLARE_CLASS4(com,stencyl,graphics,_G,TemporaryImage)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)

namespace com{
namespace stencyl{
namespace graphics{
namespace _G{


class HXCPP_CLASS_ATTRIBUTES TemporaryImage_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TemporaryImage_obj OBJ_;
		TemporaryImage_obj();

	public:
		enum { _hx_ClassId = 0x3bbaf12c };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.graphics._G.TemporaryImage")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.graphics._G.TemporaryImage"); }

		hx::ObjectPtr< TemporaryImage_obj > __new() {
			hx::ObjectPtr< TemporaryImage_obj > __this = new TemporaryImage_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< TemporaryImage_obj > __alloc(hx::Ctx *_hx_ctx) {
			TemporaryImage_obj *__this = (TemporaryImage_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TemporaryImage_obj), true, "com.stencyl.graphics._G.TemporaryImage"));
			*(void **)__this = TemporaryImage_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_dc2a2019d67c659b_682_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TemporaryImage_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("TemporaryImage","\x2a","\x8c","\xdd","\xf7"); }

		int lifetime;
		 ::openfl::display::BitmapData img;
};

} // end namespace com
} // end namespace stencyl
} // end namespace graphics
} // end namespace _G

#endif /* INCLUDED_com_stencyl_graphics__G_TemporaryImage */ 
