// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_behavior_BehaviorManager
#define INCLUDED_com_stencyl_behavior_BehaviorManager

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(com,stencyl,behavior,Behavior)
HX_DECLARE_CLASS3(com,stencyl,behavior,BehaviorManager)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)

namespace com{
namespace stencyl{
namespace behavior{


class HXCPP_CLASS_ATTRIBUTES BehaviorManager_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef BehaviorManager_obj OBJ_;
		BehaviorManager_obj();

	public:
		enum { _hx_ClassId = 0x07fc9cd6 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.behavior.BehaviorManager")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.behavior.BehaviorManager"); }
		static hx::ObjectPtr< BehaviorManager_obj > __new();
		static hx::ObjectPtr< BehaviorManager_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BehaviorManager_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("BehaviorManager","\xdb","\x47","\x43","\x8c"); }

		::Array< ::Dynamic> behaviors;
		 ::haxe::ds::StringMap cache;
		void destroy();
		::Dynamic destroy_dyn();

		void add( ::com::stencyl::behavior::Behavior b);
		::Dynamic add_dyn();

		bool hasBehavior(::String b);
		::Dynamic hasBehavior_dyn();

		void enableBehavior(::String b);
		::Dynamic enableBehavior_dyn();

		void disableBehavior(::String b);
		::Dynamic disableBehavior_dyn();

		bool isBehaviorEnabled(::String b);
		::Dynamic isBehaviorEnabled_dyn();

		void initScripts();
		::Dynamic initScripts_dyn();

		 ::Dynamic getAttribute(::String behaviorName,::String attributeName);
		::Dynamic getAttribute_dyn();

		void setAttribute(::String behaviorName,::String attributeName, ::Dynamic value);
		::Dynamic setAttribute_dyn();

		 ::Dynamic call(::String msg,::cpp::VirtualArray args);
		::Dynamic call_dyn();

		 ::Dynamic call2(::String behaviorName,::String msg,::cpp::VirtualArray args);
		::Dynamic call2_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace behavior

#endif /* INCLUDED_com_stencyl_behavior_BehaviorManager */ 
