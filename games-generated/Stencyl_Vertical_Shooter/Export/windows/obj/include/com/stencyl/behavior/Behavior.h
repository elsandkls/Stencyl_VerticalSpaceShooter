// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_behavior_Behavior
#define INCLUDED_com_stencyl_behavior_Behavior

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(com,stencyl,Engine)
HX_DECLARE_CLASS3(com,stencyl,behavior,Behavior)
HX_DECLARE_CLASS3(com,stencyl,behavior,Script)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)

namespace com{
namespace stencyl{
namespace behavior{


class HXCPP_CLASS_ATTRIBUTES Behavior_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Behavior_obj OBJ_;
		Behavior_obj();

	public:
		enum { _hx_ClassId = 0x4f8f95f3 };

		void __construct( ::Dynamic parent, ::com::stencyl::Engine engine,int ID,::String name,::String classname,bool enabled,bool drawable, ::haxe::ds::StringMap attributes,::String type,bool isEvent);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.behavior.Behavior")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.behavior.Behavior"); }
		static hx::ObjectPtr< Behavior_obj > __new( ::Dynamic parent, ::com::stencyl::Engine engine,int ID,::String name,::String classname,bool enabled,bool drawable, ::haxe::ds::StringMap attributes,::String type,bool isEvent);
		static hx::ObjectPtr< Behavior_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic parent, ::com::stencyl::Engine engine,int ID,::String name,::String classname,bool enabled,bool drawable, ::haxe::ds::StringMap attributes,::String type,bool isEvent);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Behavior_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Behavior","\xb2","\x4c","\x44","\xe4"); }

		 ::Dynamic parent;
		 ::com::stencyl::Engine engine;
		bool enabled;
		bool drawable;
		bool isEvent;
		int ID;
		::String name;
		::String type;
		::String classname;
		hx::Class cls;
		 ::com::stencyl::behavior::Script script;
		 ::haxe::ds::StringMap attributes;
		void initScript(hx::Null< bool >  initJustScript);
		::Dynamic initScript_dyn();

		void initAttributes();
		::Dynamic initAttributes_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace behavior

#endif /* INCLUDED_com_stencyl_behavior_Behavior */ 
