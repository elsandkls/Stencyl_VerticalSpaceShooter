// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_event_NativeListener
#define INCLUDED_com_stencyl_event_NativeListener

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(com,stencyl,event,EventMaster)
HX_DECLARE_CLASS3(com,stencyl,event,NativeListener)

namespace com{
namespace stencyl{
namespace event{


class HXCPP_CLASS_ATTRIBUTES NativeListener_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef NativeListener_obj OBJ_;
		NativeListener_obj();

	public:
		enum { _hx_ClassId = 0x64ef55fa };

		void __construct(int metaType,int type, ::Dynamic fn);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.event.NativeListener")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.event.NativeListener"); }
		static hx::ObjectPtr< NativeListener_obj > __new(int metaType,int type, ::Dynamic fn);
		static hx::ObjectPtr< NativeListener_obj > __alloc(hx::Ctx *_hx_ctx,int metaType,int type, ::Dynamic fn);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~NativeListener_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("NativeListener","\x4b","\x09","\x2c","\x52"); }

		int metaType;
		int type;
		 ::Dynamic fn;
		void checkEvents( ::com::stencyl::event::EventMaster q);
		::Dynamic checkEvents_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace event

#endif /* INCLUDED_com_stencyl_event_NativeListener */ 
