// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_io_mbs_MbsBackground
#define INCLUDED_com_stencyl_io_mbs_MbsBackground

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_stencyl_io_mbs_MbsResource
#include <com/stencyl/io/mbs/MbsResource.h>
#endif
HX_DECLARE_CLASS4(com,stencyl,io,mbs,MbsBackground)
HX_DECLARE_CLASS4(com,stencyl,io,mbs,MbsResource)
HX_DECLARE_CLASS2(mbs,core,ComposedType)
HX_DECLARE_CLASS2(mbs,core,MbsField)
HX_DECLARE_CLASS2(mbs,core,MbsObject)
HX_DECLARE_CLASS2(mbs,core,MbsType)
HX_DECLARE_CLASS2(mbs,io,MbsIO)
HX_DECLARE_CLASS2(mbs,io,MbsIntList)
HX_DECLARE_CLASS2(mbs,io,MbsList)
HX_DECLARE_CLASS2(mbs,io,MbsListBase)

namespace com{
namespace stencyl{
namespace io{
namespace mbs{


class HXCPP_CLASS_ATTRIBUTES MbsBackground_obj : public  ::com::stencyl::io::mbs::MbsResource_obj
{
	public:
		typedef  ::com::stencyl::io::mbs::MbsResource_obj super;
		typedef MbsBackground_obj OBJ_;
		MbsBackground_obj();

	public:
		enum { _hx_ClassId = 0x265d669f };

		void __construct(::Dynamic data);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.io.mbs.MbsBackground")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.io.mbs.MbsBackground"); }
		static hx::ObjectPtr< MbsBackground_obj > __new(::Dynamic data);
		static hx::ObjectPtr< MbsBackground_obj > __alloc(hx::Ctx *_hx_ctx,::Dynamic data);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MbsBackground_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MbsBackground","\xec","\x7c","\xe6","\x26"); }

		static  ::mbs::core::MbsField readableImages;
		static  ::mbs::core::MbsField durations;
		static  ::mbs::core::MbsField height;
		static  ::mbs::core::MbsField numFrames;
		static  ::mbs::core::MbsField repeats;
		static  ::mbs::core::MbsField resized;
		static  ::mbs::core::MbsField width;
		static  ::mbs::core::MbsField xParallaxFactor;
		static  ::mbs::core::MbsField xVelocity;
		static  ::mbs::core::MbsField yParallaxFactor;
		static  ::mbs::core::MbsField yVelocity;
		static  ::mbs::core::ComposedType MBS_BACKGROUND;
		static void initializeType();
		static ::Dynamic initializeType_dyn();

		static  ::mbs::io::MbsList new_MbsBackground_list(::Dynamic data);
		static ::Dynamic new_MbsBackground_list_dyn();

		 ::mbs::core::MbsType getMbsType();

		 ::mbs::io::MbsIntList _durations;
		void allocateNew();

		bool getReadableImages();
		::Dynamic getReadableImages_dyn();

		void setReadableImages(bool _val);
		::Dynamic setReadableImages_dyn();

		 ::mbs::io::MbsIntList getDurations();
		::Dynamic getDurations_dyn();

		 ::mbs::io::MbsIntList createDurations(int _length);
		::Dynamic createDurations_dyn();

		int getHeight();
		::Dynamic getHeight_dyn();

		void setHeight(int _val);
		::Dynamic setHeight_dyn();

		int getNumFrames();
		::Dynamic getNumFrames_dyn();

		void setNumFrames(int _val);
		::Dynamic setNumFrames_dyn();

		bool getRepeats();
		::Dynamic getRepeats_dyn();

		void setRepeats(bool _val);
		::Dynamic setRepeats_dyn();

		bool getResized();
		::Dynamic getResized_dyn();

		void setResized(bool _val);
		::Dynamic setResized_dyn();

		int getWidth();
		::Dynamic getWidth_dyn();

		void setWidth(int _val);
		::Dynamic setWidth_dyn();

		Float getXParallaxFactor();
		::Dynamic getXParallaxFactor_dyn();

		void setXParallaxFactor(Float _val);
		::Dynamic setXParallaxFactor_dyn();

		Float getXVelocity();
		::Dynamic getXVelocity_dyn();

		void setXVelocity(Float _val);
		::Dynamic setXVelocity_dyn();

		Float getYParallaxFactor();
		::Dynamic getYParallaxFactor_dyn();

		void setYParallaxFactor(Float _val);
		::Dynamic setYParallaxFactor_dyn();

		Float getYVelocity();
		::Dynamic getYVelocity_dyn();

		void setYVelocity(Float _val);
		::Dynamic setYVelocity_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs

#endif /* INCLUDED_com_stencyl_io_mbs_MbsBackground */ 
