// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsCircle
#define INCLUDED_com_stencyl_io_mbs_shape_MbsCircle

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_stencyl_io_mbs_shape_MbsShape
#include <com/stencyl/io/mbs/shape/MbsShape.h>
#endif
HX_DECLARE_CLASS5(com,stencyl,io,mbs,shape,MbsCircle)
HX_DECLARE_CLASS5(com,stencyl,io,mbs,shape,MbsPoint)
HX_DECLARE_CLASS5(com,stencyl,io,mbs,shape,MbsShape)
HX_DECLARE_CLASS2(mbs,core,ComposedType)
HX_DECLARE_CLASS2(mbs,core,MbsField)
HX_DECLARE_CLASS2(mbs,core,MbsObject)
HX_DECLARE_CLASS2(mbs,core,MbsType)
HX_DECLARE_CLASS2(mbs,io,MbsIO)
HX_DECLARE_CLASS2(mbs,io,MbsList)
HX_DECLARE_CLASS2(mbs,io,MbsListBase)

namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace shape{


class HXCPP_CLASS_ATTRIBUTES MbsCircle_obj : public  ::com::stencyl::io::mbs::shape::MbsShape_obj
{
	public:
		typedef  ::com::stencyl::io::mbs::shape::MbsShape_obj super;
		typedef MbsCircle_obj OBJ_;
		MbsCircle_obj();

	public:
		enum { _hx_ClassId = 0x226c8c4e };

		void __construct(::Dynamic data);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.io.mbs.shape.MbsCircle")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.io.mbs.shape.MbsCircle"); }
		static hx::ObjectPtr< MbsCircle_obj > __new(::Dynamic data);
		static hx::ObjectPtr< MbsCircle_obj > __alloc(hx::Ctx *_hx_ctx,::Dynamic data);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MbsCircle_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MbsCircle","\x0e","\x84","\xb2","\x90"); }

		static  ::mbs::core::MbsField position;
		static  ::mbs::core::MbsField radius;
		static  ::mbs::core::ComposedType MBS_CIRCLE;
		static void initializeType();
		static ::Dynamic initializeType_dyn();

		static  ::mbs::io::MbsList new_MbsCircle_list(::Dynamic data);
		static ::Dynamic new_MbsCircle_list_dyn();

		 ::mbs::core::MbsType getMbsType();

		 ::com::stencyl::io::mbs::shape::MbsPoint _position;
		void allocateNew();

		 ::com::stencyl::io::mbs::shape::MbsPoint getPosition();
		::Dynamic getPosition_dyn();

		Float getRadius();
		::Dynamic getRadius_dyn();

		void setRadius(Float _val);
		::Dynamic setRadius_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace shape

#endif /* INCLUDED_com_stencyl_io_mbs_shape_MbsCircle */ 
