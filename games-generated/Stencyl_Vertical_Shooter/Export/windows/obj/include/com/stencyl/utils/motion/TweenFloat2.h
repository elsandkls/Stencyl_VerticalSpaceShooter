// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_utils_motion_TweenFloat2
#define INCLUDED_com_stencyl_utils_motion_TweenFloat2

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_stencyl_utils_motion_TweenObject
#include <com/stencyl/utils/motion/TweenObject.h>
#endif
HX_DECLARE_CLASS4(com,stencyl,utils,motion,EasingFunction)
HX_DECLARE_CLASS4(com,stencyl,utils,motion,TweenFloat2)
HX_DECLARE_CLASS4(com,stencyl,utils,motion,TweenObject)

namespace com{
namespace stencyl{
namespace utils{
namespace motion{


class HXCPP_CLASS_ATTRIBUTES TweenFloat2_obj : public  ::com::stencyl::utils::motion::TweenObject_obj
{
	public:
		typedef  ::com::stencyl::utils::motion::TweenObject_obj super;
		typedef TweenFloat2_obj OBJ_;
		TweenFloat2_obj();

	public:
		enum { _hx_ClassId = 0x36c87685 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.utils.motion.TweenFloat2")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.utils.motion.TweenFloat2"); }
		static hx::ObjectPtr< TweenFloat2_obj > __new();
		static hx::ObjectPtr< TweenFloat2_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TweenFloat2_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("TweenFloat2","\xc1","\xfb","\xe1","\xc9"); }

		Float startValue1;
		Float endValue1;
		Float value1;
		Float startValue2;
		Float endValue2;
		Float value2;
		 ::com::stencyl::utils::motion::TweenFloat2 tween(Float startValue1,Float endValue1,Float startValue2,Float endValue2, ::com::stencyl::utils::motion::EasingFunction easing,int duration);
		::Dynamic tween_dyn();

		void updateValue();

};

} // end namespace com
} // end namespace stencyl
} // end namespace utils
} // end namespace motion

#endif /* INCLUDED_com_stencyl_utils_motion_TweenFloat2 */ 
