// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_models_Terrain
#define INCLUDED_com_stencyl_models_Terrain

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_stencyl_models_Actor
#include <com/stencyl/models/Actor.h>
#endif
HX_DECLARE_CLASS3(box2D,collision,shapes,B2Shape)
HX_DECLARE_CLASS2(com,stencyl,Engine)
HX_DECLARE_CLASS3(com,stencyl,models,Actor)
HX_DECLARE_CLASS3(com,stencyl,models,Terrain)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace com{
namespace stencyl{
namespace models{


class HXCPP_CLASS_ATTRIBUTES Terrain_obj : public  ::com::stencyl::models::Actor_obj
{
	public:
		typedef  ::com::stencyl::models::Actor_obj super;
		typedef Terrain_obj OBJ_;
		Terrain_obj();

	public:
		enum { _hx_ClassId = 0x11cd7c1c };

		void __construct( ::com::stencyl::Engine game,Float x,Float y,::Array< ::Dynamic> shapes,int groupID,hx::Null< int >  __o_fillColor);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.models.Terrain")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.models.Terrain"); }
		static hx::ObjectPtr< Terrain_obj > __new( ::com::stencyl::Engine game,Float x,Float y,::Array< ::Dynamic> shapes,int groupID,hx::Null< int >  __o_fillColor);
		static hx::ObjectPtr< Terrain_obj > __alloc(hx::Ctx *_hx_ctx, ::com::stencyl::Engine game,Float x,Float y,::Array< ::Dynamic> shapes,int groupID,hx::Null< int >  __o_fillColor);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Terrain_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Terrain","\x95","\xd3","\x68","\xf6"); }

		static void __boot();
		static int UNSET_ID;
		bool isCircle;
		int fillColor;
		 ::box2D::collision::shapes::B2Shape copy;
		Float originalWidth;
		Float originalHeight;
		Float regionWidth;
		Float regionHeight;
		void follow( ::com::stencyl::models::Actor actor);

		void resetSize();
		::Dynamic resetSize_dyn();

		void setRegionDiameter(Float diameter);
		::Dynamic setRegionDiameter_dyn();

		void setRegionSize(Float width,Float height);
		::Dynamic setRegionSize_dyn();

		void setLocation(Float x,Float y);

		Float getWidth();

		Float getHeight();

		int getFillColor();
		::Dynamic getFillColor_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace models

#endif /* INCLUDED_com_stencyl_models_Terrain */ 
