// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_utils_Assets
#define INCLUDED_com_stencyl_utils_Assets

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(com,stencyl,utils,Assets)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,media,Sound)
HX_DECLARE_CLASS2(openfl,utils,ByteArrayData)
HX_DECLARE_CLASS2(openfl,utils,IDataInput)
HX_DECLARE_CLASS2(openfl,utils,IDataOutput)

namespace com{
namespace stencyl{
namespace utils{


class HXCPP_CLASS_ATTRIBUTES Assets_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Assets_obj OBJ_;
		Assets_obj();

	public:
		enum { _hx_ClassId = 0x36439369 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="com.stencyl.utils.Assets")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"com.stencyl.utils.Assets"); }

		hx::ObjectPtr< Assets_obj > __new() {
			hx::ObjectPtr< Assets_obj > __this = new Assets_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Assets_obj > __alloc(hx::Ctx *_hx_ctx) {
			Assets_obj *__this = (Assets_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Assets_obj), false, "com.stencyl.utils.Assets"));
			*(void **)__this = Assets_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Assets_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Assets","\xa3","\xbc","\x97","\x80"); }

		static void __boot();
		static  ::haxe::ds::StringMap modifiedAssetCache;
		static  ::openfl::display::BitmapData getBitmapData(::String id,hx::Null< bool >  useCache);
		static ::Dynamic getBitmapData_dyn();

		static  ::openfl::utils::ByteArrayData getBytes(::String id);
		static ::Dynamic getBytes_dyn();

		static ::String getPath(::String id);
		static ::Dynamic getPath_dyn();

		static  ::openfl::media::Sound getSound(::String id,hx::Null< bool >  useCache);
		static ::Dynamic getSound_dyn();

		static ::String getText(::String id);
		static ::Dynamic getText_dyn();

		static void updateAsset(::String id,::String type, ::openfl::utils::ByteArrayData content, ::Dynamic callback);
		static ::Dynamic updateAsset_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace utils

#endif /* INCLUDED_com_stencyl_utils_Assets */ 
