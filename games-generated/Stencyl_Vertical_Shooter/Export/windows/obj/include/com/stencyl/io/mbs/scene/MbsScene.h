// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_io_mbs_scene_MbsScene
#define INCLUDED_com_stencyl_io_mbs_scene_MbsScene

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
HX_DECLARE_CLASS5(com,stencyl,io,mbs,scene,MbsScene)
HX_DECLARE_CLASS2(mbs,core,ComposedType)
HX_DECLARE_CLASS2(mbs,core,MbsField)
HX_DECLARE_CLASS2(mbs,core,MbsObject)
HX_DECLARE_CLASS2(mbs,core,MbsType)
HX_DECLARE_CLASS2(mbs,io,MbsDynamicList)
HX_DECLARE_CLASS2(mbs,io,MbsIO)
HX_DECLARE_CLASS2(mbs,io,MbsIntList)
HX_DECLARE_CLASS2(mbs,io,MbsList)
HX_DECLARE_CLASS2(mbs,io,MbsListBase)

namespace com{
namespace stencyl{
namespace io{
namespace mbs{
namespace scene{


class HXCPP_CLASS_ATTRIBUTES MbsScene_obj : public  ::mbs::core::MbsObject_obj
{
	public:
		typedef  ::mbs::core::MbsObject_obj super;
		typedef MbsScene_obj OBJ_;
		MbsScene_obj();

	public:
		enum { _hx_ClassId = 0x4f4c708d };

		void __construct(::Dynamic data);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.io.mbs.scene.MbsScene")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.io.mbs.scene.MbsScene"); }
		static hx::ObjectPtr< MbsScene_obj > __new(::Dynamic data);
		static hx::ObjectPtr< MbsScene_obj > __alloc(hx::Ctx *_hx_ctx,::Dynamic data);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MbsScene_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MbsScene","\x0e","\x91","\x6d","\x26"); }

		static  ::mbs::core::MbsField retainAtlases;
		static  ::mbs::core::MbsField depth;
		static  ::mbs::core::MbsField description;
		static  ::mbs::core::MbsField eventSnippetID;
		static  ::mbs::core::MbsField extendedHeight;
		static  ::mbs::core::MbsField extendedWidth;
		static  ::mbs::core::MbsField extendedX;
		static  ::mbs::core::MbsField extendedY;
		static  ::mbs::core::MbsField format;
		static  ::mbs::core::MbsField gravityX;
		static  ::mbs::core::MbsField gravityY;
		static  ::mbs::core::MbsField height;
		static  ::mbs::core::MbsField id;
		static  ::mbs::core::MbsField name;
		static  ::mbs::core::MbsField revision;
		static  ::mbs::core::MbsField savecount;
		static  ::mbs::core::MbsField tileDepth;
		static  ::mbs::core::MbsField tileHeight;
		static  ::mbs::core::MbsField tileWidth;
		static  ::mbs::core::MbsField type;
		static  ::mbs::core::MbsField width;
		static  ::mbs::core::MbsField actorInstances;
		static  ::mbs::core::MbsField atlasMembers;
		static  ::mbs::core::MbsField layers;
		static  ::mbs::core::MbsField joints;
		static  ::mbs::core::MbsField regions;
		static  ::mbs::core::MbsField snippets;
		static  ::mbs::core::MbsField terrain;
		static  ::mbs::core::MbsField terrainRegions;
		static  ::mbs::core::ComposedType MBS_SCENE;
		static void initializeType();
		static ::Dynamic initializeType_dyn();

		static  ::mbs::io::MbsList new_MbsScene_list(::Dynamic data);
		static ::Dynamic new_MbsScene_list_dyn();

		 ::mbs::core::MbsType getMbsType();

		 ::mbs::io::MbsList _actorInstances;
		 ::mbs::io::MbsIntList _atlasMembers;
		 ::mbs::io::MbsDynamicList _layers;
		 ::mbs::io::MbsDynamicList _joints;
		 ::mbs::io::MbsList _regions;
		 ::mbs::io::MbsList _snippets;
		 ::mbs::io::MbsList _terrain;
		 ::mbs::io::MbsList _terrainRegions;
		void allocateNew();
		::Dynamic allocateNew_dyn();

		bool getRetainAtlases();
		::Dynamic getRetainAtlases_dyn();

		void setRetainAtlases(bool _val);
		::Dynamic setRetainAtlases_dyn();

		int getDepth();
		::Dynamic getDepth_dyn();

		void setDepth(int _val);
		::Dynamic setDepth_dyn();

		::String getDescription();
		::Dynamic getDescription_dyn();

		void setDescription(::String _val);
		::Dynamic setDescription_dyn();

		int getEventSnippetID();
		::Dynamic getEventSnippetID_dyn();

		void setEventSnippetID(int _val);
		::Dynamic setEventSnippetID_dyn();

		int getExtendedHeight();
		::Dynamic getExtendedHeight_dyn();

		void setExtendedHeight(int _val);
		::Dynamic setExtendedHeight_dyn();

		int getExtendedWidth();
		::Dynamic getExtendedWidth_dyn();

		void setExtendedWidth(int _val);
		::Dynamic setExtendedWidth_dyn();

		int getExtendedX();
		::Dynamic getExtendedX_dyn();

		void setExtendedX(int _val);
		::Dynamic setExtendedX_dyn();

		int getExtendedY();
		::Dynamic getExtendedY_dyn();

		void setExtendedY(int _val);
		::Dynamic setExtendedY_dyn();

		::String getFormat();
		::Dynamic getFormat_dyn();

		void setFormat(::String _val);
		::Dynamic setFormat_dyn();

		Float getGravityX();
		::Dynamic getGravityX_dyn();

		void setGravityX(Float _val);
		::Dynamic setGravityX_dyn();

		Float getGravityY();
		::Dynamic getGravityY_dyn();

		void setGravityY(Float _val);
		::Dynamic setGravityY_dyn();

		int getHeight();
		::Dynamic getHeight_dyn();

		void setHeight(int _val);
		::Dynamic setHeight_dyn();

		int getId();
		::Dynamic getId_dyn();

		void setId(int _val);
		::Dynamic setId_dyn();

		::String getName();
		::Dynamic getName_dyn();

		void setName(::String _val);
		::Dynamic setName_dyn();

		::String getRevision();
		::Dynamic getRevision_dyn();

		void setRevision(::String _val);
		::Dynamic setRevision_dyn();

		int getSavecount();
		::Dynamic getSavecount_dyn();

		void setSavecount(int _val);
		::Dynamic setSavecount_dyn();

		int getTileDepth();
		::Dynamic getTileDepth_dyn();

		void setTileDepth(int _val);
		::Dynamic setTileDepth_dyn();

		int getTileHeight();
		::Dynamic getTileHeight_dyn();

		void setTileHeight(int _val);
		::Dynamic setTileHeight_dyn();

		int getTileWidth();
		::Dynamic getTileWidth_dyn();

		void setTileWidth(int _val);
		::Dynamic setTileWidth_dyn();

		::String getType();
		::Dynamic getType_dyn();

		void setType(::String _val);
		::Dynamic setType_dyn();

		int getWidth();
		::Dynamic getWidth_dyn();

		void setWidth(int _val);
		::Dynamic setWidth_dyn();

		 ::mbs::io::MbsList getActorInstances();
		::Dynamic getActorInstances_dyn();

		 ::mbs::io::MbsList createActorInstances(int _length);
		::Dynamic createActorInstances_dyn();

		 ::mbs::io::MbsIntList getAtlasMembers();
		::Dynamic getAtlasMembers_dyn();

		 ::mbs::io::MbsIntList createAtlasMembers(int _length);
		::Dynamic createAtlasMembers_dyn();

		 ::mbs::io::MbsDynamicList getLayers();
		::Dynamic getLayers_dyn();

		 ::mbs::io::MbsDynamicList createLayers(int _length);
		::Dynamic createLayers_dyn();

		 ::mbs::io::MbsDynamicList getJoints();
		::Dynamic getJoints_dyn();

		 ::mbs::io::MbsDynamicList createJoints(int _length);
		::Dynamic createJoints_dyn();

		 ::mbs::io::MbsList getRegions();
		::Dynamic getRegions_dyn();

		 ::mbs::io::MbsList createRegions(int _length);
		::Dynamic createRegions_dyn();

		 ::mbs::io::MbsList getSnippets();
		::Dynamic getSnippets_dyn();

		 ::mbs::io::MbsList createSnippets(int _length);
		::Dynamic createSnippets_dyn();

		 ::mbs::io::MbsList getTerrain();
		::Dynamic getTerrain_dyn();

		 ::mbs::io::MbsList createTerrain(int _length);
		::Dynamic createTerrain_dyn();

		 ::mbs::io::MbsList getTerrainRegions();
		::Dynamic getTerrainRegions_dyn();

		 ::mbs::io::MbsList createTerrainRegions(int _length);
		::Dynamic createTerrainRegions_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs
} // end namespace scene

#endif /* INCLUDED_com_stencyl_io_mbs_scene_MbsScene */ 
