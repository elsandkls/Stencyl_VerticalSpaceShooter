// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_models_scene_Layer
#define INCLUDED_com_stencyl_models_scene_Layer

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_stencyl_models_scene_layers_RegularLayer
#include <com/stencyl/models/scene/layers/RegularLayer.h>
#endif
HX_DECLARE_CLASS3(com,stencyl,graphics,BitmapWrapper)
HX_DECLARE_CLASS3(com,stencyl,graphics,EngineScaleUpdateListener)
HX_DECLARE_CLASS4(com,stencyl,models,scene,Layer)
HX_DECLARE_CLASS4(com,stencyl,models,scene,TileLayer)
HX_DECLARE_CLASS5(com,stencyl,models,scene,layers,RegularLayer)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace com{
namespace stencyl{
namespace models{
namespace scene{


class HXCPP_CLASS_ATTRIBUTES Layer_obj : public  ::com::stencyl::models::scene::layers::RegularLayer_obj
{
	public:
		typedef  ::com::stencyl::models::scene::layers::RegularLayer_obj super;
		typedef Layer_obj OBJ_;
		Layer_obj();

	public:
		enum { _hx_ClassId = 0x196afd3e };

		void __construct(int ID,::String name,int order,Float scrollFactorX,Float scrollFactorY,Float opacity, ::Dynamic blendMode, ::com::stencyl::models::scene::TileLayer tileLayer);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.models.scene.Layer")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.models.scene.Layer"); }
		static hx::ObjectPtr< Layer_obj > __new(int ID,::String name,int order,Float scrollFactorX,Float scrollFactorY,Float opacity, ::Dynamic blendMode, ::com::stencyl::models::scene::TileLayer tileLayer);
		static hx::ObjectPtr< Layer_obj > __alloc(hx::Ctx *_hx_ctx,int ID,::String name,int order,Float scrollFactorX,Float scrollFactorY,Float opacity, ::Dynamic blendMode, ::com::stencyl::models::scene::TileLayer tileLayer);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Layer_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Layer","\xb1","\xf1","\xed","\x02"); }

		 ::com::stencyl::models::scene::TileLayer tiles;
		 ::openfl::display::Sprite actorContainer;
		 ::openfl::display::Sprite overlay;
		::Array< ::Dynamic> attachedImages;
		bool cameraMoved;
		int cameraOldX;
		int cameraOldY;
		void updatePosition(Float x,Float y,Float elapsedTime);

		void clear();
		::Dynamic clear_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace models
} // end namespace scene

#endif /* INCLUDED_com_stencyl_models_scene_Layer */ 
