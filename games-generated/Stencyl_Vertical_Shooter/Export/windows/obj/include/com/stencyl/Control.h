// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_Control
#define INCLUDED_com_stencyl_Control

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(com,stencyl,Control)
HX_DECLARE_CLASS2(com,stencyl,JoystickButton)

namespace com{
namespace stencyl{


class HXCPP_CLASS_ATTRIBUTES Control_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Control_obj OBJ_;
		Control_obj();

	public:
		enum { _hx_ClassId = 0x77a2e652 };

		void __construct(::String name);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.Control")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.Control"); }
		static hx::ObjectPtr< Control_obj > __new(::String name);
		static hx::ObjectPtr< Control_obj > __alloc(hx::Ctx *_hx_ctx,::String name);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Control_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Control","\x3d","\x93","\xd2","\xe6"); }

		::String name;
		::Array< int > keys;
		::Array< ::Dynamic> buttons;
		bool pressed;
		bool released;
		bool down;
		Float pressure;
};

} // end namespace com
} // end namespace stencyl

#endif /* INCLUDED_com_stencyl_Control */ 
