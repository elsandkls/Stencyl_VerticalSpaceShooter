// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_models_Font
#define INCLUDED_com_stencyl_models_Font

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_stencyl_models_Resource
#include <com/stencyl/models/Resource.h>
#endif
HX_DECLARE_CLASS0(Xml)
HX_DECLARE_CLASS4(com,stencyl,graphics,fonts,BitmapFont)
HX_DECLARE_CLASS3(com,stencyl,models,Font)
HX_DECLARE_CLASS3(com,stencyl,models,Resource)

namespace com{
namespace stencyl{
namespace models{


class HXCPP_CLASS_ATTRIBUTES Font_obj : public  ::com::stencyl::models::Resource_obj
{
	public:
		typedef  ::com::stencyl::models::Resource_obj super;
		typedef Font_obj OBJ_;
		Font_obj();

	public:
		enum { _hx_ClassId = 0x4adf69a4 };

		void __construct(int ID,int atlasID,::String name,bool isDefault);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.models.Font")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.models.Font"); }
		static hx::ObjectPtr< Font_obj > __new(int ID,int atlasID,::String name,bool isDefault);
		static hx::ObjectPtr< Font_obj > __alloc(hx::Ctx *_hx_ctx,int ID,int atlasID,::String name,bool isDefault);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Font_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Font","\xef","\x89","\x99","\x2e"); }

		static void __boot();
		static  ::com::stencyl::graphics::fonts::BitmapFont defaultFont;
		static void resetStatics();
		static ::Dynamic resetStatics_dyn();

		 ::com::stencyl::graphics::fonts::BitmapFont font;
		Float fontScale;
		int letterSpacing;
		bool isDefault;
		bool graphicsLoaded;
		int getHeight();
		::Dynamic getHeight_dyn();

		void loadGraphics();

		void unloadGraphics();

		void reloadGraphics(int subID);

		void setLetterSpacing(Float spacing);
		::Dynamic setLetterSpacing_dyn();

		bool isBitmapFont( ::Xml xml);
		::Dynamic isBitmapFont_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace models

#endif /* INCLUDED_com_stencyl_models_Font */ 
