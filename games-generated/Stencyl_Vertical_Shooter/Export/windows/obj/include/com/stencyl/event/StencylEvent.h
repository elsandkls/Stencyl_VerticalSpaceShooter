// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_event_StencylEvent
#define INCLUDED_com_stencyl_event_StencylEvent

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_ad78b697d32a9e17_47_new)
HX_DECLARE_CLASS3(com,stencyl,event,StencylEvent)

namespace com{
namespace stencyl{
namespace event{


class HXCPP_CLASS_ATTRIBUTES StencylEvent_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef StencylEvent_obj OBJ_;
		StencylEvent_obj();

	public:
		enum { _hx_ClassId = 0x02e7739d };

		void __construct(int type,::String __o_data1);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.event.StencylEvent")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.event.StencylEvent"); }

		hx::ObjectPtr< StencylEvent_obj > __new(int type,::String __o_data1) {
			hx::ObjectPtr< StencylEvent_obj > __this = new StencylEvent_obj();
			__this->__construct(type,__o_data1);
			return __this;
		}

		static hx::ObjectPtr< StencylEvent_obj > __alloc(hx::Ctx *_hx_ctx,int type,::String __o_data1) {
			StencylEvent_obj *__this = (StencylEvent_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(StencylEvent_obj), true, "com.stencyl.event.StencylEvent"));
			*(void **)__this = StencylEvent_obj::_hx_vtable;
{
::String data1 = __o_data1.Default(HX_HCSTRING("","\x00","\x00","\x00","\x00"));
            	HX_STACKFRAME(&_hx_pos_ad78b697d32a9e17_47_new)
HXLINE(  48)		( ( ::com::stencyl::event::StencylEvent)(__this) )->type = type;
HXLINE(  49)		( ( ::com::stencyl::event::StencylEvent)(__this) )->data1 = data1;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~StencylEvent_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("StencylEvent","\xae","\x00","\x9a","\x34"); }

		static void __boot();
		static int AD_USER_OPEN;
		static int AD_USER_CLOSE;
		static int AD_LOADED;
		static int AD_FAILED;
		static int AD_CLICKED;
		static int FULL_AD_USER_OPEN;
		static int FULL_AD_USER_CLOSE;
		static int FULL_AD_LOADED;
		static int FULL_AD_FAILED;
		static int FULL_AD_CLICKED;
		static int PURCHASE_READY;
		static int PURCHASE_SUCCESS;
		static int PURCHASE_FAIL;
		static int PURCHASE_RESTORE;
		static int PURCHASE_CANCEL;
		static int PURCHASE_PRODUCTS_VERIFIED;
		static int PURCHASE_PRODUCT_VALIDATED;
		static int GAME_CENTER_READY;
		static int GAME_CENTER_SCORE;
		static int GAME_CENTER_ACHIEVEMENT;
		static int GAME_CENTER_ACHIEVEMENT_RESET;
		static int GAME_CENTER_READY_FAIL;
		static int GAME_CENTER_SCORE_FAIL;
		static int GAME_CENTER_ACHIEVEMENT_FAIL;
		static int GAME_CENTER_ACHIEVEMENT_RESET_FAIL;
		static int KEYBOARD_EVENT;
		static int KEYBOARD_DONE;
		static int KEYBOARD_SHOW;
		static int KEYBOARD_HIDE;
		int type;
		::String data1;
};

} // end namespace com
} // end namespace stencyl
} // end namespace event

#endif /* INCLUDED_com_stencyl_event_StencylEvent */ 
