// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_io_mbs_MbsCustomBlock
#define INCLUDED_com_stencyl_io_mbs_MbsCustomBlock

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_stencyl_io_mbs_MbsResource
#include <com/stencyl/io/mbs/MbsResource.h>
#endif
HX_DECLARE_CLASS4(com,stencyl,io,mbs,MbsCustomBlock)
HX_DECLARE_CLASS4(com,stencyl,io,mbs,MbsResource)
HX_DECLARE_CLASS2(mbs,core,ComposedType)
HX_DECLARE_CLASS2(mbs,core,MbsField)
HX_DECLARE_CLASS2(mbs,core,MbsObject)
HX_DECLARE_CLASS2(mbs,core,MbsType)
HX_DECLARE_CLASS2(mbs,io,MbsIO)
HX_DECLARE_CLASS2(mbs,io,MbsList)
HX_DECLARE_CLASS2(mbs,io,MbsListBase)

namespace com{
namespace stencyl{
namespace io{
namespace mbs{


class HXCPP_CLASS_ATTRIBUTES MbsCustomBlock_obj : public  ::com::stencyl::io::mbs::MbsResource_obj
{
	public:
		typedef  ::com::stencyl::io::mbs::MbsResource_obj super;
		typedef MbsCustomBlock_obj OBJ_;
		MbsCustomBlock_obj();

	public:
		enum { _hx_ClassId = 0x1ebb6927 };

		void __construct(::Dynamic data);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.io.mbs.MbsCustomBlock")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.io.mbs.MbsCustomBlock"); }
		static hx::ObjectPtr< MbsCustomBlock_obj > __new(::Dynamic data);
		static hx::ObjectPtr< MbsCustomBlock_obj > __alloc(hx::Ctx *_hx_ctx,::Dynamic data);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MbsCustomBlock_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MbsCustomBlock","\x1e","\xd1","\x3b","\xf9"); }

		static  ::mbs::core::MbsField blocktag;
		static  ::mbs::core::MbsField blocktype;
		static  ::mbs::core::MbsField code;
		static  ::mbs::core::MbsField global;
		static  ::mbs::core::MbsField gui;
		static  ::mbs::core::MbsField message;
		static  ::mbs::core::MbsField returnType;
		static  ::mbs::core::MbsField snippetID;
		static  ::mbs::core::MbsField blanks;
		static  ::mbs::core::ComposedType MBS_CUSTOM_BLOCK;
		static void initializeType();
		static ::Dynamic initializeType_dyn();

		static  ::mbs::io::MbsList new_MbsCustomBlock_list(::Dynamic data);
		static ::Dynamic new_MbsCustomBlock_list_dyn();

		 ::mbs::core::MbsType getMbsType();

		 ::mbs::io::MbsList _blanks;
		void allocateNew();

		::String getBlocktag();
		::Dynamic getBlocktag_dyn();

		void setBlocktag(::String _val);
		::Dynamic setBlocktag_dyn();

		::String getBlocktype();
		::Dynamic getBlocktype_dyn();

		void setBlocktype(::String _val);
		::Dynamic setBlocktype_dyn();

		::String getCode();
		::Dynamic getCode_dyn();

		void setCode(::String _val);
		::Dynamic setCode_dyn();

		bool getGlobal();
		::Dynamic getGlobal_dyn();

		void setGlobal(bool _val);
		::Dynamic setGlobal_dyn();

		::String getGui();
		::Dynamic getGui_dyn();

		void setGui(::String _val);
		::Dynamic setGui_dyn();

		::String getMessage();
		::Dynamic getMessage_dyn();

		void setMessage(::String _val);
		::Dynamic setMessage_dyn();

		::String getReturnType();
		::Dynamic getReturnType_dyn();

		void setReturnType(::String _val);
		::Dynamic setReturnType_dyn();

		int getSnippetID();
		::Dynamic getSnippetID_dyn();

		void setSnippetID(int _val);
		::Dynamic setSnippetID_dyn();

		 ::mbs::io::MbsList getBlanks();
		::Dynamic getBlanks_dyn();

		 ::mbs::io::MbsList createBlanks(int _length);
		::Dynamic createBlanks_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace io
} // end namespace mbs

#endif /* INCLUDED_com_stencyl_io_mbs_MbsCustomBlock */ 
