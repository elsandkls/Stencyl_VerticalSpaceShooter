// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_models_collision_Hitbox
#define INCLUDED_com_stencyl_models_collision_Hitbox

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_stencyl_models_collision_Mask
#include <com/stencyl/models/collision/Mask.h>
#endif
HX_DECLARE_CLASS4(com,stencyl,models,collision,Hitbox)
HX_DECLARE_CLASS4(com,stencyl,models,collision,Mask)

namespace com{
namespace stencyl{
namespace models{
namespace collision{


class HXCPP_CLASS_ATTRIBUTES Hitbox_obj : public  ::com::stencyl::models::collision::Mask_obj
{
	public:
		typedef  ::com::stencyl::models::collision::Mask_obj super;
		typedef Hitbox_obj OBJ_;
		Hitbox_obj();

	public:
		enum { _hx_ClassId = 0x6b714215 };

		void __construct(hx::Null< int >  __o_width,hx::Null< int >  __o_height,hx::Null< int >  __o_x,hx::Null< int >  __o_y,hx::Null< bool >  __o_solid,hx::Null< int >  __o_groupID);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.stencyl.models.collision.Hitbox")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.stencyl.models.collision.Hitbox"); }
		static hx::ObjectPtr< Hitbox_obj > __new(hx::Null< int >  __o_width,hx::Null< int >  __o_height,hx::Null< int >  __o_x,hx::Null< int >  __o_y,hx::Null< bool >  __o_solid,hx::Null< int >  __o_groupID);
		static hx::ObjectPtr< Hitbox_obj > __alloc(hx::Ctx *_hx_ctx,hx::Null< int >  __o_width,hx::Null< int >  __o_height,hx::Null< int >  __o_x,hx::Null< int >  __o_y,hx::Null< bool >  __o_solid,hx::Null< int >  __o_groupID);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Hitbox_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Hitbox","\xb8","\x61","\xbc","\x8b"); }

		 ::com::stencyl::models::collision::Hitbox clone();
		::Dynamic clone_dyn();

		virtual bool collideMask( ::com::stencyl::models::collision::Mask other);

		virtual bool collideHitbox( ::com::stencyl::models::collision::Hitbox other);
		::Dynamic collideHitbox_dyn();

		int get_x();
		::Dynamic get_x_dyn();

		int set_x(int value);
		::Dynamic set_x_dyn();

		int get_y();
		::Dynamic get_y_dyn();

		int set_y(int value);
		::Dynamic set_y_dyn();

		int get_width();
		::Dynamic get_width_dyn();

		int set_width(int value);
		::Dynamic set_width_dyn();

		int get_height();
		::Dynamic get_height_dyn();

		int set_height(int value);
		::Dynamic set_height_dyn();

		virtual void update();

		int _width;
		int _height;
		int _x;
		int _y;
};

} // end namespace com
} // end namespace stencyl
} // end namespace models
} // end namespace collision

#endif /* INCLUDED_com_stencyl_models_collision_Hitbox */ 
