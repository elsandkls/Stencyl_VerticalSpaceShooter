// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_graphics_BlendModes
#define INCLUDED_com_stencyl_graphics_BlendModes

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(com,stencyl,graphics,BlendModes)
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)

namespace com{
namespace stencyl{
namespace graphics{


class HXCPP_CLASS_ATTRIBUTES BlendModes_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef BlendModes_obj OBJ_;
		BlendModes_obj();

	public:
		enum { _hx_ClassId = 0x64b32d95 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="com.stencyl.graphics.BlendModes")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"com.stencyl.graphics.BlendModes"); }

		hx::ObjectPtr< BlendModes_obj > __new() {
			hx::ObjectPtr< BlendModes_obj > __this = new BlendModes_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< BlendModes_obj > __alloc(hx::Ctx *_hx_ctx) {
			BlendModes_obj *__this = (BlendModes_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BlendModes_obj), false, "com.stencyl.graphics.BlendModes"));
			*(void **)__this = BlendModes_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BlendModes_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("BlendModes","\xbf","\xe9","\x60","\x9b"); }

		static void __boot();
		static  ::haxe::ds::StringMap stringBlendMap;
		static  ::Dynamic get(::String blendName);
		static ::Dynamic get_dyn();

};

} // end namespace com
} // end namespace stencyl
} // end namespace graphics

#endif /* INCLUDED_com_stencyl_graphics_BlendModes */ 
