// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_stencyl_models_scene_Autotile
#define INCLUDED_com_stencyl_models_scene_Autotile

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(com,stencyl,models,scene,Autotile)

namespace com{
namespace stencyl{
namespace models{
namespace scene{


class HXCPP_CLASS_ATTRIBUTES Autotile_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Autotile_obj OBJ_;
		Autotile_obj();

	public:
		enum { _hx_ClassId = 0x7a402fb4 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="com.stencyl.models.scene.Autotile")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"com.stencyl.models.scene.Autotile"); }

		hx::ObjectPtr< Autotile_obj > __new() {
			hx::ObjectPtr< Autotile_obj > __this = new Autotile_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Autotile_obj > __alloc(hx::Ctx *_hx_ctx) {
			Autotile_obj *__this = (Autotile_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Autotile_obj), false, "com.stencyl.models.scene.Autotile"));
			*(void **)__this = Autotile_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Autotile_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Autotile","\x3d","\x4a","\xfb","\x1e"); }

		static void __boot();
		static int NO_AUTOTILE_DATA;
		static int CORNER_TL;
		static int CORNER_TR;
		static int CORNER_BR;
		static int CORNER_BL;
		static int SIDE_L;
		static int SIDE_T;
		static int SIDE_R;
		static int SIDE_B;
};

} // end namespace com
} // end namespace stencyl
} // end namespace models
} // end namespace scene

#endif /* INCLUDED_com_stencyl_models_scene_Autotile */ 
