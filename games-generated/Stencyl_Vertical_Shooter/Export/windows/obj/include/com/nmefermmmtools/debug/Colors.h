// Generated by Haxe 3.4.7
#ifndef INCLUDED_com_nmefermmmtools_debug_Colors
#define INCLUDED_com_nmefermmmtools_debug_Colors

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(com,nmefermmmtools,debug,Colors)

namespace com{
namespace nmefermmmtools{
namespace debug{


class HXCPP_CLASS_ATTRIBUTES Colors_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Colors_obj OBJ_;
		Colors_obj();

	public:
		enum { _hx_ClassId = 0x1ab8a54b };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="com.nmefermmmtools.debug.Colors")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"com.nmefermmmtools.debug.Colors"); }

		hx::ObjectPtr< Colors_obj > __new() {
			hx::ObjectPtr< Colors_obj > __this = new Colors_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Colors_obj > __alloc(hx::Ctx *_hx_ctx) {
			Colors_obj *__this = (Colors_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Colors_obj), false, "com.nmefermmmtools.debug.Colors"));
			*(void **)__this = Colors_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Colors_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Colors","\xd0","\x39","\x1b","\xfb"); }

		static void __boot();
		static int bg;
		static int fps;
		static int ms;
		static int mem;
		static int memmax;
		static ::String bgCSS;
		static ::String msCSS;
		static ::String fpsCSS;
		static ::String memCSS;
		static ::String memmaxCSS;
};

} // end namespace com
} // end namespace nmefermmmtools
} // end namespace debug

#endif /* INCLUDED_com_nmefermmmtools_debug_Colors */ 
