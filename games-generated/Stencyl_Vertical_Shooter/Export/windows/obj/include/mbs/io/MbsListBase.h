// Generated by Haxe 3.4.7
#ifndef INCLUDED_mbs_io_MbsListBase
#define INCLUDED_mbs_io_MbsListBase

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
HX_DECLARE_CLASS2(mbs,core,MbsObject)
HX_DECLARE_CLASS2(mbs,core,MbsType)
HX_DECLARE_CLASS2(mbs,io,MbsIO)
HX_DECLARE_CLASS2(mbs,io,MbsListBase)

namespace mbs{
namespace io{


class HXCPP_CLASS_ATTRIBUTES MbsListBase_obj : public  ::mbs::core::MbsObject_obj
{
	public:
		typedef  ::mbs::core::MbsObject_obj super;
		typedef MbsListBase_obj OBJ_;
		MbsListBase_obj();

	public:
		enum { _hx_ClassId = 0x51c3cd0d };

		void __construct(::Dynamic data, ::mbs::core::MbsType type);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="mbs.io.MbsListBase")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"mbs.io.MbsListBase"); }
		static hx::ObjectPtr< MbsListBase_obj > __new(::Dynamic data, ::mbs::core::MbsType type);
		static hx::ObjectPtr< MbsListBase_obj > __alloc(hx::Ctx *_hx_ctx,::Dynamic data, ::mbs::core::MbsType type);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MbsListBase_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MbsListBase","\x0d","\xc5","\x91","\x1c"); }

		 ::mbs::core::MbsType type;
		int elementAddress;
		int elementSize;
		int _length;
		void setAddress(int address);

		int allocateNew(int length);
		::Dynamic allocateNew_dyn();

		int length();
		::Dynamic length_dyn();

};

} // end namespace mbs
} // end namespace io

#endif /* INCLUDED_mbs_io_MbsListBase */ 
