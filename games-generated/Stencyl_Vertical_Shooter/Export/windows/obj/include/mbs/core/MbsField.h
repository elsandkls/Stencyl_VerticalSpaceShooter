// Generated by Haxe 3.4.7
#ifndef INCLUDED_mbs_core_MbsField
#define INCLUDED_mbs_core_MbsField

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(mbs,core,MbsField)
HX_DECLARE_CLASS2(mbs,core,MbsType)

namespace mbs{
namespace core{


class HXCPP_CLASS_ATTRIBUTES MbsField_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef MbsField_obj OBJ_;
		MbsField_obj();

	public:
		enum { _hx_ClassId = 0x7fdd0535 };

		void __construct(::String name, ::mbs::core::MbsType type,int address);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="mbs.core.MbsField")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"mbs.core.MbsField"); }
		static hx::ObjectPtr< MbsField_obj > __new(::String name, ::mbs::core::MbsType type,int address);
		static hx::ObjectPtr< MbsField_obj > __alloc(hx::Ctx *_hx_ctx,::String name, ::mbs::core::MbsType type,int address);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MbsField_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MbsField","\x7c","\x4c","\x2f","\xae"); }

		::String name;
		 ::mbs::core::MbsType type;
		int address;
		::String getName();
		::Dynamic getName_dyn();

		 ::mbs::core::MbsType getType();
		::Dynamic getType_dyn();

		int getAddress();
		::Dynamic getAddress_dyn();

};

} // end namespace mbs
} // end namespace core

#endif /* INCLUDED_mbs_core_MbsField */ 
