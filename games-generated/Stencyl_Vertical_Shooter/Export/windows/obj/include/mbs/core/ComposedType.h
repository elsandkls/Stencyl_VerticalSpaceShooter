// Generated by Haxe 3.4.7
#ifndef INCLUDED_mbs_core_ComposedType
#define INCLUDED_mbs_core_ComposedType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_mbs_core_MbsType
#include <mbs/core/MbsType.h>
#endif
HX_DECLARE_CLASS2(mbs,core,ComposedType)
HX_DECLARE_CLASS2(mbs,core,MbsField)
HX_DECLARE_CLASS2(mbs,core,MbsObject)
HX_DECLARE_CLASS2(mbs,core,MbsType)
HX_DECLARE_CLASS2(mbs,io,MbsIO)
HX_DECLARE_CLASS2(mbs,io,MbsList)
HX_DECLARE_CLASS2(mbs,io,MbsListBase)

namespace mbs{
namespace core{


class HXCPP_CLASS_ATTRIBUTES ComposedType_obj : public  ::mbs::core::MbsType_obj
{
	public:
		typedef  ::mbs::core::MbsType_obj super;
		typedef ComposedType_obj OBJ_;
		ComposedType_obj();

	public:
		enum { _hx_ClassId = 0x22c1a4e1 };

		void __construct(::String name);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="mbs.core.ComposedType")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"mbs.core.ComposedType"); }
		static hx::ObjectPtr< ComposedType_obj > __new(::String name);
		static hx::ObjectPtr< ComposedType_obj > __alloc(hx::Ctx *_hx_ctx,::String name);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ComposedType_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ComposedType","\x0c","\x93","\xe0","\xe7"); }

		 ::mbs::core::ComposedType parent;
		::Array< ::Dynamic> fields;
		void inherit( ::mbs::core::ComposedType type);
		::Dynamic inherit_dyn();

		 ::mbs::core::MbsField createField(::String name, ::mbs::core::MbsType type);
		::Dynamic createField_dyn();

		 ::mbs::core::ComposedType getParent();
		::Dynamic getParent_dyn();

		::Array< ::Dynamic> getFields();
		::Dynamic getFields_dyn();

		 ::Dynamic instantiator;
		Dynamic instantiator_dyn() { return instantiator;}
		void setInstantiator( ::Dynamic instantiator);
		::Dynamic setInstantiator_dyn();

		 ::mbs::core::MbsObject createInstance(::Dynamic data);

		 ::mbs::io::MbsList createList(::Dynamic data);
		::Dynamic createList_dyn();

};

} // end namespace mbs
} // end namespace core

#endif /* INCLUDED_mbs_core_ComposedType */ 
