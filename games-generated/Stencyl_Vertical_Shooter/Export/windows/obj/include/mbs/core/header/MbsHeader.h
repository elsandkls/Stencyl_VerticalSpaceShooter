// Generated by Haxe 3.4.7
#ifndef INCLUDED_mbs_core_header_MbsHeader
#define INCLUDED_mbs_core_header_MbsHeader

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_mbs_core_MbsObject
#include <mbs/core/MbsObject.h>
#endif
HX_DECLARE_CLASS2(mbs,core,ComposedType)
HX_DECLARE_CLASS2(mbs,core,MbsField)
HX_DECLARE_CLASS2(mbs,core,MbsObject)
HX_DECLARE_CLASS2(mbs,core,MbsType)
HX_DECLARE_CLASS3(mbs,core,header,MbsHeader)
HX_DECLARE_CLASS2(mbs,io,MbsIO)
HX_DECLARE_CLASS2(mbs,io,MbsList)
HX_DECLARE_CLASS2(mbs,io,MbsListBase)

namespace mbs{
namespace core{
namespace header{


class HXCPP_CLASS_ATTRIBUTES MbsHeader_obj : public  ::mbs::core::MbsObject_obj
{
	public:
		typedef  ::mbs::core::MbsObject_obj super;
		typedef MbsHeader_obj OBJ_;
		MbsHeader_obj();

	public:
		enum { _hx_ClassId = 0x612195a1 };

		void __construct(::Dynamic data);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="mbs.core.header.MbsHeader")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"mbs.core.header.MbsHeader"); }
		static hx::ObjectPtr< MbsHeader_obj > __new(::Dynamic data);
		static hx::ObjectPtr< MbsHeader_obj > __alloc(hx::Ctx *_hx_ctx,::Dynamic data);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MbsHeader_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MbsHeader","\x8b","\x1b","\xa5","\x37"); }

		static  ::mbs::core::MbsField version;
		static  ::mbs::core::MbsField typeTableHash;
		static  ::mbs::core::MbsField typeTablePointer;
		static  ::mbs::core::MbsField stringTablePointer;
		static  ::mbs::core::MbsField root;
		static  ::mbs::core::ComposedType MBS_HEADER;
		static void initializeType();
		static ::Dynamic initializeType_dyn();

		static  ::mbs::io::MbsList new_MbsHeader_list(::Dynamic data);
		static ::Dynamic new_MbsHeader_list_dyn();

		 ::mbs::core::MbsType getMbsType();

		void allocateNew();
		::Dynamic allocateNew_dyn();

		int getVersion();
		::Dynamic getVersion_dyn();

		void setVersion(int _val);
		::Dynamic setVersion_dyn();

		int getTypeTableHash();
		::Dynamic getTypeTableHash_dyn();

		void setTypeTableHash(int _val);
		::Dynamic setTypeTableHash_dyn();

		int getTypeTablePointer();
		::Dynamic getTypeTablePointer_dyn();

		void setTypeTablePointer(int _val);
		::Dynamic setTypeTablePointer_dyn();

		int getStringTablePointer();
		::Dynamic getStringTablePointer_dyn();

		void setStringTablePointer(int _val);
		::Dynamic setStringTablePointer_dyn();

		 ::Dynamic getRoot();
		::Dynamic getRoot_dyn();

		void setRoot( ::Dynamic _val);
		::Dynamic setRoot_dyn();

};

} // end namespace mbs
} // end namespace core
} // end namespace header

#endif /* INCLUDED_mbs_core_header_MbsHeader */ 
