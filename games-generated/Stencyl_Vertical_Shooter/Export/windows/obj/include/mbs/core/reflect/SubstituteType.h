// Generated by Haxe 3.4.7
#ifndef INCLUDED_mbs_core_reflect_SubstituteType
#define INCLUDED_mbs_core_reflect_SubstituteType

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_mbs_core_ComposedType
#include <mbs/core/ComposedType.h>
#endif
HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(mbs,core,ComposedType)
HX_DECLARE_CLASS2(mbs,core,MbsField)
HX_DECLARE_CLASS2(mbs,core,MbsType)
HX_DECLARE_CLASS3(mbs,core,reflect,SubstituteType)

namespace mbs{
namespace core{
namespace reflect{


class HXCPP_CLASS_ATTRIBUTES SubstituteType_obj : public  ::mbs::core::ComposedType_obj
{
	public:
		typedef  ::mbs::core::ComposedType_obj super;
		typedef SubstituteType_obj OBJ_;
		SubstituteType_obj();

	public:
		enum { _hx_ClassId = 0x23d66ad4 };

		void __construct(::String name,::String parentName,::Array< ::Dynamic> fields,int size);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="mbs.core.reflect.SubstituteType")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"mbs.core.reflect.SubstituteType"); }
		static hx::ObjectPtr< SubstituteType_obj > __new(::String name,::String parentName,::Array< ::Dynamic> fields,int size);
		static hx::ObjectPtr< SubstituteType_obj > __alloc(hx::Ctx *_hx_ctx,::String name,::String parentName,::Array< ::Dynamic> fields,int size);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SubstituteType_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("SubstituteType","\x54","\x78","\x0b","\x62"); }

		::String parentName;
		void mapTypes( ::haxe::ds::StringMap typeMap);
		::Dynamic mapTypes_dyn();

};

} // end namespace mbs
} // end namespace core
} // end namespace reflect

#endif /* INCLUDED_mbs_core_reflect_SubstituteType */ 
